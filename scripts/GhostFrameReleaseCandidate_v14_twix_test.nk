#! /Applications/Nuke15.1v2/Nuke15.1v2.app/Contents/MacOS/libnuke-15.1.2.dylib -nx
#write_info Write9 file:"/Volumes/Dettifoss/itaki/GhostFrameExtractor/TEST_FOOTAGE/3D_box_fast/3D_box_fast.%04d.exr" format:"1920 1080 1" chans:":rgba.red:rgba.green:rgba.blue:rgba.alpha:" framerange:"1 185" fps:"0" colorspace:"default (linear)" datatype:"16 bit half" transfer:"unknown" views:"main" colorManagement:"Nuke"
version 15.1 v2
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="0" y="25" w="5120" h="2013" maximized="1" screen="0">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="5076" stretch="1"/>
            <splitter orientation="1">
                <split size="1996"/>
                <dock id="" activePageId="DAG.1" focus="true">
                    <page id="DAG.1"/>
                </dock>
                <split size="910"/>
                <dock id="" activePageId="Properties.1">
                    <page id="Properties.1"/>
                    <page id="uk.co.thefoundry.backgroundrenderview.1"/>
                    <page id="Scenegraph.1"/>
                </dock>
                <split size="2162"/>
                <splitter orientation="2">
                    <split size="1604"/>
                    <dock id="" activePageId="Viewer.1">
                        <page id="Viewer.1"/>
                    </dock>
                    <split size="389"/>
                    <splitter orientation="1">
                        <split size="473"/>
                        <dock id="" activePageId="Pixel Analyzer.1">
                            <page id="Pixel Analyzer.1"/>
                        </dock>
                        <split size="567"/>
                        <dock id="" activePageId="uk.co.thefoundry.histogram.1">
                            <page id="uk.co.thefoundry.histogram.1"/>
                        </dock>
                        <split size="590"/>
                        <dock id="" activePageId="uk.co.thefoundry.waveformscope.1">
                            <page id="uk.co.thefoundry.waveformscope.1"/>
                        </dock>
                        <split size="520"/>
                        <dock id="" activePageId="uk.co.thefoundry.vectorscope.1">
                            <page id="uk.co.thefoundry.vectorscope.1"/>
                        </dock>
                    </splitter>
                </splitter>
            </splitter>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name /Users/michaelmcreynolds/Dropbox/GhostFrameExtractor/scripts/GhostFrameReleaseCandidate_v14_twis_test.nk
 project_directory "\[python \{nuke.script_directory()\}]"
 frame 11
 last_frame 185
 lock_range true
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 colorManagement Nuke
 workingSpaceLUT linear
 monitorLut sRGB
 monitorOutLUT rec709
 int8Lut sRGB
 int16Lut sRGB
 logLut Cineon
 floatLut linear
 addUserKnob {20 User}
 addUserKnob {7 my_new_knob l Multiply_}
 addUserKnob {7 my_new_knob1 l Multiply_}
}
BackdropNode {
 inputs 0
 name BackdropNode1
 tile_color 0x666666ff
 label "<center><img src=\"DustBust.png\"> Ghost Frame Extraction Example"
 note_font_size 30
 xpos 452
 ypos -655
 bdwidth 367
 bdheight 549
}
BackdropNode {
 inputs 0
 name BackdropNode16
 tile_color 0x7f7f7f01
 label "<center><img src=\"Shader.png\"> Ghost Frame Footage Creator\n"
 note_font_size 30
 xpos 1038
 ypos -643
 bdwidth 703
 bdheight 1281
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x27023601
 label "<center><img src=\"Read.png\"> You will need to convert mp4s to prores or exr before using with GhostFrameExtractor"
 note_font_size 30
 xpos 149
 ypos -815
 bdwidth 261
 bdheight 395
}
Camera3 {
 inputs 0
 shutteroffset centred
 name Camera4
 note_font Gotham
 xpos 1241
 ypos -92
}
CheckerBoard2 {
 inputs 0
 format "256 256 0 0 256 256 1 square_256"
 boxsize 180
 name CheckerBoard4
 note_font Gotham
 xpos 1486
 ypos -508
}
Cube {
 translate {{curve x1 -3 x40 2.1 x80 -3.1} {curve x1 0} {curve x1 -11 x40 -8 x80 -12}}
 rotate {{curve x1 0 x40 90 x80 180} {curve x1 0 x40 92.8 x80 180} {curve x1 0 x40 184 x80 360}}
 name Cube1
 note_font Gotham
 xpos 1486
 ypos -354
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 shutteroffset centred
 motion_vectors_type distance
 MB_channel motion
 name ScanlineRender5
 note_font Gotham
 xpos 1486
 ypos -71
}
TimeBlur {
 divisions 100
 shutteroffset centred
 shuttercustomoffset 0
 name TimeBlur1
 note_font Gotham
 xpos 1485
 ypos -4
}
VectorBlur2 {
 uv motion
 scale 3
 name VectorBlur3
 note_font Gotham
 xpos 1486
 ypos 38
 disable true
}
Dot {
 name Dot7
 note_font "Gotham Bold Italic"
 note_font_size 24
 note_font_color 0xff
 xpos 1520
 ypos 72
}
set N229a6600 [stack 0]
ColorWheel {
 inputs 0
 gamma 0.45
 name ColorWheel3
 note_font Gotham
 xpos 1098
 ypos 117
}
Transform {
 rotate {{curve x1 0 x80 105}}
 scale {{curve x1 2.46 x80 2.08}}
 center {960 540}
 shutteroffset centred
 shuttercustomoffset {{centred}}
 name Transform4
 note_font Gotham
 xpos 1098
 ypos 189
}
Merge2 {
 inputs 2
 bbox B
 name Merge10
 label "\[if \{\[value mix]<1\} \{ value mix \}]"
 note_font Gotham
 xpos 1394
 ypos 185
}
push 0
push $N229a6600
Group {
 inputs 3
 name GhostFrameFootageCreator
 onCreate "def find_logo(logo):\n    nukepaths = nuke.pluginPath()\n    for path in nukepaths:\n        candidate_path = os.path.join(path, logo)\n        if os.path.exists(candidate_path):\n            return candidate_path\n    return False\n\ndef set_logo(logo_path):\n    n = nuke.thisNode()\n    if logo_path:\n        html_path = f\"<img src='\{logo_path\}' width='50'>   \"\n    else:\n        html_path = \"<span style='font-size:45px;'>&#x1F39E;</span>\"\n\n    html_header = (\n        f\"<a href='https://www.itaki.com/ghostframeextractor-for-nuke/' style='text-decoration: none;'>\"\n        f\"<div><span style='color:#F5F9F1;'>\{html_path\}</span>\"\n        f\"<font size='6'><span style='color:#F5F9F1;'>GhostFrame</span>\"\n        f\"<span style='color:#FFA100;'>FootageCreator</span>\"\n        f\"<font size='3'><span style='color:#CFE6B2;'></span>\"\n        f\"<span style='color:#DFD3E7;'>v1.0</span></font></font></div></a>\"\n    )\n    n\['header'].setValue(html_header)\n    \nlogo = 'GhostFrameFootageCreator.png'\nlogo_path = find_logo(logo)\nset_logo(logo_path)"
 knobChanged "import nuke\ndef set_volume_color(color):\n    gizmo.knob('custom_color').setVisible(False)\n    if color == 'blue':\n        nuke.toNode('ColorSwitch').knob('which').setValue(0)\n    elif color == 'green':\n        nuke.toNode('ColorSwitch').knob('which').setValue(1)\n    elif color == 'custom':\n        nuke.toNode('ColorSwitch').knob('which').setValue(2)\n        gizmo.knob('custom_color').setVisible(True)\n\ndef toggle_text_overlays(overlay):\n    gizmo\['font'].setVisable(overlay)\n    gizmo\['font_scale'].setVisable(overlay)\n    all_nodes = nuke.allNodes()\n    if overlay:\n        for node in all_nodes:\n            if node.Class() == 'Text2':\n                node.knob('disable').setValue(False)\n    else:\n        for node in all_nodes:\n            if node.Class() == 'Text2':\n                node.knob('disable').setValue(True)\n                \ndef toggle_text_overlays(overlay):\n    gizmo\['font'].setVisible(overlay)\n    gizmo\['font_scale'].setVisible(overlay)\n    text_nodes = \[node for node in nuke.allNodes() if node.Class() == 'Text2']\n    for node in text_nodes:\n        node\['disable'].setValue(not overlay)\n\ndef font_selector():\n    font_family, font_style = gizmo.knob('font').getValue()\n    text_nodes = \[node for node in nuke.allNodes() if node.Class() == 'Text2']\n    for node in text_nodes:\n        try:\n            node\['font'].setValue(font_family, font_style)\n        except:\n            pass\ndef set_font_scale(scale):\n    text_nodes = \[node for node in nuke.allNodes() if node.Class() == 'Text2']\n    for node in text_nodes:\n        node\['global_font_scale'].setValue(scale)\n\n\ngizmo = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == 'volume_color':\n    color = k.value()\n    set_volume_color(color)\nif k.name() == 'overlay':\n    overlay = k.value()\n    toggle_text_overlays(overlay)\nif k.name() == 'font':\n    font_selector()\nif k.name() == 'font_scale':\n    scale = k.value()\n    set_font_scale(scale)\n\n"
 tile_color 0xff00bfff
 xpos 1486
 ypos 310
 addUserKnob {20 ghost_frame_footage_creator l GhostFrameFootageCreator}
 addUserKnob {26 header l "" t "Plug in the footage you want to turn into ghost frame test footage. This gizmo alternates placing the matted elements directly on the selected 'volume' color with full complete frames.\n<br>\nIf your footage lacks a matte channel, you can add one.\n<br>\n<i>Note: Since ghost frame footage is typically shot at 48 frames per second, slow-motion footage works best.</i>\n" +STARTLINE T "<a href='https://www.itaki.com/ghostframeextractor-for-nuke/' style='text-decoration: none;'><div><span style='color:#F5F9F1;'><img src='/Users/michaelmcreynolds/Dropbox/_Library/nuke/NukeShared/Repository/Nodes/Image/GhostFrameFootageCreator.png' width='50'>   </span><font size='6'><span style='color:#F5F9F1;'>GhostFrame</span><span style='color:#FFA100;'>FootageCreator</span><font size='3'><span style='color:#CFE6B2;'></span><span style='color:#DFD3E7;'>v1.0</span></font></font></div></a>"}
 addUserKnob {26 ""}
 addUserKnob {4 volume_color l "<font color=#FFA100>volume color</font>" t "<div style=\"position: relative; display: inline-block; border-bottom: 1px dotted black;\"><span style=\"font-weight:bold;\">volume_color:</span><span class=\"tooltiptext\">The color used for the volume in the footage. Options: blue, green, custom.</span></div>\n" M {blue green custom "" "" "" ""}}
 addUserKnob {18 custom_color l "custom color" +HIDDEN}
 custom_color {1 0 1}
 addUserKnob {6 custom_color_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 overlay l "show text overlays" t "<div style=\"position: relative; display: inline-block; border-bottom: 1px dotted black;\"><span style=\"font-weight:bold;\">overlay:</span><span class=\"tooltiptext\">Toggle to show or hide text overlays on the footage.</span></div>\n" +STARTLINE}
 overlay true
 addUserKnob {84 font l "" -STARTLINE}
 font {{ Verdana : Regular : Supplemental/Verdana.ttf : 0 }}
 addUserKnob {7 font_scale l "font scale" R 0 2}
 font_scale 0.5
 addUserKnob {26 ""}
 addUserKnob {26 website l "" +STARTLINE T "<font size=3 color =#444444>by        <a href='https://itaki.com' style='color:#666666;'>itaki</a></font>"}
 addUserKnob {6 color_rgb_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
}
 Input {
  inputs 0
  name Input
  label "\[value number]"
  xpos -997
  ypos -171
 }
set N22a45000 [stack 0]
 Input {
  inputs 0
  name Inputmask
  label "\[value number]"
  xpos -748
  ypos -172
  number 1
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input1]"}}
  name Switch1
  label "\[value which]"
  xpos -748
  ypos 254
 }
 Dot {
  name Dot2
  note_font_size 24
  note_font_color 0xff
  xpos -714
  ypos 321
 }
push $N22a45000
 Dot {
  name Dot3
  note_font_size 24
  note_font_color 0xff
  xpos -963
  ypos 207
 }
set N22a43000 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -997
  ypos 313
  disable {{"!\[exists parent.input0]"}}
 }
 Constant {
  inputs 0
  color {{parent.custom_color x5 0} {parent.custom_color x5 0} {parent.custom_color x5 0} {parent.custom_color x5 0.88}}
  color_panelDropped true
  name ConstantCustom
  label "\[value color.a]"
  note_font_size 15
  xpos -1239
  ypos 5
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle1
  label "\[value in1] - \[value out1]"
  xpos -1239
  ypos 125
 }
 Constant {
  inputs 0
  color {0 1 0 1}
  color_panelDropped true
  name ConstantGreen
  label "\[value color.a]"
  note_font_size 15
  xpos -1333
  ypos 6
 }
 Constant {
  inputs 0
  color {0 0 1 1}
  color_panelDropped true
  name ConstantBlue
  label "\[value color.a]"
  note_font_size 15
  xpos -1431
  ypos 5
 }
 Switch {
  inputs 3
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name ColorSwitch
  label "\[value which]"
  xpos -1313
  ypos 320
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "Ghost Frame \[expr \[expr \[frame] / 2] +1]"
  old_message {{71 104 111 115 116 32 70 114 97 109 101 32 49}
    }
  old_expression_markers {{12 12}
    }
  box {0 0 {width} {height}}
  yjustify bottom
  transforms {{0 2}
    }
  cursor_position 40
  font {{ Verdana : Regular : Supplemental/Verdana.ttf : 0 }}
  global_font_scale 0.5
  center {640 360}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 720}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 640 360 0 0 1 1 0 0 0 0}
    }
  name GFText
  xpos -1313
  ypos 393
 }
 Reformat {
  format {{{input2.format}}}
  name ConstantReformat
  xpos -1313
  ypos 417
 }
 Input {
  inputs 0
  name Inputbg
  label "\[value number]"
  xpos -1678
  ypos -118
  number 2
 }
 Dot {
  name Dot1
  note_font_size 24
  note_font_color 0xff
  xpos -1644
  ypos 554
 }
push $N22a43000
 Dot {
  name Dot4
  note_font_size 24
  note_font_color 0xff
  xpos -1500
  ypos 207
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input2]"}}
  name Switch3
  label "\[value which]"
  xpos -1534
  ypos 546
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "Hero Frame \[expr \[frame] / 2]"
  old_message {{72 101 114 111 32 70 114 97 109 101 32 49 55}
    }
  old_expression_markers {{11 12}
    }
  box {0 0 {width} {height}}
  xjustify right
  yjustify bottom
  transforms {{0 2}
    }
  cursor_position 29
  font {{ Verdana : Regular : Supplemental/Verdana.ttf : 0 }}
  global_font_scale 0.5
  center {640 360}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 720}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 640 360 0 0 1 1 0 0 0 0}
    }
  name HFText
  xpos -1534
  ypos 592
 }
 Switch {
  inputs 2
  which {{"frame % 2"}}
  name Switch2
  label "\[value which]"
  xpos -1313
  ypos 587
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge3
  label "\[if \{\[value mix]<1\} \{ value mix \}]"
  xpos -1002
  ypos 592
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "Original Frame \[frame]"
  old_message {{79 114 105 103 105 110 97 108 32 70 114 97 109 101 32 49}
    }
  old_expression_markers {{15 15}
    }
  box {0 0 {width} {height}}
  transforms {{0 2}
    }
  cursor_position 14
  font {{ Verdana : Regular : Supplemental/Verdana.ttf : 0 }}
  global_font_scale 0.5
  center {640 360}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 720}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 640 360 0 0 1 1 0 0 0 0}
    }
  name OFText
  xpos -1002
  ypos 616
 }
 Output {
  name Output1
  xpos -1002
  ypos 787
 }
end_group
Write {
 channels rgba
 file /Volumes/Dettifoss/itaki/GhostFrameExtractor/TEST_FOOTAGE/3D_box_fast/3D_box_fast.####.exr
 file_type exr
 autocrop true
 compression "PIZ Wavelet (32 scanlines)"
 first_part rgba
 create_directories true
 version 5
 ocioColorspace scene_linear
 display default
 view sRGB
 name Write9
 note_font Gotham
 xpos 1486
 ypos 518
}
Read {
 inputs 0
 file_type mov
 file ../test_footage/LLDP_close_up_GF_denoised.mp4
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 last 193
 origlast 193
 origset true
 auto_alpha true
 name Read1
 tile_color 0x989898ff
 note_font Gotham
 xpos 244
 ypos -530
}
Read {
 inputs 0
 file_type mov
 file ../test_footage/3D_box_fast_v01.mov
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 last 80
 origlast 80
 origset true
 auto_alpha true
 name Read2
 tile_color 0x989898ff
 note_font Gotham
 xpos 599
 ypos -553
}
Group {
 name GhostFrameExtractor
 onCreate "import os\nimport nuke\n\ndef find_logo(logo):\n    nukepaths = nuke.pluginPath()\n    for path in nukepaths:\n        candidate_path = os.path.join(path, logo)\n        if os.path.exists(candidate_path):\n            return candidate_path\n    return False\n\ndef set_logo(logo_path):\n    n = nuke.thisNode()\n    version = n.knob('version').value()\n    if logo_path:\n        html_path = f\"<img src='\{logo_path\}' width='50'>   \"\n    else:\n        html_path = \"<span style='font-size:45px;'>&#x1F47B;</span>\"\n\n    html_header = (\n        f\"<a href='https://www.itaki.com/ghostframeextractor-for-nuke/' style='text-decoration: none;'>\"\n        \n        f\"<div><span style='color:#F5F9F1;'>\{html_path\}</span>\"\n        f\"<font size='6'><span style='color:#F5F9F1;'>GhostFrame</span>\"\n        f\"<span style='color:#FFA100;'>Extractor</span>\"\n        f\"<font size='3'><span style='color:#CFE6B2;'></span>\"\n        f\"<span style='color:#DFD3E7;'>\{version\}</span></font></font></div></a>\"\n    )\n    n\['header'].setValue(html_header)\n\n\ndef check_plugs(plugins):\n    all_plugins = nuke.plugins()\n\n    for plugin in all_plugins:\n        for key in plugins:\n            if key in plugin:\n                plugins\[key] = True\n\n    nodes_to_delete = \['Twixtor', 'S_Retime', 'BCC3Optical_Flow', 'NNFlowVector']\n\n    for plugin in plugins:\n        if plugins\[plugin] == True:\n            print(f'FOUND \{plugin\}')\n            gizmo.knob(plugin).setValue(True)\n        else:\n            print(f'not found \{plugin\}')\n            gizmo.knob(plugin).setValue(False)\n            \n            # Delete nodes for unavailable plugins\n            if plugin in nodes_to_delete:\n                delete_plugin_nodes(gizmo, plugin)\n\n    return plugins\n\ndef delete_plugin_nodes(parent_node, plugin_name):\n    for node in parent_node.nodes():\n        if plugin_name in node.name():\n            nuke.delete(node)\n    print(f\"Deleted nodes containing '\{plugin_name\}'\")\n\nplugins = \{'forward': True, 'backward': True, 'average_motion': True, 'Blend': True, 'Kronos' : True, 'OFlow' : True, 'VectorGenerator' : True, 'SmartVectors': True, 'ABME' : False, 'RAFT' : False, 'NNFlowVector' : False, 'Twixtor' : False, 'BCC3Optical_Flow' : False, 'S_Retime' : False \}\n# Use a variable to store the current node\ngizmo = nuke.thisNode()\ninstalled_plugins = check_plugs(plugins)\n            \n# List all the options\nparent_methods = \['interpolate', 'vector extract']\nall_interpolation_methods = \['Blend', 'Kronos', 'OFlow', 'ABME', 'Twixtor','BCC3OpticalFlow', 'S_Retime']\nall_vector_generators = \['VectorGenerator', 'SmartVectors', 'ABME', 'RAFT', 'NNFlowVector' ]\nall_vector_post_processors = \['forward', 'backward', 'average_motion', 'OFlow', 'Kronos',  'Twixtor']\n\navailable_interpolation_methods = \[method for method in all_interpolation_methods if method in installed_plugins and installed_plugins\[method]]\navailable_vector_generators = \[generator for generator in all_vector_generators if generator in installed_plugins and installed_plugins\[generator]]\navailable_post_processors = \[process for process in all_vector_post_processors if process in installed_plugins and installed_plugins\[process]]\n# Set all the options\ngizmo.knob('parent_method').setValues(parent_methods)\ngizmo.knob('matte_interpolation').setValues(available_interpolation_methods)\ngizmo.knob('hero_interpolation').setValues(available_interpolation_methods)\ngizmo.knob('vector_generator').setValues(available_vector_generators)\ngizmo.knob('vector_post').setValues(available_post_processors)\n\nlogo = 'GhostFrameExtractor.png'\nlogo_path = find_logo(logo)\nset_logo(logo_path)"
 knobChanged "import nuke\n\ntesting = False\n\n# Helper function to get a node\ndef get_node(name):\n    node = nuke.toNode(name)\n    if node is None and testing:\n        print(f\"Node '\{name\}' not found.\")\n    return node\n\n# At the beginning of the file, add this function:\ndef node_exists(node_name):\n    return nuke.exists(node_name)\n\n# Helper function to set knob values\ndef set_knob_value(node_name, knob_values):\n    if not node_exists(node_name):\n        if testing:\n            print(f\"Node '\{node_name\}' not found. Skipping knob value setting.\")\n        return\n    node = nuke.toNode(node_name)\n    if node:\n        for knob_name, knob_value in knob_values.items():\n            knob = node.knob(knob_name)\n            if knob:\n                if isinstance(knob_value, list):\n                    if knob.isAnimated():\n                        knob.clearAnimated()\n                        knob.setAnimated()\n                        for value, frame in knob_value:\n                            knob.setValueAt(value, frame)\n                    else:\n                        knob.setValue(knob_value\[0]\[1])\n                else:\n                    knob.setValue(knob_value)\n\ndef get_frame_range():\n    input_node = gizmo.input(0)\n    if input_node is not None:\n        first_frame = input_node.firstFrame()\n        last_frame = input_node.lastFrame()\n        set_knob_value('InputFrameRange', \{'first_frame': first_frame, 'last_frame': last_frame\})\n        set_knob_value('MatteFrameHold', \{'firstFrame': first_frame + 1\})\n\n        matte_frame = 1 if add_matte_frame() else 0\n        last_frame += matte_frame\n        set_knob_value('AppendMatteFrame', \{'firstFrame': first_frame, 'lastFrame': last_frame\})\n        set_knob_value('EndFrameHold', \{'firstFrame': last_frame - 1\})\n        last_frame += add_end_frame(first_frame, last_frame)\n        set_knob_value('AppendEndFrame', \{'firstFrame': first_frame, 'lastFrame': last_frame\})\n        set_knob_value('OutputFrameRange', \{'first_frame': first_frame, 'last_frame': last_frame\})\n        \n        return \[first_frame, last_frame]\n    return \[1, 100]\n\ndef add_matte_frame():\n    add_frame_switch = get_node('add_frame_switch')\n    if gizmo\['add_frame'].value():\n        add_frame_switch\['which'].setValue(1)\n        return True\n    else:\n        add_frame_switch\['which'].setValue(0)\n        return False\n\ndef add_end_frame(first_frame, last_frame):\n    total_frames = last_frame - first_frame\n    add_end_frame_switch = get_node('add_end_frame_switch')\n    if total_frames % 2 != 0:\n        add_end_frame_switch\['which'].setValue(1)\n        return 1\n    else:\n        add_end_frame_switch\['which'].setValue(0)\n        return 0\n\ndef propogate_frame_range(frame_range):\n    f, l = frame_range\n    new_last_frame = ((l - f) * 2) + f\n    hero_last_frame = (l - f - 1) // 2 + f\n    if testing:\n        print(f'Refreshing frame range, first frame \{f\}, last frame \{l\}')\n\n    nodes = \{\n        'PlateRetime': \{'input.first': f, 'input.last': l, 'output.first': f, 'output.last': new_last_frame\},\n        'OFlowPlateBlend': \{'input.first': f, 'input.last': l, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'KronosPlate': \{'input.first': f, 'input.last': l, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'OFlowPlate': \{'input.first': f, 'input.last': l, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'TwixtorPlate': \{'StartFrame': f, 'LastFrame': l, 'Frame': \[(f, f), (l, new_last_frame)]\},\n        'BCC3Optical_Flow1': \{'start_offset_frame': f\},\n        'S_Retime1': \{'start_frame': f\},\n        'RetimeInterpolated': \{'input.first': f + 1, 'input.last': new_last_frame, 'output.first': f, 'output.last': l\},\n        'HeroRetime': \{'input.first': f + 1, 'input.last': l, 'output.first': f, 'output.last': hero_last_frame\},\n        'DoublePlateFrames': \{'input.first': f, 'input.last': new_last_frame, 'timingFrame2': \[(f, f), ((new_last_frame * 2) - 1, new_last_frame)]\},\n        'OFlowBlend': \{'input.first': f, 'input.last': l - 1, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'KronosHero': \{'input.first': f, 'input.last': l - 1, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'OFlowHero': \{'input.first': f, 'input.last': l - 1, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'TwixtorHero': \{'StartFrame': f, 'LastFrame': l, 'Frame': \[(f, f), (l, new_last_frame)]\},\n        'OutputFrameRange2': \{'first_frame': f, 'last_frame': hero_last_frame\},\n        'RetimeExtracted': \{'input.first': f, 'input.last': new_last_frame, 'output.first': f, 'output.last': l\}\n    \}\n\n    for node_name, knob_values in nodes.items():\n        set_knob_value(node_name, knob_values)\n\ndef output_type(output):\n    if output == 'hero plate':\n        set_knob_value('output_switch', \{'which': 1\})\n        gizmo\['tile_color'].setValue(131583)\n        gizmo\['matte_extraction_group'].setVisible(False)\n\n    else:\n        set_knob_value('output_switch', \{'which': 0\})\n        gizmo\['tile_color'].setValue(131071)\n        gizmo\['matte_extraction_group'].setVisible(True)\n\ndef select_parent_method(parent_method):\n    method_index = \{'interpolate': 0, 'vector extract': 1, 'average': 2\}.get(parent_method, 0)\n    set_knob_value('parent_method_switch', \{'which': method_index\})\n    gizmo\['interpolation_group'].setVisible(parent_method == 'interpolate')\n    gizmo\['extract_group'].setVisible(parent_method in \['vector extract', 'average'])\n\ndef select_matte_interpolation_method(interpolation_method):\n    method_index = \{'Blend': 0, 'Kronos': 1, 'OFlow': 2, 'ABME': 3, 'Twixtor': 4, 'BCC3Optical_Flow': 5, 'S_Retime': 6\}.get(interpolation_method, 0)\n    set_knob_value('interpolated_switch', \{'which': method_index\})\n    gizmo\['giblend'].setVisible(interpolation_method == 'Blend')\n    gizmo\['gikronos'].setVisible(interpolation_method == 'Kronos')\n    gizmo\['gioflow'].setVisible(interpolation_method == 'OFlow')\n    gizmo\['giabme'].setVisible(interpolation_method == 'ABME')\n    gizmo\['gitwixtor'].setVisible(interpolation_method == 'Twixtor')\n    gizmo\['giboris'].setVisible(interpolation_method == 'BCC3Optical_Flow')\n    gizmo\['gisapphire'].setVisible(interpolation_method == 'S_Retime')\n    set_knob_value('ABME_Retime_interpolate', \{'disable': interpolation_method != 'ABME'\})\n    \n    if node_exists('TwixtorPlate'):\n        set_knob_value('TwixtorPlate', \{'disable': interpolation_method != 'Twixtor'\})\n    if node_exists('BCC3Optical_Flow1'):\n        set_knob_value('BCC3Optical_Flow1', \{'disable': interpolation_method != 'BCC3Optical_Flow'\})\n    if node_exists('S_Retime1'):\n        set_knob_value('S_Retime1', \{'disable': interpolation_method != 'S_Retime'\})\n\n    interpolated_switch = nuke.toNode('interpolated_switch')\n    time_offset = get_node('TimeOffset2')\n\n    if interpolated_switch and time_offset:\n        # Disconnect TimeOffset2 from interpolated_switch\n        for i in range(interpolated_switch.inputs()):\n            if interpolated_switch.input(i) == time_offset:\n                interpolated_switch.setInput(i, None)\n                break\n\n    # Reconnect TimeOffset2 to input 5 of interpolated_switch if selected\n    if method_index == 5 and interpolated_switch and time_offset:\n        interpolated_switch.setInput(5, time_offset)\n    \n        \n\ndef select_hero_interpolation_method(interpolation_method):\n    method_index = \{'Blend': 0, 'Kronos': 1, 'OFlow': 2, 'ABME': 3, 'Twixtor': 4, 'BCC3Optical_Flow': 5, 'S_Retime': 6\}.get(interpolation_method, 0)\n    set_knob_value('hero_interpolation_swtich', \{'which': method_index\})\n    gizmo\['vgblend'].setVisible(interpolation_method == 'Blend')\n    gizmo\['vgkronos'].setVisible(interpolation_method == 'Kronos')\n    gizmo\['vgoflow'].setVisible(interpolation_method == 'OFlow')\n    gizmo\['vgabme'].setVisible(interpolation_method == 'ABME')\n    gizmo\['vgtwixtor'].setVisible(interpolation_method == 'Twixtor')\n    gizmo\['vgboris'].setVisible(interpolation_method == 'BCC3Optical_Flow')\n    gizmo\['vgsapphire'].setVisible(interpolation_method == 'S_Retime')\n    \n    if node_exists('ABME_Retime3'):\n        set_knob_value('ABME_Retime3', \{'disable': interpolation_method != 'ABME'\})\n    if node_exists('TwixtorHero'):\n        set_knob_value('TwixtorHero', \{'disable': interpolation_method != 'Twixtor'\})\n    if node_exists('BCC3Optical_Flow2'):\n        set_knob_value('BCC3Optical_Flow2', \{'disable': interpolation_method != 'BCC3Optical_Flow'\})\n    if node_exists('S_Retime2'):\n        set_knob_value('S_Retime2', \{'disable': interpolation_method != 'S_Retime'\})\n    \n    interpolated_switch = nuke.toNode('hero_interpolation_swtich')\n    time_offset = get_node('TimeOffset4')\n    \n    if interpolated_switch and time_offset:\n        # Disconnect TimeOffset4 from interpolated_switch\n        for i in range(interpolated_switch.inputs()):\n            if interpolated_switch.input(i) == time_offset:\n                interpolated_switch.setInput(i, None)\n                break\n\n    # Reconnect TimeOffset4 to input 5 of interpolated_switch if selected\n    if method_index == 5 and interpolated_switch and time_offset:\n        interpolated_switch.setInput(5, time_offset)\n\ndef select_hero_vector_generator(vector_generator):\n    method_index = \{'VectorGenerator': 0, 'SmartVectors': 1, 'ABME': 2, 'RAFT': 3, 'NNFlowVector': 4\}.get(vector_generator, 0)\n    set_knob_value('vector_switch', \{'which': method_index\})\n    gizmo\['vectorgenerator'].setVisible(vector_generator == 'VectorGenerator')\n    gizmo\['smartvector'].setVisible(vector_generator == 'SmartVectors')\n    gizmo\['abme'].setVisible(vector_generator == 'ABME')\n    gizmo\['raft'].setVisible(vector_generator == 'RAFT')\n    gizmo\['nnflowvector'].setVisible(vector_generator == 'NNFlowVector')\n    \n    if node_exists('ABME_SV1'):\n        set_knob_value('ABME_SV1', \{'disable': vector_generator != 'ABME'\})\n    if node_exists('RAFT1'):\n        set_knob_value('RAFT1', \{'disable': vector_generator != 'RAFT'\})\n    if node_exists('NNFlowVector1'):\n        set_knob_value('NNFlowVector1', \{'disable': vector_generator != 'NNFlowVector'\})\n\ndef set_uv_channels(vector_post_processor):\n    method_index = \{'forward': 0, 'backward': 1, 'average_motion': 2, 'OFlow': 3, 'Kronos': 4, 'Twixtor': 5\}.get(vector_post_processor, 0)\n    set_knob_value('SwitchMotionType', \{'which': method_index\})\n    gizmo\['vpost_oflow'].setVisible(vector_post_processor == 'OFlow')\n    gizmo\['vpost_kronos'].setVisible(vector_post_processor == 'Kronos')\n    \n    # Check if the Twixtor node exists before trying to set its visibility\n    if node_exists('vpost_twixtor'):\n        gizmo\['vpost_twixtor'].setVisible(vector_post_processor == 'Twixtor')\n    elif vector_post_processor == 'Twixtor':\n        print(\"Warning: Twixtor node 'vpost_twixtor' not found. Skipping visibility setting.\")\n\n    # If Twixtor is selected but not available, you might want to fall back to a default option\n    if vector_post_processor == 'Twixtor' and not node_exists('vpost_twixtor'):\n        print(\"Twixtor not available. Falling back to forward motion.\")\n        set_knob_value('SwitchMotionType', \{'which': 0\})  # Set to forward motion\n\ndef set_distortion_method(distortion_method):\n    method_index = 1 if distortion_method == 'IDistort' else 0\n    set_knob_value('SwitchBackward', \{'which': method_index\})\n    set_knob_value('SwitchForward', \{'which': method_index\})\n\ndef label_setter():\n    output_type = gizmo\['output_type'].value()\n    if output_type == 'hero plate':\n        label = 'HERO'\n    else:\n        parent_method = gizmo\['parent_method'].value()\n        if parent_method == 'interpolate':\n            label = gizmo\['matte_interpolation'].value()\n        else:\n            label = f\"\{gizmo\['hero_interpolation'].value()\}\\n\{gizmo\['vector_generator'].value()\}\\n\{gizmo\['distortion_method'].value()\}\\n\{gizmo\['vector_post'].value()\}\"\n    gizmo\['label'].setValue(label)\n    \ndef create_shuffle():\n    # Get the root node\n    root = nuke.root()\n    \n    # Deselect all nodes to ensure the new node is correctly connected to the gizmo\n    for node in nuke.allNodes():\n        node\['selected'].setValue(False)\n    \n    # Create a new Shuffle2 node in the root context\n    with root:\n        shuffle_node = nuke.createNode('Shuffle2')\n    \n    # Set the properties to shuffle the 'matte' layer into the RGB channels\n    shuffle_node\['in1'].setValue('matte')\n    shuffle_node\['in2'].setValue('none')\n\n\n    # Set the mappings\n    mappings = \[\n        (0, 'matte.red', 'rgba.red'),\n        (0, 'matte.green', 'rgba.green'),\n        (0, 'matte.blue', 'rgba.blue'),\n        (-1, 'white', 'rgba.alpha')  # Use 'white' to map matte.alpha to 1\n    ]\n    shuffle_node\['mappings'].setValue(mappings)\n    \n    # Enable the postage stamp for easier identification\n    shuffle_node\['postage_stamp'].setValue(True)\n    \n    # Set the label for easier identification in the node graph\n    shuffle_node\['label'].setValue('Matte to RGB')\n    \n    # Position the node below the gizmo for better visibility\n    shuffle_node.setXYpos(gizmo.xpos(), gizmo.ypos() + 100)\n    \n    # Connect the shuffle node to the gizmo's output\n    shuffle_node.setInput(0, gizmo)\n\ndef twixfix(value):\n    for node in (n for n in gizmo.nodes() if n.Class() == 'Switch' and 'MSwitch' in n\['name'].value()):\n        nuke.toNode(node\['name'].value())\['which'].setValue(value)\n\n                \n\ndef toggle_text_overlays(overlay):\n    gizmo\['font'].setVisible(overlay)\n    gizmo\['font_scale'].setVisible(overlay)\n    text_nodes = \[node for node in nuke.allNodes() if node.Class() == 'Text2']\n    for node in text_nodes:\n        node\['disable'].setValue(not overlay)\n\ndef font_selector():\n    font_family, font_style = gizmo.knob('font').getValue()\n    text_nodes = \[node for node in nuke.allNodes() if node.Class() == 'Text2']\n    for node in text_nodes:\n        try:\n            node\['font'].setValue(font_family, font_style)\n        except:\n            pass\n\n\ndef set_font_scale(scale):\n    text_nodes = \[node for node in nuke.allNodes() if node.Class() == 'Text2']\n    for node in text_nodes:\n        node\['global_font_scale'].setValue(scale)\n\n# Use a variable to store the current node\ngizmo = nuke.thisNode()\nk = nuke.thisKnob()  # the knob that activated knobChanged\nframe_range_changing_knobs = \['inputChange', 'add_frame', 'output_type', 'refresh']\n\n# Turns on knobs when testing\ngizmo\['print_all_knobs'].setVisible(testing)\n\n# Define a mapping of knob names to functions\nknob_function_map = \{\n    'text_overlays': lambda: toggle_text_overlays(k.value()),\n    'font': lambda: font_selector(),\n    'font_scale': lambda: set_font_scale(k.value()),\n    'twixfix': lambda: twixfix(k.value()),\n    'output_type': lambda: (output_type(k.value()), label_setter()),\n    'parent_method': lambda: (select_parent_method(k.value()), label_setter()),\n    'create_shuffle': lambda: (create_shuffle()),\n    'matte_interpolation': lambda: (select_matte_interpolation_method(k.value()), label_setter()),\n    'hero_interpolation': lambda: (select_hero_interpolation_method(k.value()), label_setter()),\n    'vector_generator': lambda: (select_hero_vector_generator(k.value()), label_setter()),\n    'distortion_method': lambda: (set_distortion_method(k.value()), label_setter()),\n    'vector_post': lambda: (set_uv_channels(k.value()), label_setter()),\n    'difference_viewer': lambda: set_knob_value('diff_switch', \{'which': int(k.value())\})\n\}\n\n# Only take action if the particular knob was changed\nif k.name() in frame_range_changing_knobs:\n    frame_range = get_frame_range()\n    propogate_frame_range(frame_range)\nif k.name() in knob_function_map:\n    knob_function_map\[k.name()]()\n"
 tile_color 0x1ffff
 label "Twixtor\nVectorGenerator\nIDistort\nTwixtor"
 xpos 599
 ypos -451
 addUserKnob {20 User}
 addUserKnob {26 header l "" t "This gizmo processes clips shot on a volume using the ghost frame technique, where every alternate frame is a green or blue frame background. \n\nIt extracts the HERO frames by simply removing all the MATTE frames. \n\nIt extracts the MATTE frames by either interpolating them from two adjacent MATTE frames, <i>or</i> it generates motion vectors from the HERO frames and distorts the adjacent MATTE frames to match the HERO frame and then blends those MATTE frames together. \n\nCLICK THIS LOGO FOR HELP" +STARTLINE T "<a href='https://www.itaki.com/ghostframeextractor-for-nuke/' style='text-decoration: none;'><div><span style='color:#F5F9F1;'><img src='/Users/michaelmcreynolds/Dropbox/_Library/nuke/NukeShared/Repository/Nodes/Image/GhostFrameExtractor.png' width='50'>   </span><font size='6'><span style='color:#F5F9F1;'>GhostFrame</span><span style='color:#FFA100;'>Extractor</span><font size='3'><span style='color:#CFE6B2;'></span><span style='color:#DFD3E7;'>v1.0.3</span></font></font></div></a>"}
 addUserKnob {26 version -STARTLINE +INVISIBLE T v1.0.3}
 addUserKnob {26 available_plugins l "<b>available plugins" t "<div class=\"tooltip-content\"><p>Upon creation of a new GhostFrameExtractor, the 'onCreate' script scans installed plugins to determine which are available. Only detected plugins will appear in the dropdown menus.</p><p><em>Note: If you install new plugins after creating the node, delete and recreate the node to rescan for available plugins.</em></p></div>\n"}
 addUserKnob {6 forward +INVISIBLE +STARTLINE}
 forward true
 addUserKnob {6 backward -STARTLINE +INVISIBLE}
 backward true
 addUserKnob {6 average_motion l "average motion" -STARTLINE +INVISIBLE}
 average_motion true
 addUserKnob {6 Blend +DISABLED +STARTLINE}
 Blend true
 addUserKnob {6 Kronos -STARTLINE +DISABLED}
 Kronos true
 addUserKnob {6 OFlow -STARTLINE +DISABLED}
 OFlow true
 addUserKnob {6 VectorGenerator -STARTLINE +DISABLED}
 VectorGenerator true
 addUserKnob {6 SmartVectors -STARTLINE +DISABLED}
 SmartVectors true
 addUserKnob {6 RAFT +DISABLED +STARTLINE}
 RAFT true
 addUserKnob {6 ABME -STARTLINE +DISABLED}
 ABME true
 addUserKnob {6 Twixtor -STARTLINE +DISABLED}
 Twixtor true
 addUserKnob {6 NNFlowVector -STARTLINE +DISABLED}
 addUserKnob {6 BCC3Optical_Flow l "BCC Optical Flow" -STARTLINE +DISABLED +INVISIBLE}
 BCC3Optical_Flow true
 addUserKnob {6 S_Retime l "Sapphire Retime" -STARTLINE +DISABLED}
 S_Retime true
 addUserKnob {6 twixfix l "" -STARTLINE +INVISIBLE}
 addUserKnob {26 ""}
 addUserKnob {22 print_all_knobs l "print all knobs" +HIDDEN T "for i in nuke.thisNode().knobs():\n    print (i)" +STARTLINE}
 addUserKnob {6 add_frame l "<font color=#FFA100>add matte frame to beginning of clip</font>" t "<div class=\"tooltip-content\"><p>Enable this option if your footage begins with a hero frame. This ensures the clip starts with a matte frame by duplicating the first matte frame and placing it at the beginning.</p><p><em>Note: The gizmo will automatically add a matte frame at the end if required.</em></p></div>\n" +STARTLINE}
 addUserKnob {22 refresh l "refresh frame range" t "<div class=\"tooltip-content\"><p>Click this button to recalculate all frame ranges.</p><p><em>Note: The gizmo auto-updates frame ranges if the input changes. However, if upstream changes occur without affecting the gizmo's input, manual refresh is required.</em></p></div>\n\n" -STARTLINE}
 addUserKnob {4 output_type l "<b><font color=#FFA100>view</font>" t "<div class=\"tooltip-content\"><p>Use this selector to toggle between viewing hero and matte frames. Perform your work while viewing matte frames, then switch back to hero frames to finalize.</p><p><em>Note: Use the shuffle button at the bottom to shuffle the matte frames out.</em></p></div>\n" M {"hero plate" "matte plate" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 output_type "matte plate"
 addUserKnob {26 ""}
 addUserKnob {20 matte_extraction_group l ━━━━━━━━━━━━━━━━━━━━━━━━━ n 1}
 addUserKnob {4 parent_method l "<b><font color=#FFA100>matte generation method</font>" t "<div class=\"tooltip-content\"><ul><li><strong>Interpolate:</strong> Generates a frame between two matte frames using your chosen optical flow method. Estimates the hero frame content based solely on matte frame information.</li></br><li><strong>Vector Extract:</strong> Interpolates frames from hero frames to match existing matte frames using optical flow. Then uses motion vectors generated from the hero frames to distort the adjacent matte frames, preserving hero frame details.</li></ul></div>\n" M {interpolate "vector extract"}}
 parent_method "vector extract"
 addUserKnob {20 extract_group l ━━━━━━━━━━━━━━━━━━━━━━━━━ n 1}
 addUserKnob {4 hero_interpolation l "<font color=#FFA100>hero interpolation method</font>" t "<div class=\"tooltip-content\"><p>Select the interpolation method for generating new intermediate HERO frames. Motion vectors from this clip will be used to distort matte frames.</p><ul><li><strong>Blend:</strong> No optical flow blending.</li><li><strong>Kronos:</strong> Kronos optical flow. <i>Best fast option. Available in NukeX</i></li><li><strong>OFlow:</strong> OFlow optical flow. <i>Fast, free, and available in all Nuke versions</i></li><li><strong>ABME:</strong> Asymmetric Bilateral Motion Estimation. <i>Good but very slow</i></li><li><strong>Twixtor:</strong> RE:Vision's DNN motion estimation (v8). <i>Best option</i></li><li><strong>BCC3 Optical Flow:</strong> Boris's Continuum optical flow. <i>Avoid</i></li><li><strong>S_Retime:</strong> Boris's Sapphire Retime. <i>A little better than Kronos</i></li></ul><p><em>Note: Missing options indicate unavailable plugins. If you install new plugins you'll need to recreate this node to have it serch for available plugins again.</em></p><p><em>Note: You can source both ABME and RAFT from the Cattery. Nvidia GPUs make these somewhat viable options.</em></div>" M {Blend Kronos OFlow ABME Twixtor S_Retime}}
 hero_interpolation Twixtor
 addUserKnob {20 vgboris l "Boris Continuum Optical Flow controls" +HIDDEN n 1}
 vgboris 0
 addUserKnob {41 optical_flow_resolution_1 l "Optical Flow Resolution" T BCCOpticalFlow2.optical_flow_resolution}
 addUserKnob {41 blending_1 l Blending T BCCOpticalFlow2.blending}
 addUserKnob {20 "Motion Estimation_1" l "Motion Estimation" n 1}
 "Motion Estimation_1" 0
 addUserKnob {41 use_reverse_estimation_motion_estimation_1 l "Use Reverse Estimation" T BCCOpticalFlow2.use_reverse_estimation_motion_estimation}
 addUserKnob {41 min_edge_contrast_motion_estimation_1 l "Min Edge Contrast" T BCCOpticalFlow2.min_edge_contrast_motion_estimation}
 addUserKnob {41 enable_low_velocity_correction_motion_estimation_1 l "Enable Low Velocity Correction" T BCCOpticalFlow2.enable_low_velocity_correction_motion_estimation}
 addUserKnob {41 low_velocity_correction_motion_estimation_1 l "Low Velocity Correction" T BCCOpticalFlow2.low_velocity_correction_motion_estimation}
 addUserKnob {41 velocity_limit_motion_estimation_1 l "Velocity Limit" T BCCOpticalFlow2.velocity_limit_motion_estimation}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_19 l endGroup n -1}
 addUserKnob {20 vgblend l "blend controls" +HIDDEN n 1}
 vgblend 0
 addUserKnob {20 Shutter_5 l Shutter n 1}
 Shutter_5 0
 addUserKnob {41 shutterSamples_5 l "Shutter Samples" T OFlowBlend.shutterSamples}
 addUserKnob {41 shutterTime_5 l "Shutter Time" T OFlowBlend.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime_5 l "Automatic Shutter Time" -STARTLINE T OFlowBlend.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_7 l endGroup n -1}
 addUserKnob {20 vgkronos l "Kronos controls" +HIDDEN n 1}
 vgkronos 0
 addUserKnob {41 vectorDetailReg_1 l "Vector Detail" T KronosHero.vectorDetailReg}
 addUserKnob {41 strengthReg_1 l Strength T KronosHero.strengthReg}
 addUserKnob {41 resampleType_2 l Filter T KronosHero.resampleType}
 addUserKnob {20 Shutter_1 l Shutter n 1}
 Shutter_1 0
 addUserKnob {41 shutterSamples_1 l "Shutter Samples" T KronosHero.shutterSamples}
 addUserKnob {41 shutterTime_1 l "Shutter Time" T KronosHero.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime_1 l "Automatic Shutter Time" -STARTLINE T KronosHero.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 Advanced n 1}
 Advanced 0
 addUserKnob {41 flickerCompensation l "Flicker Compensation" -STARTLINE T KronosHero.flickerCompensation}
 addUserKnob {41 showLegacyMode l "Show Legacy Mode" -STARTLINE +INVISIBLE T KronosHero.showLegacyMode}
 addUserKnob {41 legacyModeNuke9 l "Legacy Mode" +HIDDEN T KronosHero.legacyModeNuke9}
 addUserKnob {20 Tolerances_1 l Tolerances n 1}
 Tolerances_1 0
 addUserKnob {41 weightRed_1 l "Weight Red" T KronosHero.weightRed}
 addUserKnob {41 weightGreen_1 l "Weight Green" T KronosHero.weightGreen}
 addUserKnob {41 weightBlue_1 l "Weight Blue" T KronosHero.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {41 vectorSpacing_2 l "Vector Spacing" T KronosHero.vectorSpacing}
 addUserKnob {41 showVectors_2 l "Overlay Vectors" -STARTLINE T KronosHero.showVectors}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_8 l endGroup n -1}
 addUserKnob {20 vgoflow l "OFlow contols" +HIDDEN n 1}
 vgoflow 0
 addUserKnob {41 vectorDetailLocal_1 l "Vector Detail" T OFlowHero.vectorDetailLocal}
 addUserKnob {41 smoothnessLocal_1 l Smoothness T OFlowHero.smoothnessLocal}
 addUserKnob {41 resampleType_3 l Filter T OFlowHero.resampleType}
 addUserKnob {20 Shutter_2 l Shutter n 1}
 Shutter_2 0
 addUserKnob {41 shutterSamples_2 l "Shutter Samples" T OFlowHero.shutterSamples}
 addUserKnob {41 shutterTime_2 l "Shutter Time" T OFlowHero.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime_2 l "Automatic Shutter Time" -STARTLINE T OFlowHero.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 Advanced_5 l Advanced n 1}
 Advanced_5 0
 addUserKnob {41 flickerCompensation_5 l "Flicker Compensation" -STARTLINE T OFlowHero.flickerCompensation}
 addUserKnob {20 Tolerances_2 l Tolerances n 1}
 Tolerances_2 0
 addUserKnob {41 weightRed_2 l "Weight Red" T OFlowHero.weightRed}
 addUserKnob {41 weightGreen_2 l "Weight Green" T OFlowHero.weightGreen}
 addUserKnob {41 weightBlue_2 l "Weight Blue" T OFlowHero.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {41 vectorSpacing_1 l "Vector Spacing" T OFlowHero.vectorSpacing}
 addUserKnob {41 showVectors_1 l "Overlay Vectors" -STARTLINE T OFlowHero.showVectors}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_9 l endGroup n -1}
 addUserKnob {20 vgabme l "ABME controls" +HIDDEN n 1}
 vgabme 0
 addUserKnob {41 in_colorspace_1 l "Input Colorspace" T ABME_Retime3.in_colorspace}
 addUserKnob {41 halfPrecision_1 l "Optimize for Speed and Memory" T ABME_Retime3.halfPrecision}
 addUserKnob {20 endGroup_10 l endGroup n -1}
 addUserKnob {20 vgtwixtor l "Twixor controls" n 1}
 addUserKnob {41 TrackingQualityV2_1 l "Tracking Quality" T TwixtorHero.TrackingQualityV2}
 addUserKnob {41 GlobalMotion_1 l "Global Compensation" T TwixtorHero.GlobalMotion}
 addUserKnob {41 MotionSensitivity_1 l "Motion Sensitivity" T TwixtorHero.MotionSensitivity}
 addUserKnob {41 ImagePrep_1 l "Image Prep" T TwixtorHero.ImagePrep}
 addUserKnob {41 FrameInterp_1 l "Frame Interp" T TwixtorHero.FrameInterp}
 addUserKnob {41 Warping_1 l Warping T TwixtorHero.Warping}
 addUserKnob {41 SmartBlend_1 l "Smart Blend" T TwixtorHero.SmartBlend}
 addUserKnob {41 MotionBlurCompensation_1 l "Motion Blur Compensation" T TwixtorHero.MotionBlurCompensation}
 addUserKnob {20 endGroup_11 l endGroup n -1}
 addUserKnob {20 vgsapphire l "Boris Sapphire Retime Controls" +HIDDEN n 1}
 vgsapphire 0
 addUserKnob {41 motion_blur_1 l "Motion Blur" T S_Retime2.motion_blur}
 addUserKnob {20 "Flow Tuning_1" l "Flow Tuning" n 1}
 "Flow Tuning_1" 0
 addUserKnob {41 flow_field_smoothness_1 l "Flow Field Smoothness" T S_Retime2.flow_field_smoothness}
 addUserKnob {41 emphasize_edges_1 l "Emphasize Edges" T S_Retime2.emphasize_edges}
 addUserKnob {41 flow_view_scale_1 l "Flow View Scale" T S_Retime2.flow_view_scale}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_21 l endGroup n -1}
 addUserKnob {4 vector_generator l "<font color=#FFA100>vector generator</font>" t "<div class=\"tooltip-content\"><p>Select a method for extracting vectors from the HERO plate to distort MATTE plates. If both backward and forward vectors are provided, they will be used on adjacent frames and then joined in during the vector post process step.</p><ul><li><strong>VectorGenerator:</strong> Nuke's standard vector generator. <i>Very Fast</i></li><li><strong>SmartVectors:</strong> Provides the same output as VectorGenerator but creates additional vector fields for time-based distortion. <i>Not recommended</i></li><li><strong>ABME:</strong> Asymmetric Bilateral Motion Estimation. <i>Good but slow</i></li><li><strong>RAFT:</strong> Recurrent All-pairs Field Transforms. <i>Moderately slow and in most cases is worse than VectorGenerator</li><li><strong>NNFlowVector:</strong> Pixelmania's motion vector generator. <i>Doesn't seem to work correctly</i></li></ul></div><p><em>Note: You can source both ABME and RAFT from the Cattery. Nvidia GPUs make these somewhat viable options.</em></div>\n" M {VectorGenerator SmartVectors ABME RAFT}}
 addUserKnob {20 vectorgenerator l "vector generator controls" n 1}
 vectorgenerator 0
 addUserKnob {41 motionEstimation l Motion T VectorGenerator1.motionEstimation}
 addUserKnob {41 vectorDetailReg_2 l "Vector Detail" T VectorGenerator1.vectorDetailReg}
 addUserKnob {41 strengthReg_2 l Strength T VectorGenerator1.strengthReg}
 addUserKnob {20 Advanced_1 l Advanced n 1}
 Advanced_1 0
 addUserKnob {41 flickerCompensation_1 l "Flicker Compensation" -STARTLINE T VectorGenerator1.flickerCompensation}
 addUserKnob {20 Tolerances_3 l Tolerances n 1}
 Tolerances_3 0
 addUserKnob {41 weightRed_3 l "Weight Red" T VectorGenerator1.weightRed}
 addUserKnob {41 weightGreen_3 l "Weight Green" T VectorGenerator1.weightGreen}
 addUserKnob {41 weightBlue_3 l "Weight Blue" T VectorGenerator1.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_12 l endGroup n -1}
 addUserKnob {20 smartvector l "smart vector controls" +HIDDEN n 1}
 smartvector 0
 addUserKnob {41 vectorDetailReg_3 l "Vector Detail" T SmartVector2.vectorDetailReg}
 addUserKnob {41 strengthReg_3 l Strength T SmartVector2.strengthReg}
 addUserKnob {20 Advanced_2 l Advanced n 1}
 Advanced_2 0
 addUserKnob {41 flickerCompensation_2 l "Flicker Compensation" -STARTLINE T SmartVector2.flickerCompensation}
 addUserKnob {20 Tolerances_4 l Tolerances n 1}
 Tolerances_4 0
 addUserKnob {41 weightRed_4 l "Weight Red" T SmartVector2.weightRed}
 addUserKnob {41 weightGreen_4 l "Weight Green" T SmartVector2.weightGreen}
 addUserKnob {41 weightBlue_4 l "Weight Blue" T SmartVector2.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_13 l endGroup n -1}
 addUserKnob {20 abme l "ABME contols" +HIDDEN n 1}
 abme 0
 addUserKnob {41 in_colorspace_2 l "Input Colorspace" T ABME_SV1.in_colorspace}
 addUserKnob {41 halfPrecision_2 l "Optimize for Speed and Memory" T ABME_SV1.halfPrecision}
 addUserKnob {20 endGroup_14 l endGroup n -1}
 addUserKnob {20 raft l "RAFT controls" +HIDDEN n 1}
 raft 0
 addUserKnob {41 in_colorspace_3 l "Input Colorspace" T RAFT1.in_colorspace}
 addUserKnob {41 halfPrecision_3 l "Optimize for Speed and Memory" T RAFT1.halfPrecision}
 addUserKnob {20 endGroup_15 l endGroup n -1}
 addUserKnob {20 nnflowvector l "NNFlowVector controls" +HIDDEN n 1}
 nnflowvector 0
 addUserKnob {41 exposure l "pre exposure" T NNFlowVector1.exposure}
 addUserKnob {41 gamma l "pre gamma" T NNFlowVector1.gamma}
 addUserKnob {41 process_scale l "process scale" T NNFlowVector1.process_scale}
 addUserKnob {41 variant T NNFlowVector1.variant}
 addUserKnob {41 iterations T NNFlowVector1.iterations}
 addUserKnob {41 max_size l "max size" T NNFlowVector1.max_size}
 addUserKnob {41 overlap T NNFlowVector1.overlap}
 addUserKnob {41 padding T NNFlowVector1.padding}
 addUserKnob {20 endGroup_17 l endGroup n -1}
 addUserKnob {4 distortion_method l "<font color=#FFA100>distortion method</font>" t "<div class=\"tooltip-content\"><p>Choose between IDistort and STMap for distorting matte frames using vectors.</p><ul><li><strong>IDistort:</strong> Recommended for better results.</li><li><strong>STMap:</strong> Included for completeness, not recommended.</li></ul></div>\n" M {IDistort STMap "" "" "" ""}}
 addUserKnob {4 vector_post l "<font color=#FFA100>vector post process</font>" t "<div class=\"tooltip-content\"><p>Select a process to combine the two matte frames generated with vectors. Ideally, these frames should be identical, but toggling forward and backward distorted frames will show the difference.</p><ul><li><strong>forward:</strong> Use motion vectors from the next frame to the current frame</li><li><strong>backward:</strong> Use motion vectors from the previous frame to the current frame</li><li><strong>average_motion:</strong> Average forward and backward motion vectors</li><li><strong>OFlow:</strong> Use OFlow to interpolate a new frame</li><li><strong>Kronos:</strong> Use Kronos to interpolate a new frame</li><li><strong>Twixtor:</strong> Use Twixtor to interpolate a new frame</li></ul></div>\n" M {forward backward average_motion OFlow Kronos Twixtor}}
 vector_post Twixtor
 addUserKnob {20 vpost_kronos l "Kronos controls" +HIDDEN n 1}
 vpost_kronos 0
 addUserKnob {41 vectorDetailReg_4 l "Vector Detail" T Kronos1.vectorDetailReg}
 addUserKnob {41 strengthReg_4 l Strength T Kronos1.strengthReg}
 addUserKnob {41 resampleType_5 l Filter T Kronos1.resampleType}
 addUserKnob {20 endGroup_23 l endGroup n -1}
 addUserKnob {20 vpost_twixtor l "Twixtor controls" n 1}
 addUserKnob {41 TrackingQualityV2_2 l "Tracking Quality" T Twixtor1.TrackingQualityV2}
 addUserKnob {41 SmartBlend_2 l "Smart Blend" T Twixtor1.SmartBlend}
 addUserKnob {20 endGroup_24 l endGroup n -1}
 addUserKnob {20 vpost_oflow l "OFlow controls" +HIDDEN n 1}
 vpost_oflow 0
 addUserKnob {41 vectorDetailLocal_2 l "Vector Detail" T OFlow1.vectorDetailLocal}
 addUserKnob {41 smoothnessLocal_2 l Smoothness T OFlow1.smoothnessLocal}
 addUserKnob {41 resampleType_4 l Filter T OFlow1.resampleType}
 addUserKnob {20 endGroup_22 l endGroup n -1}
 addUserKnob {20 endGroup_6 l endGroup n -1}
 addUserKnob {20 interpolation_group l ━━━━━━━━━━━━━━━━━━━━━━━━━ +HIDDEN n 1}
 addUserKnob {4 matte_interpolation l "<font color=#FFA100>matte interpolation method</font>" t "<div class=\"tooltip-content\"><p>Select the interpolation method for generating new intermediate matte frames between each pair of MATTE frames.</p><ul><li><strong>Blend:</strong> No optical flow blending.</li><li><strong>Kronos:</strong> Kronos optical flow. <i>Best fast option. Available in NukeX</i></li><li><strong>OFlow:</strong> OFlow optical flow. <i>Fast, free, and available in all Nuke versions</i></li><li><strong>ABME:</strong> Asymmetric Bilateral Motion Estimation. <i>Good but very slow</i></li><li><strong>Twixtor:</strong> RE:Vision's DNN motion estimation (v8). <i>Best option</i></li><li><strong>BCC3 Optical Flow:</strong> Boris's Continuum optical flow. <i>Avoid</i></li><li><strong>S_Retime:</strong> Boris's Sapphire Retime. <i>A little better than Kronos</i></li></ul><p><em>Note: Missing options indicate unavailable plugins. If you install new plugins you'll need to recreate this node to have it serch for available plugins again.</em></p><p><em>Note: You can source both ABME and RAFT from the Cattery. Nvidia GPUs make these somewhat viable options.</em></p></div>" M {Blend Kronos OFlow ABME Twixtor S_Retime}}
 matte_interpolation Kronos
 addUserKnob {20 giblend l "blend controls" +HIDDEN n 1}
 giblend 0
 addUserKnob {20 Shutter_4 l Shutter n 1}
 Shutter_4 0
 addUserKnob {41 shutterSamples_4 l "Shutter Samples" T OFlowPlateBlend.shutterSamples}
 addUserKnob {41 shutterTime_4 l "Shutter Time" T OFlowPlateBlend.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime_4 l "Automatic Shutter Time" -STARTLINE T OFlowPlateBlend.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 gikronos l "Kronos Controls" n 1}
 gikronos 0
 addUserKnob {41 vectorDetailReg l "Vector Detail" T KronosPlate.vectorDetailReg}
 addUserKnob {41 strengthReg l Strength T KronosPlate.strengthReg}
 addUserKnob {41 resampleType l Filter T KronosPlate.resampleType}
 addUserKnob {20 Shutter n 1}
 addUserKnob {41 shutterSamples l "Shutter Samples" T KronosPlate.shutterSamples}
 addUserKnob {41 shutterTime l "Shutter Time" T KronosPlate.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime l "Automatic Shutter Time" -STARTLINE T KronosPlate.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 Advanced_3 l Advanced n 1}
 addUserKnob {41 flickerCompensation_3 l "Flicker Compensation" -STARTLINE T KronosPlate.flickerCompensation}
 addUserKnob {41 showLegacyMode_1 l "Show Legacy Mode" -STARTLINE +INVISIBLE T KronosPlate.showLegacyMode}
 addUserKnob {41 legacyModeNuke9_1 l "Legacy Mode" +HIDDEN T KronosPlate.legacyModeNuke9}
 addUserKnob {20 Tolerances_5 l Tolerances n 1}
 Tolerances_5 0
 addUserKnob {41 weightRed_5 l "Weight Red" T KronosPlate.weightRed}
 addUserKnob {41 weightGreen_5 l "Weight Green" T KronosPlate.weightGreen}
 addUserKnob {41 weightBlue_5 l "Weight Blue" T KronosPlate.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {41 vectorSpacing l "Vector Spacing" T KronosPlate.vectorSpacing}
 addUserKnob {41 showVectors l "Overlay Vectors" -STARTLINE T KronosPlate.showVectors}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 gioflow l "OFlow controls" +HIDDEN n 1}
 gioflow 0
 addUserKnob {41 vectorDetailLocal l "Vector Detail" T OFlowPlate.vectorDetailLocal}
 addUserKnob {41 smoothnessLocal l Smoothness T OFlowPlate.smoothnessLocal}
 addUserKnob {41 resampleType_1 l Filter T OFlowPlate.resampleType}
 addUserKnob {20 Shutter_3 l Shutter n 1}
 Shutter_3 0
 addUserKnob {41 shutterSamples_3 l "Shutter Samples" T OFlowPlate.shutterSamples}
 addUserKnob {41 shutterTime_3 l "Shutter Time" T OFlowPlate.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime_3 l "Automatic Shutter Time" -STARTLINE T OFlowPlate.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 Advanced_4 l Advanced n 1}
 Advanced_4 0
 addUserKnob {41 flickerCompensation_4 l "Flicker Compensation" -STARTLINE T OFlowPlate.flickerCompensation}
 addUserKnob {20 Tolerances n 1}
 Tolerances 0
 addUserKnob {41 weightRed l "Weight Red" T OFlowPlate.weightRed}
 addUserKnob {41 weightGreen l "Weight Green" T OFlowPlate.weightGreen}
 addUserKnob {41 weightBlue l "Weight Blue" T OFlowPlate.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {41 vectorSpacing_4 l "Vector Spacing" T OFlowPlate.vectorSpacing}
 addUserKnob {41 showVectors_4 l "Overlay Vectors" -STARTLINE T OFlowPlate.showVectors}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {20 giabme l "ABME controls" +HIDDEN n 1}
 giabme 0
 addUserKnob {41 in_colorspace l "Input Colorspace" T ABME_Retime_interpolate.in_colorspace}
 addUserKnob {41 halfPrecision l "Optimize for Speed and Memory" T ABME_Retime_interpolate.halfPrecision}
 addUserKnob {20 endGroup_3 l endGroup n -1}
 addUserKnob {20 gitwixtor l "Twixtor controls" t "You must have twixtor installed for this to work" +HIDDEN n 1}
 gitwixtor 0
 addUserKnob {41 TrackingQualityV2 l "Tracking Quality" T TwixtorPlate.TrackingQualityV2}
 addUserKnob {41 GlobalMotion l "Global Compensation" T TwixtorPlate.GlobalMotion}
 addUserKnob {41 MotionSensitivity l "Motion Sensitivity" T TwixtorPlate.MotionSensitivity}
 addUserKnob {41 ImagePrep l "Image Prep" T TwixtorPlate.ImagePrep}
 addUserKnob {41 FrameInterp l "Frame Interp" T TwixtorPlate.FrameInterp}
 addUserKnob {41 Warping T TwixtorPlate.Warping}
 addUserKnob {41 SmartBlend l "Smart Blend" T TwixtorPlate.SmartBlend}
 addUserKnob {41 MotionBlurCompensation l "Motion Blur Compensation" T TwixtorPlate.MotionBlurCompensation}
 addUserKnob {20 endGroup_4 l endGroup n -1}
 addUserKnob {20 giboris l "Boris Continuum Optical Flow controls" +HIDDEN n 1}
 giboris 0
 addUserKnob {41 input_fields l "Input Fields" T BCCOpticalFlow1.input_fields}
 addUserKnob {41 optical_flow_resolution l "Optical Flow Resolution" T BCCOpticalFlow1.optical_flow_resolution}
 addUserKnob {41 blending l Blending T BCCOpticalFlow1.blending}
 addUserKnob {41 optical_flow_mix l "Optical Flow Mix" T BCCOpticalFlow1.optical_flow_mix}
 addUserKnob {20 "Motion Estimation" n 1}
 "Motion Estimation" 0
 addUserKnob {41 use_reverse_estimation_motion_estimation l "Use Reverse Estimation" T BCCOpticalFlow1.use_reverse_estimation_motion_estimation}
 addUserKnob {41 min_edge_contrast_motion_estimation l "Min Edge Contrast" T BCCOpticalFlow1.min_edge_contrast_motion_estimation}
 addUserKnob {41 enable_low_velocity_correction_motion_estimation l "Enable Low Velocity Correction" T BCCOpticalFlow1.enable_low_velocity_correction_motion_estimation}
 addUserKnob {41 low_velocity_correction_motion_estimation l "Low Velocity Correction" T BCCOpticalFlow1.low_velocity_correction_motion_estimation}
 addUserKnob {41 velocity_limit_motion_estimation l "Velocity Limit" T BCCOpticalFlow1.velocity_limit_motion_estimation}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_18 l endGroup n -1}
 addUserKnob {20 gisapphire l "Boris Sapphire Retime controls" +HIDDEN n 1}
 gisapphire 0
 addUserKnob {41 motion_blur l "Motion Blur" T S_Retime1.motion_blur}
 addUserKnob {20 "Flow Tuning" n 1}
 "Flow Tuning" 0
 addUserKnob {41 flow_field_smoothness l "Flow Field Smoothness" T S_Retime1.flow_field_smoothness}
 addUserKnob {41 emphasize_edges l "Emphasize Edges" T S_Retime1.emphasize_edges}
 addUserKnob {41 flow_view_scale l "Flow View Scale" T S_Retime1.flow_view_scale}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_20 l endGroup n -1}
 addUserKnob {20 endGroup_5 l endGroup n -1}
 addUserKnob {20 endGroup_16 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 difference_viewer l "<font color=#FFA100>view difference</font>" t "<div class=\"tooltip-content\"><p>Compare the quality of the matte by differencing the hero plate output and the matte plate output.</p></div>/div><p><em>Note: A perfect matte will appear black. Really we are only concerned about the edges.</em></div>\n" +STARTLINE}
 addUserKnob {6 text_overlays l "<font color=#FFA100>text overlays</font>" t "<div class=\"tooltip-content\"><p>Generate text overlays on the footage.</p></div>\n" +STARTLINE}
 text_overlays true
 addUserKnob {84 font l "" -STARTLINE}
 addUserKnob {7 font_scale l "font scale" R 0 2}
 font_scale 0.5
 addUserKnob {22 create_shuffle l "create shuffle" t "<div class=\"tooltip-content\"><p>Click this button to create a shuffle node that maps the 'matte' channel's RGB to the RGB channels.</p><p><em>Note: Perform your work while viewing 'matte plate', then switch to 'hero plate' and use the shuffled matte plate for keying.</em></p></div>\n" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 website l "" t "Created by Michael McReynolds at itaki post based in Atlanta, Georgia, USA" +STARTLINE T "<font size=3 color =#444444>by        <a href='https://itaki.com' style='color:#666666;'>itaki</a></font>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x5b52ffff
  label "<center><img src=\":qrc/images/ToolbarFilter.png\"> Create Intermediate Hero Frames"
  note_font_size 30
  xpos 6345
  ypos -2555
  bdwidth 1947
  bdheight 856
  z_order -1
 }
 BackdropNode {
  inputs 0
  name BackdropNode8
  tile_color 0x27023601
  label "<center><img src=\"Read.png\"> Interpolate intermediate matte frames using traditional methods\nReceives blue frames and makes new frames in between each frame which should mostly line up with the actual hero frame. "
  note_font_size 30
  xpos -839
  ypos -2338
  bdwidth 4794
  bdheight 2644
  z_order -1
 }
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x677f5201
  label "<center><img src=\"EdgeDetect.png\"> Matte Frames\n"
  note_font_size 30
  xpos -434
  ypos -2075
  bdwidth 220
  bdheight 210
 }
 BackdropNode {
  inputs 0
  name BackdropNode10
  tile_color 0xb4ffaaff
  label "<center><img src=\":qrc/images/ToolbarFilter.png\"> Extracted Hero Plate"
  note_font_size 30
  xpos -1928
  ypos -2621
  bdwidth 619
  bdheight 665
 }
 BackdropNode {
  inputs 0
  name BackdropNode11
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> BLEND"
  note_font_size 30
  xpos -592
  ypos -957
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode12
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> Twixtor"
  note_font_size 30
  xpos 7470
  ypos -2153
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode13
  tile_color 0x9fffff
  label "<center><img src=\"VectorGenerator.png\"> Generate Motion Vectors"
  note_font_size 30
  xpos 6729
  ypos -1687
  bdwidth 871
  bdheight 774
 }
 BackdropNode {
  inputs 0
  name BackdropNode14
  tile_color 0x555555ff
  label "<center><img src=\":qrc/images/ToolbarFilter.png\"> IDistort\n"
  note_font_size 30
  xpos 4632
  ypos -1923
  bdwidth 1310
  bdheight 1881
 }
 BackdropNode {
  inputs 0
  name BackdropNode15
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> Blend"
  note_font_size 30
  xpos 6503
  ypos -2153
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode16
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> Boris Continuum\n"
  note_font_size 30
  xpos 2679
  ypos -957
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode17
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> BCC optical Flow"
  note_font_size 30
  xpos 7703
  ypos -2152
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode18
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> KRONOS"
  note_font_size 30
  xpos 114
  ypos -959
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode19
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> OFlow\n"
  note_font_size 30
  xpos 773
  ypos -968
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0xe1d1dff
  label "<center><img src=\":qrc/images/ToolbarFilter.png\"> Difference Viewer"
  note_font_size 30
  xpos -1890
  ypos 1829
  bdwidth 914
  bdheight 1091
 }
 BackdropNode {
  inputs 0
  name BackdropNode20
  tile_color 0x60353501
  label "<center><img src=\"MarkerRemoval.png\"> ABME error correction"
  note_font_size 30
  xpos -2143
  ypos -5066
  bdwidth 651
  bdheight 514
 }
 BackdropNode {
  inputs 0
  name BackdropNode21
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> Boris Sapphire\n"
  note_font_size 30
  xpos 3254
  ypos -958
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode22
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> Boris Sapphire Retime"
  note_font_size 30
  xpos 7938
  ypos -2151
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode23
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> KRONOS"
  note_font_size 30
  xpos 6711
  ypos -2155
  bdwidth 246
  bdheight 260
 }
 BackdropNode {
  inputs 0
  name BackdropNode24
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> OFlow"
  note_font_size 30
  xpos 7024
  ypos -2154
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode25
  tile_color 0x191901
  label "<center><img src=\"Radial.png\"> Distort Using STMAPS"
  note_font_size 30
  xpos 7988
  ypos -1570
  bdwidth 982
  bdheight 1380
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x191901
  label "<center><img src=\"Radial.png\"> Add frame to beginning of clip"
  note_font_size 30
  xpos -1408
  ypos -4188
  bdwidth 325
  bdheight 353
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x3200ff
  label "<center><img src=\"LevelSet.png\"> Add frame to end of clip"
  note_font_size 30
  xpos -1410
  ypos -3824
  bdwidth 324
  bdheight 375
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> Twixtor\n"
  note_font_size 30
  xpos 2035
  ypos -958
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> ABME"
  note_font_size 30
  xpos 7251
  ypos -2155
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode9
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> ABME"
  note_font_size 30
  xpos 1388
  ypos -958
  bdwidth 506
  bdheight 639
 }
 Constant {
  inputs 0
  format {{{root.format}}}
  first {{root.first_frame}}
  last {{root.last_frame}}
  name error_constant
  label "\[value color.a]"
  note_font_size 15
  xpos -1798
  ypos -4656
 }
 Input {
  inputs 0
  name Input1
  label "\[value number]"
  xpos -1652
  ypos -5236
 }
 Remove {
  operation keep
  channels rgba
  name Remove3
  label "\[value operation]:\\\\n\[value channels]\\\\n\[value channels2]\\\\n\[value channels3]\\\\n\[value channels4]"
  xpos -1652
  ypos -5100
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input0]"}}
  name error_switch
  label "\[value which]"
  xpos -1652
  ypos -4627
 }
 FrameRange {
  first_frame 1
  last_frame 80
  time ""
  name InputFrameRange
  label "\[value first_frame]-\[value last_frame]"
  xpos -1652
  ypos -4367
 }
 Dot {
  name Dot4
  note_font_size 24
  note_font_color 0xff
  xpos -1618
  ypos -4290
 }
set Ne0781800 [stack 0]
push $Ne0781800
 Dot {
  name Dot3
  note_font_size 24
  note_font_color 0xff
  xpos -1250
  ypos -4290
 }
 FrameHold {
  firstFrame 2
  name MatteFrameHold
  xpos -1284
  ypos -4075
 }
 FrameRange {
  first_frame {{input.first_frame}}
  last_frame {{input.first_frame}}
  time ""
  name FrameRange1
  label "\[value first_frame]-\[value last_frame]"
  xpos -1284
  ypos -4030
 }
 AppendClip {
  inputs 2
  lastFrame 80
  meta_from_first false
  time ""
  name AppendMatteFrame
  xpos -1284
  ypos -3910
 }
push $Ne0781800
 Switch {
  inputs 2
  name add_frame_switch
  label "\[value which]"
  xpos -1652
  ypos -3915
 }
 Dot {
  name Dot5
  note_font_size 24
  note_font_color 0xff
  xpos -1618
  ypos -3739
 }
set Ne0783c00 [stack 0]
 Dot {
  name Dot6
  note_font_size 24
  note_font_color 0xff
  xpos -1250
  ypos -3739
 }
 FrameHold {
  firstFrame 79
  name EndFrameHold
  xpos -1284
  ypos -3669
 }
push $Ne0783c00
 AppendClip {
  inputs 2
  lastFrame 81
  meta_from_first false
  time ""
  name AppendEndFrame
  xpos -1284
  ypos -3527
 }
push $Ne0783c00
 Switch {
  inputs 2
  which 1
  name add_end_frame_switch
  label "\[value which]"
  xpos -1652
  ypos -3533
 }
 FrameRange {
  first_frame 1
  last_frame 81
  time ""
  name OutputFrameRange
  label "\[value first_frame]-\[value last_frame]"
  xpos -1652
  ypos -3470
 }
 Dot {
  name Dot30
  note_font_size 24
  note_font_color 0xff
  xpos -1618
  ypos -3037
 }
 Dot {
  name Dot8
  note_font_size 24
  note_font_color 0xff
  xpos -1618
  ypos -2708
 }
set Ne0786600 [stack 0]
 Dot {
  name Dot20
  note_font_size 24
  note_font_color 0xff
  xpos -340
  ypos -2708
 }
 Retime {
  input.first_lock true
  input.last 81
  input.last_lock true
  output.first_lock true
  output.last 161
  speed 2
  before continue
  after continue
  filter none
  time ""
  name PlateRetime
  label "\[value input.first] -> \[value output.first]\\\\noffset: \[return \[expr \[value output.first]-\[value input.first]]]\\\\nspeed: \[value speed]"
  xpos -374
  ypos -1950
 }
 Dot {
  name Dot7
  note_font_size 24
  note_font_color 0xff
  xpos -340
  ypos -1788
 }
set Ne0787800 [stack 0]
 Dot {
  name Dot54
  note_font_size 24
  note_font_color 0xff
  xpos 373
  ypos -1788
 }
set Ne0787e00 [stack 0]
 Dot {
  name Dot55
  note_font_size 24
  note_font_color 0xff
  xpos 1037
  ypos -1788
 }
set Ne0788400 [stack 0]
 Dot {
  name Dot2
  note_font_size 24
  note_font_color 0xff
  xpos 1652
  ypos -1788
 }
set Ne0788a00 [stack 0]
 Dot {
  name Dot9
  note_font_size 24
  note_font_color 0xff
  xpos 2298
  ypos -1788
 }
set Ne0789000 [stack 0]
 Dot {
  name Dot36
  note_font_size 24
  note_font_color 0xff
  xpos 2939
  ypos -1788
 }
set Ne0789600 [stack 0]
 TimeOffset {
  time_offset -1
  time ""
  name TimeOffset2
  label "\[value time_offset]"
  xpos 2896
  ypos -734
 }
push $Ne0786600
 Retime {
  input.first 2
  input.first_lock true
  input.last 81
  input.last_lock true
  output.first_lock true
  output.last 40
  output.last_lock true
  speed 2
  before continue
  after continue
  filter none
  time ""
  name HeroRetime
  label "\[value input.first] -> \[value output.first]\\\\noffset: \[return \[expr \[value output.first]-\[value input.first]]]\\\\nspeed: \[value speed]"
  xpos -1652
  ypos -2427
 }
set Ne078a200 [stack 0]
 Dot {
  name Dot18
  note_font_size 24
  note_font_color 0xff
  xpos 6588
  ypos -2419
 }
 Dot {
  name Dot16
  note_font_size 24
  note_font_color 0xff
  xpos 6588
  ypos -2060
 }
set Ne078ae00 [stack 0]
 Dot {
  name Dot31
  note_font_size 24
  note_font_color 0xff
  xpos 6840
  ypos -2060
 }
set Ne078b400 [stack 0]
 Dot {
  name Dot12
  note_font_size 24
  note_font_color 0xff
  xpos 7109
  ypos -2061
 }
set Ne078ba00 [stack 0]
 Dot {
  name Dot10
  note_font_size 24
  note_font_color 0xff
  xpos 7338
  ypos -2061
 }
set Ne078c000 [stack 0]
 Dot {
  name Dot11
  note_font_size 24
  note_font_color 0xff
  xpos 7557
  ypos -2061
 }
set Ne078c600 [stack 0]
 Dot {
  name Dot38
  note_font_size 24
  note_font_color 0xff
  xpos 7790
  ypos -2060
 }
set Ne078cc00 [stack 0]
 TimeOffset {
  time_offset -1
  time ""
  name TimeOffset4
  label "\[value time_offset]"
  xpos 7756
  ypos -1960
 }
push $Ne0789600
 Dot {
  name Dot37
  note_font_size 24
  note_font_color 0xff
  xpos 3518
  ypos -1788
 }
set Ne078d800 [stack 0]
 OFXcom.genarts.sapphire.time.s_retime_v1 {
  Mode "Retime Speed"
  speed 0.5
  percent_longer 100
  setKnobFlags {percent_longer +HIDDEN}
  percent 200
  setKnobFlags {percent +HIDDEN}
  input_fps 30
  setKnobFlags {input_fps +HIDDEN}
  output_fps 60
  setKnobFlags {output_fps +HIDDEN}
  output_length 30
  setKnobFlags {output_length +HIDDEN}
  input_frame 1
  setKnobFlags {input_frame +HIDDEN}
  result Result
  start_frame 1
  motion_blur 0
  "Flow Tuning" 0
  flow_field_smoothness 0.8
  emphasize_edges 0
  flow_view_scale 0.9
  "Crop Input" 0
  crop_left 0
  crop_right 0
  crop_top 0
  crop_bottom 0
  Enable_GPU true
  version 17.5
  version2 3108654
  name S_Retime1
  xpos 3484
  ypos -826
  disable true
 }
 TimeOffset {
  time_offset 1
  time ""
  name TimeOffset3
  label "\[value time_offset]"
  xpos 3484
  ypos -754
 }
push 0
push $Ne0787e00
 Kronos {
  input.last 81
  retimedChannels all
  timing2 Frame
  timingFrame2 {{curve x1 1 x161 81}}
  motionEstimation Regularized
  resampleType Lanczos6
  Shutter 1
  Advanced 1
  name KronosPlate
  xpos 339
  ypos -755
 }
set Ne078f000 [stack 0]
push $Ne0789000
 OFXcom.revisionfx.twixtor_v5 {
  Display "Twixtored Output"
  UseGPU ON
  TimeRetimeMethod "Frame Number"
  Speed 100
  Frame {{curve x1 1 x161 81}}
  TrackingQuality Twixtor7_MAX
  setKnobFlags {TrackingQuality +HIDDEN}
  TrackingQualityV2 "DNN - model 1"
  TrackingQualitySelector Sloppy
  GlobalMotion false
  MotionSensitivity 70
  ImagePrep "Gamma Enhance (Trk src is linear?)"
  TrackRGBA false
  Video360 false
  FrameInterp Nearest
  Warping Inverse
  SmartBlend false
  MotionBlurCompensation 0
  MarkSegments "Cut A"
  MarkSegmentsSelector "Select Cut"
  StartFrame 1
  LastFrame 81
  CustomData_DoNotEdit aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  name TwixtorPlate
  note_font Gotham
  xpos 2259
  ypos -815
  disable true
 }
set Ne078fc00 [stack 0]
 Group {
  inputs 2
  name TwixFix1
  note_font Verdana
  xpos 2259
  ypos -752
 }
  Input {
   inputs 0
   name InputKronos
   xpos -958
   ypos -1443
   number 1
  }
  Dot {
   name Dot1
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -924
   ypos -1021
  }
  Input {
   inputs 0
   name InputTwixtor
   xpos -528
   ypos -1449
  }
  Dot {
   name Dot2
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -494
   ypos -1388
  }
set Ne0792800 [stack 0]
  Dot {
   name Dot4
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -631
   ypos -1388
  }
set Ne0792e00 [stack 0]
  Dot {
   name Dot3
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -805
   ypos -1388
  }
  HueKeyer {
   lut {amount {curve 0 K x1.3813833 0.0001485496759 x1.49991715 1.000258446 x1.49991715 1.000258446 x1.500313163 0.0001485496759 S x6 0}
     sat_thrsh {curve 0.8973511457 s0 t-0 0.8973511457 0.8973511457 0.8973511457 0.8973511457 x4 0.8973511457 x6 0.8973511457}}
   name HueKeyer2
   note_font Gotham
   xpos -839
   ypos -1328
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate2
   label "\[value size]"
   note_font Gotham
   xpos -839
   ypos -1294
  }
  Premult {
   name Premult3
   note_font Gotham
   xpos -839
   ypos -1244
  }
push $Ne0792e00
  HueKeyer {
   lut {amount {curve 0 K x0.8890606165 0 x0.9957441688 1 x1.003811121 1 x1.009890079 0 S x6 0}
     sat_thrsh {curve x0.1131925583 0.9034141302 0.9034141302 0.9034141302 0.9034141302 0.9034141302 x4.113192558 0.9034141302 x6.113192558 0.9034141302 s0}}
   name HueKeyer1
   note_font Gotham
   xpos -665
   ypos -1348
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate1
   label "\[value size]"
   note_font Gotham
   xpos -665
   ypos -1314
  }
  Premult {
   name Premult1
   note_font Gotham
   xpos -665
   ypos -1268
  }
  Merge2 {
   inputs 2
   operation in
   bbox B
   name Merge4
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -665
   ypos -1088
  }
push $Ne0792800
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   note_font Gotham
   xpos -528
   ypos -1093
  }
  Premult {
   name Premult2
   note_font Gotham
   xpos -528
   ypos -1059
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge5
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -528
   ypos -1024
  }
  Output {
   name Output1
   xpos -528
   ypos -924
  }
 end_group
push $Ne078fc00
 Switch {
  inputs 2
  name MSwitch1
  label "\[value which]"
  note_font Gotham
  xpos 2341
  ypos -706
 }
push $Ne0788a00
 ABME_Retime.gizmo {
  name ABME_Retime_interpolate
  xpos 1618
  ypos -808
  disable true
 }
push $Ne0788400
 OFlow2 {
  input.last 81
  timing2 Frame
  timingOutputSpeed 2
  timingFrame2 {{curve x1 1 x161 81}}
  Advanced 1
  name OFlowPlate
  xpos 1003
  ypos -808
 }
push $Ne078f000
push $Ne0787800
 OFlow2 {
  input.last 81
  interpolation Blend
  timing2 Frame
  timingOutputSpeed 1
  timingFrame2 {{curve x1 1 x161 81}}
  name OFlowPlateBlend
  xpos -374
  ypos -743
 }
 Switch {
  inputs 7
  which 1
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
   {i6 ""}
  }
  name interpolated_switch
  label "\[value which]"
  xpos 553
  ypos -360
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "MATTE \[frame]\n\[set frame \[frame]\nif \{\$frame % 2 == 0\} \{\n    return \"Generated\"\n\} else \{\n    return \"Original\"\n\}]"
  old_message {{77 65 84 84 69 32 50 50 10 71 101 110 101 114 97 116 101 100}
    }
  old_expression_markers {{6 7 9 17}
    }
  box {0 0 {width} {height}}
  yjustify center
  transforms {{0 2}
    }
  global_font_scale 0.5
  center {320 240}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 480}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 320 240 0 0 1 1 0 0 0 0}
    }
  color_panelDropped true
  name IText4
  xpos 553
  ypos -294
 }
 Retime {
  input.first 2
  input.first_lock true
  input.last 161
  input.last_lock true
  output.first_lock true
  output.last 81
  speed 2
  before continue
  after continue
  filter none
  time ""
  name RetimeInterpolated
  label "\[value input.first] -> \[value output.first]\\\\noffset: \[return \[expr \[value output.first]-\[value input.first]]]\\\\nspeed: \[value speed]"
  xpos 553
  ypos -256
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle1
  label "\[value in1] - \[value out1]"
  xpos 553
  ypos -208
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  label "\[value operation]:\\\\n\[value channels]\\\\n\[value channels2]\\\\n\[value channels3]\\\\n\[value channels4]"
  xpos 553
  ypos -174
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "matte interpolation\n\[value matte_interpolation]"
  old_message {{109 97 116 116 101 32 105 110 116 101 114 112 111 108 97 116 105 111 110 10 75 114 111 110 111 115}
    }
  old_expression_markers {{20 25}
    }
  box {0 0 {width} {height}}
  yjustify bottom
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 100 0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 40}
    }
  cursor_position 20
  global_font_scale 0.5
  center {640 360}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 720}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 640 360 0 0 1 1 0 0 0 0}
    }
  color {1 1 1 1}
  name Text1
  xpos 553
  ypos -128
 }
 Dot {
  name Dot14
  note_font_size 24
  note_font_color 0xff
  xpos 587
  ypos 506
 }
set Ne07ae600 [stack 0]
push $Ne078cc00
 Dot {
  name Dot40
  note_font_size 24
  note_font_color 0xff
  xpos 8025
  ypos -2059
 }
 OFXcom.genarts.sapphire.time.s_retime_v1 {
  Mode "Retime Speed"
  speed 0.5
  percent_longer 100
  setKnobFlags {percent_longer +HIDDEN}
  percent 200
  setKnobFlags {percent +HIDDEN}
  input_fps 30
  setKnobFlags {input_fps +HIDDEN}
  output_fps 60
  setKnobFlags {output_fps +HIDDEN}
  output_length 30
  setKnobFlags {output_length +HIDDEN}
  input_frame 1
  setKnobFlags {input_frame +HIDDEN}
  result Result
  start_frame 1
  motion_blur 0
  "Flow Tuning" 0
  flow_field_smoothness 0.8
  emphasize_edges 0
  flow_view_scale 0.9
  "Crop Input" 0
  crop_left 0
  crop_right 0
  crop_top 0
  crop_bottom 0
  Enable_GPU true
  version 17.5
  version2 3108654
  name S_Retime2
  xpos 7991
  ypos -1989
  disable true
 }
 TimeOffset {
  time_offset -1
  time ""
  name TimeOffset6
  label "\[value time_offset]"
  xpos 7991
  ypos -1965
 }
push 0
push $Ne078b400
 Kronos {
  input.last 80
  retimedChannels all
  timing2 Frame
  timingFrame2 {{curve x1 1 x161 81}}
  motionEstimation Regularized
  vectorDetailReg 1
  strengthReg 1
  name KronosHero
  xpos 6806
  ypos -1957
 }
set Ne07b5400 [stack 0]
push $Ne078c600
 OFXcom.revisionfx.twixtor_v5 {
  Display "Twixtored Output"
  UseGPU ON
  TimeRetimeMethod "Frame Number"
  Speed 100
  Frame {{curve x1 1 x161 81}}
  TrackingQuality Twixtor7_MAX
  setKnobFlags {TrackingQuality +HIDDEN}
  TrackingQualityV2 "DNN - model 1"
  TrackingQualitySelector Sloppy
  GlobalMotion false
  MotionSensitivity 70
  ImagePrep "Gamma Enhance (Trk src is linear?)"
  TrackRGBA false
  Video360 false
  FrameInterp Nearest
  Warping Inverse
  SmartBlend false
  MotionBlurCompensation 0
  MarkSegments "Cut A"
  MarkSegmentsSelector "Select Cut"
  StartFrame 1
  LastFrame 81
  CustomData_DoNotEdit aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  name TwixtorHero
  note_font Gotham
  xpos 7523
  ypos -2008
 }
set Ne07b7c00 [stack 0]
 Group {
  inputs 2
  name TwixFix2
  note_font Verdana
  xpos 7523
  ypos -1960
 }
  Input {
   inputs 0
   name InputKronos
   xpos -958
   ypos -1443
   number 1
  }
  Dot {
   name Dot1
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -924
   ypos -1021
  }
  Input {
   inputs 0
   name InputTwixtor
   xpos -528
   ypos -1449
  }
  Dot {
   name Dot2
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -494
   ypos -1388
  }
set Ne07ba800 [stack 0]
  Dot {
   name Dot4
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -631
   ypos -1388
  }
set Ne07bae00 [stack 0]
  Dot {
   name Dot3
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -805
   ypos -1388
  }
  HueKeyer {
   lut {amount {curve 0 K x1.3813833 0.0001485496759 x1.49991715 1.000258446 x1.49991715 1.000258446 x1.500313163 0.0001485496759 S x6 0}
     sat_thrsh {curve 0.8973511457 s0 t-0 0.8973511457 0.8973511457 0.8973511457 0.8973511457 x4 0.8973511457 x6 0.8973511457}}
   name HueKeyer2
   note_font Gotham
   xpos -839
   ypos -1328
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate2
   label "\[value size]"
   note_font Gotham
   xpos -839
   ypos -1294
  }
  Premult {
   name Premult3
   note_font Gotham
   xpos -839
   ypos -1244
  }
push $Ne07bae00
  HueKeyer {
   lut {amount {curve 0 K x0.8890606165 0 x0.9957441688 1 x1.003811121 1 x1.009890079 0 S x6 0}
     sat_thrsh {curve x0.1131925583 0.9034141302 0.9034141302 0.9034141302 0.9034141302 0.9034141302 x4.113192558 0.9034141302 x6.113192558 0.9034141302 s0}}
   name HueKeyer1
   note_font Gotham
   xpos -665
   ypos -1348
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate1
   label "\[value size]"
   note_font Gotham
   xpos -665
   ypos -1314
  }
  Premult {
   name Premult1
   note_font Gotham
   xpos -665
   ypos -1268
  }
  Merge2 {
   inputs 2
   operation in
   bbox B
   name Merge4
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -665
   ypos -1088
  }
push $Ne07ba800
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   note_font Gotham
   xpos -528
   ypos -1093
  }
  Premult {
   name Premult2
   note_font Gotham
   xpos -528
   ypos -1059
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge5
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -528
   ypos -1024
  }
  Output {
   name Output1
   xpos -528
   ypos -924
  }
 end_group
push $Ne07b7c00
 Switch {
  inputs 2
  name MSwitch2
  label "\[value which]"
  note_font Gotham
  xpos 7523
  ypos -1934
 }
push $Ne078c000
 ABME_Retime.gizmo {
  name ABME_Retime3
  xpos 7304
  ypos -1991
  disable true
 }
push $Ne078ba00
 OFlow2 {
  input.last 80
  timing2 Frame
  timingFrame2 {{curve x1 1 x161 81}}
  vectorDetailLocal 0.15
  smoothnessLocal 0.325
  resampleType Lanczos6
  Shutter 1
  Advanced 1
  name OFlowHero
  xpos 7075
  ypos -1990
 }
push $Ne07b5400
push $Ne078ae00
 OFlow2 {
  input.last 80
  interpolation Blend
  timing2 Frame
  timingOutputSpeed 1
  timingFrame2 {{curve x1 1 x161 81}}
  name OFlowBlend
  xpos 6554
  ypos -1945
 }
 Switch {
  inputs 7
  which 4
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
   {i6 ""}
  }
  name hero_interpolation_swtich
  label "\[value which]"
  xpos 7075
  ypos -1808
 }
 Dot {
  name Dot35
  note_font_size 24
  note_font_color 0xff
  xpos 7109
  ypos -1702
 }
set Ne07c7e00 [stack 0]
 Dot {
  name Dot22
  note_font_size 24
  note_font_color 0xff
  xpos 7489
  ypos -1551
 }
push $Ne07c7e00
 Dot {
  name Dot15
  note_font_size 24
  note_font_color 0xff
  xpos 7295
  ypos -1552
 }
 RAFT.gizmo {
  name RAFT1
  xpos 7261
  ypos -1439
  disable true
 }
 VectorToMotion {
  name VectorToMotion3
  xpos 7261
  ypos -1382
  scale {{"proxy ? proxy_scale.0 : 1"} {"proxy ? proxy_scale.1 : 1"}}
 }
push $Ne07c7e00
 Dot {
  name Dot21
  note_font_size 24
  note_font_color 0xff
  xpos 7128
  ypos -1552
 }
 ABME_SV.gizmo {
  name ABME_SV1
  xpos 7094
  ypos -1438
  disable true
 }
 VectorToMotion {
  name VectorToMotion4
  xpos 7094
  ypos -1374
  scale {{"proxy ? proxy_scale.0 : 1"} {"proxy ? proxy_scale.1 : 1"}}
 }
push $Ne07c7e00
 Dot {
  name Dot19
  note_font_size 24
  note_font_color 0xff
  xpos 6963
  ypos -1552
 }
 SmartVector {
  name SmartVector2
  xpos 6929
  ypos -1433
 }
 VectorToMotion {
  name VectorToMotion5
  xpos 6939
  ypos -1375
  scale {{"proxy ? proxy_scale.0 : 1"} {"proxy ? proxy_scale.1 : 1"}}
 }
push $Ne07c7e00
 Dot {
  name Dot17
  note_font_size 24
  note_font_color 0xff
  xpos 6823
  ypos -1552
 }
 VectorGenerator {
  motionEstimation Regularized
  name VectorGenerator1
  xpos 6789
  ypos -1433
 }
 Switch {
  inputs 5
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
  }
  name vector_switch
  label "\[value which]"
  xpos 7023
  ypos -1222
 }
set Ne5828200 [stack 0]
 Dot {
  name Dot27
  note_font_size 24
  note_font_color 0xff
  xpos 5236
  ypos -1214
 }
 Shuffle2 {
  fromInput1 {{0} B}
  in1 motion
  fromInput2 {{0} B}
  mappings "4 forward.u 0 0 rgba.red 0 0 forward.v 0 1 rgba.green 0 1 backward.u 0 2 rgba.blue 0 2 backward.v 0 3 rgba.alpha 0 3"
  name Shuffle3
  label "\[value in1] - \[value out1]"
  xpos 5202
  ypos -1118
  postage_stamp true
 }
 Dot {
  name Dot26
  note_font_size 24
  note_font_color 0xff
  xpos 5236
  ypos -964
 }
set Ne5829400 [stack 0]
push $Ne078d800
 Dot {
  name Dot25
  note_font_size 24
  note_font_color 0xff
  xpos 4726
  ypos -1788
 }
 OFlow2 {
  input.last 161
  interpolation Frame
  timingFrame2 {{curve x1 1 x161 321}}
  name DoublePlateFrames
  xpos 4692
  ypos -1731
 }
set Ne582a000 [stack 0]
 Dot {
  name Dot32
  note_font_size 24
  note_font_color 0xff
  xpos 4916
  ypos -1728
 }
set Ne581d000 [stack 0]
 Dot {
  name Dot29
  note_font_size 24
  note_font_color 0xff
  xpos 5677
  ypos -1728
 }
 TimeOffset {
  time_offset -1
  time ""
  name TimeOffset5
  label "\[value time_offset]"
  xpos 5643
  ypos -900
 }
 Crop {
  box {0 0 {Input1.width} {Input1.height}}
  name Crop2
  xpos 5643
  ypos -867
 }
set Ne582b600 [stack 0]
 Copy {
  inputs 2
  from0 forward.u
  to0 forward.u
  from1 forward.v
  to1 forward.v
  from2 backward.u
  to2 backward.u
  from3 backward.v
  to3 backward.v
  name Copy4
  xpos 5643
  ypos -681
 }
 IDistort {
  channels rgba
  uv forward
  name IDistort5
  label "\[value uv]"
  xpos 5643
  ypos -488
 }
push $Ne5828200
 Dot {
  name Dot34
  note_font_size 24
  note_font_color 0xff
  xpos 8261
  ypos -1214
 }
set Ne582c800 [stack 0]
 Shuffle2 {
  fromInput1 {{0} B}
  in1 backward
  fromInput2 {{0} B}
  mappings "4 black -1 -1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3 backward.u 0 0 rgba.red 0 0 backward.v 0 1 rgba.green 0 1"
  name Shuffle_Backward
  label "\[value in1] - \[value out1]"
  xpos 8227
  ypos -1120
  postage_stamp true
 }
 Multiply {
  channels rgb
  value {{"proxy? 1/width/proxy_scale:1/width"} {"proxy? 1/height/proxy_scale:1/height"} 1 1}
  name Multiply5
  xpos 8227
  ypos -994
 }
 Expression {
  expr0 "(x+0.5)/width - r"
  expr1 "(y+0.5)/height - g"
  name Expression7
  xpos 8227
  ypos -951
 }
push $Ne582b600
 STMap {
  inputs 2
  uv rgb
  name STMap1
  xpos 8227
  ypos -871
 }
 Dot {
  name Dot42
  note_font_size 24
  note_font_color 0xff
  xpos 8261
  ypos -480
 }
 Switch {
  inputs 2
  which 1
  name SwitchForward
  label "\[value which]"
  xpos 7415
  ypos -488
 }
 Dot {
  name Dot41
  note_font_size 24
  note_font_color 0xff
  xpos 7449
  ypos -87
 }
set Ne582fc00 [stack 0]
push $Ne5829400
push $Ne581d000
 TimeOffset {
  time_offset 1
  time ""
  name TimeOffset1
  label "\[value time_offset]"
  xpos 4882
  ypos -889
 }
 Crop {
  box {0 0 {Input1.width} {Input1.height x28 720}}
  name Crop1
  xpos 4882
  ypos -836
 }
set Ne5830800 [stack 0]
 Copy {
  inputs 2
  from0 forward.u
  to0 forward.u
  from1 forward.v
  to1 forward.v
  from2 backward.u
  to2 backward.u
  from3 backward.v
  to3 backward.v
  name Copy5
  xpos 4882
  ypos -678
 }
 IDistort {
  channels rgba
  uv backward
  name IDistort4
  label "\[value uv]"
  xpos 4882
  ypos -356
 }
push $Ne582c800
 Dot {
  name Dot33
  note_font_size 24
  note_font_color 0xff
  xpos 8638
  ypos -1214
 }
 Shuffle2 {
  fromInput1 {{0} B}
  in1 forward
  fromInput2 {{0} B}
  mappings "4 black -1 -1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3 forward.u 0 0 rgba.red 0 0 forward.v 0 1 rgba.green 0 1"
  name Shuffle_forward
  label "\[value in1] - \[value out1]"
  xpos 8604
  ypos -1121
  postage_stamp true
 }
 Multiply {
  channels rgb
  value {{"proxy? 1/width/proxy_scale:1/width"} {"proxy? 1/height/proxy_scale:1/height"} 1 1}
  name Multiply1
  xpos 8604
  ypos -1000
 }
 Expression {
  expr0 "(x+0.5)/width - r"
  expr1 "(y+0.5)/height - g"
  name Expression1
  xpos 8604
  ypos -957
 }
push $Ne5830800
 STMap {
  inputs 2
  uv rgb
  name STMap2
  xpos 8604
  ypos -841
 }
 Dot {
  name Dot43
  note_font_size 24
  note_font_color 0xff
  xpos 8638
  ypos -348
 }
 Switch {
  inputs 2
  which 1
  name SwitchBackward
  label "\[value which]"
  xpos 6654
  ypos -356
 }
 Dot {
  name Dot39
  note_font_size 24
  note_font_color 0xff
  xpos 6688
  ypos -87
 }
set Ne5835600 [stack 0]
 Switch {
  inputs 2
  which {{frame%2 x43 1}}
  name Switch2
  label "\[value which]"
  xpos 6994
  ypos -94
 }
set Ne5835c00 [stack 0]
 Kronos {
  input.first 0
  input.last 743
  retimedChannels all
  timing2 Frame
  timingFrame2 {{frame+.5}}
  motionEstimation Regularized
  name Kronos1
  xpos 6913
  ypos 362
 }
set Ne5836200 [stack 0]
push $Ne5835c00
 OFXcom.revisionfx.twixtor_v5 {
  Display "Twixtored Output"
  UseGPU ON
  TimeRetimeMethod "Frame Number"
  Speed 100
  Frame {{frame+.5}}
  TrackingQuality Twixtor7_MAX
  setKnobFlags {TrackingQuality +HIDDEN}
  TrackingQualityV2 "DNN - model 1"
  TrackingQualitySelector Sloppy
  GlobalMotion false
  MotionSensitivity 70
  ImagePrep "Gamma Enhance (Trk src is linear?)"
  TrackRGBA false
  Video360 false
  FrameInterp Nearest
  Warping Inverse
  SmartBlend false
  MotionBlurCompensation 0
  MarkSegments "Cut A"
  MarkSegmentsSelector "Select Cut"
  StartFrame 1
  LastFrame 30000
  CustomData_DoNotEdit aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  name Twixtor1
  note_font Gotham
  xpos 7125
  ypos 286
 }
set Ne5838000 [stack 0]
 Group {
  inputs 2
  name TwixFix3
  note_font Verdana
  xpos 7125
  ypos 365
 }
  Input {
   inputs 0
   name InputKronos
   xpos -958
   ypos -1443
   number 1
  }
  Dot {
   name Dot1
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -924
   ypos -1021
  }
  Input {
   inputs 0
   name InputTwixtor
   xpos -528
   ypos -1449
  }
  Dot {
   name Dot2
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -494
   ypos -1388
  }
set Ne5839e00 [stack 0]
  Dot {
   name Dot4
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -631
   ypos -1388
  }
set Ne583a400 [stack 0]
  Dot {
   name Dot3
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -805
   ypos -1388
  }
  HueKeyer {
   lut {amount {curve 0 K x1.3813833 0.0001485496759 x1.49991715 1.000258446 x1.49991715 1.000258446 x1.500313163 0.0001485496759 S x6 0}
     sat_thrsh {curve 0.8973511457 s0 t-0 0.8973511457 0.8973511457 0.8973511457 0.8973511457 x4 0.8973511457 x6 0.8973511457}}
   name HueKeyer2
   note_font Gotham
   xpos -839
   ypos -1328
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate2
   label "\[value size]"
   note_font Gotham
   xpos -839
   ypos -1294
  }
  Premult {
   name Premult3
   note_font Gotham
   xpos -839
   ypos -1244
  }
push $Ne583a400
  HueKeyer {
   lut {amount {curve 0 K x0.8890606165 0 x0.9957441688 1 x1.003811121 1 x1.009890079 0 S x6 0}
     sat_thrsh {curve x0.1131925583 0.9034141302 0.9034141302 0.9034141302 0.9034141302 0.9034141302 x4.113192558 0.9034141302 x6.113192558 0.9034141302 s0}}
   name HueKeyer1
   note_font Gotham
   xpos -665
   ypos -1348
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate1
   label "\[value size]"
   note_font Gotham
   xpos -665
   ypos -1314
  }
  Premult {
   name Premult1
   note_font Gotham
   xpos -665
   ypos -1268
  }
  Merge2 {
   inputs 2
   operation in
   bbox B
   name Merge4
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -665
   ypos -1088
  }
push $Ne5839e00
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   note_font Gotham
   xpos -528
   ypos -1093
  }
  Premult {
   name Premult2
   note_font Gotham
   xpos -528
   ypos -1059
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge5
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -528
   ypos -1024
  }
  Output {
   name Output1
   xpos -528
   ypos -924
  }
 end_group
push $Ne5838000
 Switch {
  inputs 2
  name MSwitch3
  label "\[value which]"
  note_font Gotham
  xpos 7125
  ypos 396
 }
push $Ne5836200
push $Ne5835c00
 OFlow2 {
  input.last 2
  timing2 Frame
  timingOutputSpeed 1
  timingFrame2 {{frame+.5}}
  name OFlow1
  xpos 6798
  ypos 373
 }
push $Ne5835600
push $Ne582fc00
 Merge2 {
  inputs 2
  operation average
  bbox B
  name Merge5
  label "\[if \{\[value mix]<1\} \{ value mix \}]"
  xpos 6654
  ypos 369
 }
push $Ne5835600
push $Ne582fc00
 Switch {
  inputs 6
  which 5
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
  }
  name SwitchMotionType
  label "\[value which]"
  xpos 6798
  ypos 542
 }
push $Ne582a000
 Dot {
  name Dot28
  note_font_size 24
  note_font_color 0xff
  xpos 4726
  ypos 598
 }
 Switch {
  inputs 2
  which {{"frame % 2"}}
  name Switch1
  label "\[value which]"
  xpos 6798
  ypos 590
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "hero interpolation\n\[value hero_interpolation]\nvector generator\n\[value vector_generator]"
  old_message {{104 101 114 111 32 105 110 116 101 114 112 111 108 97 116 105 111 110 10 84 119 105 120 116 111 114 10 118 101 99 116 111 114 32 103 101 110 101 114 97 116 111 114 10 86 101 99 116 111 114 71 101 110 101 114 97 116 111 114}
    }
  old_expression_markers {{19 25 44 58}
    }
  box {0 0 {width} {height}}
  yjustify bottom
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 0 98.5 1 98.5 2 98.5 3 98.5 4 98.5 5 98.5 6 98.5 7 98.5 8 98.5 9 98.5 10 98.5 11 98.5 12 98.5 13 98.5 14 98.5 15 98.5 16 98.5 17 98.5 19 100 20 100 21 100 22 100 19 40 20 40 21 40 22 40 18 40 18 40 27 40 28 40 29 40 30 40 31 40 32 40 33 40 34 40 35 40 36 40 37 40 38 40 39 40 40 40 41 40 42 40 27 100 43 40 44 100 45 100 46 100 47 100 43 50 44 50 45 50 46 50 47 50}
    }
  baseline_values {{0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0}
    }
  cursor_position 63
  global_font_scale 0.5
  center {640 360}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 720}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 640 360 0 0 1 1 0 0 0 0}
    }
  name hero_interpolation_text
  xpos 6798
  ypos 693
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "distortion method\n\[value distortion_method]\nvector post process\n\[value vector_post]"
  old_message {{100 105 115 116 111 114 116 105 111 110 32 109 101 116 104 111 100 10 73 68 105 115 116 111 114 116 10 118 101 99 116 111 114 32 112 111 115 116 32 112 114 111 99 101 115 115 10 84 119 105 120 116 111 114}
    }
  old_expression_markers {{18 25 47 53}
    }
  box {0 0 {width} {height}}
  xjustify right
  yjustify bottom
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 100 19 100 20 100 21 100 22 100 26 40 27 40 28 40 29 40 30 40 31 40 32 40 33 40 34 40 35 40 36 40 37 40 38 40 39 40 40 40 41 40 42 40 43 40 44 40 45 40 46 40 47 100 48 100 49 100 0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 40 21 40 22 40 26 40 27 40 28 40 29 40 30 40 31 40 32 40 33 40 34 40 35 40 36 40 37 40 38 40 39 40 40 40 41 40 42 40 43 40 44 40 45 40 46 40 47 40 48 40 49 40}
    }
  cursor_position 18
  global_font_scale 0.5
  center {640 360}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{1280 720}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 640 360 0 0 1 1 0 0 0 0}
    }
  name vectortype_output
  xpos 6798
  ypos 756
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "MATTE \[frame]\n\[set frame \[frame]\nif \{\$frame % 2 == 0\} \{\n    return \"Original\"\n\} else \{\n    return \"Generated\"\n\}]"
  old_message {{77 65 84 84 69 32 50 49 10 71 101 110 101 114 97 116 101 100}
    }
  old_expression_markers {{6 7 9 17}
    }
  box {0 0 {width} {height}}
  yjustify center
  transforms {{0 2}
    }
  cursor_position 108
  global_font_scale 0.5
  center {320 240}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 480}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 320 240 0 0 1 1 0 0 0 0}
    }
  name frame_information
  xpos 6798
  ypos 800
 }
 Retime {
  input.first_lock true
  input.last 161
  output.last 81
  speed 2
  before continue
  after continue
  filter none
  time ""
  name RetimeExtracted
  label "\[value input.first] -> \[value output.first]\\\\noffset: \[return \[expr \[value output.first]-\[value input.first]]]\\\\nspeed: \[value speed]"
  xpos 6798
  ypos 832
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle2
  label "\[value in1] - \[value out1]"
  xpos 6798
  ypos 872
 }
 Remove {
  operation keep
  channels rgba
  name Remove2
  label "\[value operation]:\\\\n\[value channels]\\\\n\[value channels2]\\\\n\[value channels3]\\\\n\[value channels4]"
  xpos 6798
  ypos 988
 }
 Dot {
  name Dot13
  note_font_size 24
  note_font_color 0xff
  xpos 6832
  ypos 1201
 }
set Ne5858400 [stack 0]
 Merge2 {
  inputs 2
  operation average
  bbox B
  name Merge1
  label "\[if \{\[value mix]<1\} \{ value mix \}]"
  xpos 6798
  ypos 1961
 }
push $Ne5858400
push $Ne07ae600
 Switch {
  inputs 3
  which 1
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name parent_method_switch
  label "\[value which]"
  xpos 553
  ypos 1956
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "MATTE \[frame]"
  old_message {{77 65 84 84 69 32 49 49}
    }
  old_expression_markers {{6 7}
    }
  box {0 0 {width} {height}}
  transforms {{0 2}
    }
  cursor_position 5
  global_font_scale 0.5
  center {320 240}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{3.5 124.25}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 320 240 0 0 1 1 0 0 0 0}
    }
  name MatteText
  xpos 35
  ypos 1962
 }
 Dot {
  name Dot23
  note_font_size 24
  note_font_color 0xff
  xpos -1276
  ypos 1975
 }
set Ne585e600 [stack 0]
 Dot {
  name Dot44
  note_font_size 24
  note_font_color 0xff
  xpos -1276
  ypos 2694
 }
set Ne585d200 [stack 0]
 Dot {
  name Dot45
  note_font_size 24
  note_font_color 0xff
  xpos -1276
  ypos 3107
 }
push $Ne078a200
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "HERO \[frame]"
  old_message {{72 69 82 79 32 49 49}
    }
  old_expression_markers {{5 6}
    }
  box {0 0 {width} {height}}
  xjustify right
  transforms {{0 2}
    }
  global_font_scale 0.5
  center {320 240}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{3.5 124.25}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 320 240 0 0 1 1 0 0 0 0}
    }
  name HeroText
  xpos -1652
  ypos -2266
 }
 Dot {
  name Dot1
  label "This pipe outputs unaltered hero frame"
  note_font_size 24
  note_font_color 0xff
  xpos -1618
  ypos -2090
 }
 Dot {
  name Dot24
  note_font_size 24
  note_font_color 0xff
  xpos -1623
  ypos 1962
 }
set Ne5862e00 [stack 0]
push $Ne585e600
 Merge2 {
  inputs 2
  operation difference
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name difference_merge
  label "\[if \{\[value mix]<1\} \{ value mix \}]"
  xpos -1506
  ypos 2340
 }
push $Ne5862e00
push $Ne585d200
 Switch {
  inputs 2
  name output_switch
  label "\[value which]"
  xpos -1657
  ypos 2686
 }
 Switch {
  inputs 2
  name diff_switch
  label "\[value which]"
  xpos -1657
  ypos 2805
 }
add_layer {matte matte.red matte.green matte.blue}
 Shuffle2 {
  inputs 2
  fromInput1 {{1} B A}
  out1 matte
  fromInput2 {{1} B A}
  mappings "3 rgba.red 0 0 matte.red 0 0 rgba.green 0 1 matte.green 0 1 rgba.blue 0 2 matte.blue 0 2"
  name embed_shuffle
  label "\[value in1] - \[value out1]"
  xpos -1657
  ypos 3075
  postage_stamp true
 }
 FrameRange {
  first_frame 1
  last_frame 40
  time ""
  name OutputFrameRange2
  label "\[value first_frame]-\[value last_frame]"
  xpos -1657
  ypos 3337
 }
 Output {
  name Output1
  xpos -1657
  ypos 3475
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0xdfff00ff
  label "The lastframe should also be a matte frame"
  note_font_size 20
  xpos -957
  ypos -3625
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xdfff00ff
  label "Even Frames are Generated\n"
  note_font_size 20
  xpos 7164
  ypos -1057
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xdfff00ff
  label "The GhostFrameExtractor expects a matte frame to be the first frame.\nSince clips are delivered randomly, this will add a matte frame up front\nif needed."
  note_font_size 20
  xpos -1068
  ypos -4099
 }
 StickyNote {
  inputs 0
  name StickyNote5
  tile_color 0xdfff00ff
  label "This little error correction bit\nhandles an ABME error where if\nthere is no input when it's created\nit produces and error.\n\nIf altering the gizmo and saving a new\nverion, detach the input before saving.\n\nAlso, make sure to reset all the settings\nto something that is universal. Like \nEverything using Kronos and VectorGenerator\n"
  note_font_size 20
  xpos -2083
  ypos -4931
 }
 StickyNote {
  inputs 0
  name StickyNote6
  tile_color 0xdfff00ff
  label "Backward\nFROM PREVIOUS FRAME ---> TO ACTUAL FRAME\n\nForward\nACTUAL FRAME <--- FROM NEXT FRAME "
  note_font_size 20
  xpos 4214
  ypos -820
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xdfff00ff
  label "This switch alternates between real frames and generated frames\nGENERATED FRAMES ARE ODD"
  note_font_size 20
  xpos 6570
  ypos 629
 }
 StickyNote {
  inputs 0
  name StickyNote7
  tile_color 0xdfff00ff
  label "this switch makes a 2 frame clip"
  note_font_size 20
  xpos 6904
  ypos -136
 }
end_group
set Ne076c000 [stack 0]
Shuffle2 {
 fromInput1 {{0} B}
 in1 matte
 fromInput2 {{0} B}
 mappings "4 matte.red 0 0 rgba.red 0 0 matte.green 0 1 rgba.green 0 1 matte.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
 name Shuffle1
 label "Matte to RGB"
 note_font Gotham
 xpos 678
 ypos -291
 postage_stamp true
}
Viewer {
 inputs 0
 frame_range 1-100
 frame_range_lock true
 monitorOutNDISenderName "NukeX - GhostFrameReleaseCandidate_v14 - Viewer2"
 monitorOutOutputTransform rec709
 name Viewer2
 tile_color 0x323232ff
 note_font Gotham
 xpos 599
 ypos -158
 addUserKnob {20 viewerLockInputStates +INVISIBLE}
 addUserKnob {26 READ_ME -STARTLINE +INVISIBLE T "The following knobs are needed for the Viewer Lock\n    plugin to function. If you don't have Viewer Lock,\n    you can safely ignore or delete them.\n\n    If they're causing problems, let me know at\n    matt_roe@live.com.\n    "}
 addUserKnob {6 inputState0 +INVISIBLE +STARTLINE}
 addUserKnob {6 inputState1 +INVISIBLE +STARTLINE}
 addUserKnob {6 inputState2 +INVISIBLE +STARTLINE}
 addUserKnob {6 inputState3 +INVISIBLE +STARTLINE}
 addUserKnob {6 inputState4 +INVISIBLE +STARTLINE}
 addUserKnob {6 inputState5 +INVISIBLE +STARTLINE}
 addUserKnob {6 inputState6 +INVISIBLE +STARTLINE}
 addUserKnob {6 inputState7 +INVISIBLE +STARTLINE}
 addUserKnob {6 inputState8 +INVISIBLE +STARTLINE}
 addUserKnob {6 inputState9 +INVISIBLE +STARTLINE}
}
push $Ne076c000
Dot {
 name Dot1
 note_font "Gotham Bold Italic"
 note_font_size 24
 note_font_color 0xff
 xpos 577
 ypos -258
}
Group {
 inputs 0
 name GhostFrameExtractor_with_BCC
 onCreate "def find_logo(logo):\n    nukepaths = nuke.pluginPath()\n    for path in nukepaths:\n        candidate_path = os.path.join(path, logo)\n        if os.path.exists(candidate_path):\n            return candidate_path\n    return False\n\ndef set_logo(logo_path):\n    n = nuke.thisNode()\n    version = n.knob('version').value()\n    if logo_path:\n        html_path = f\"<img src='\{logo_path\}' width='50'>   \"\n    else:\n        html_path = \"<span style='font-size:45px;'>&#x1F47B;</span>\"\n\n    html_header = (\n        f\"<a href='https://www.itaki.com/ghostframeextractor-for-nuke/' style='text-decoration: none;'>\"\n        \n        f\"<div><span style='color:#F5F9F1;'>\{html_path\}</span>\"\n        f\"<font size='6'><span style='color:#F5F9F1;'>GhostFrame</span>\"\n        f\"<span style='color:#FFA100;'>Extractor</span>\"\n        f\"<font size='3'><span style='color:#CFE6B2;'></span>\"\n        f\"<span style='color:#DFD3E7;'>\{version\}</span></font></font></div></a>\"\n    )\n    n\['header'].setValue(html_header)\n\n\ndef check_plugs(plugins):\n    \n    all_plugins = nuke.plugins()\n    #all_plugins = \[path for path in all_paths if path.endswith('.dylib')]\n    #print(all_plugins)\n\n    for plugin in all_plugins:\n        for key in plugins:\n            if key in plugin:\n                plugins\[key] = True\n\n    for plugin in plugins:\n        if plugins\[plugin] == True:  # Check the value associated with the key\n            print(f'FOUND \{plugin\}')\n            gizmo.knob(plugin).setValue(True)\n            \n        else:\n            print(f'not found \{plugin\}')\n            gizmo.knob(plugin).setValue(False)\n    return plugins\n\nplugins = \{'forward': True, 'backward': True, 'average_motion': True, 'Blend': True, 'Kronos' : True, 'OFlow' : True, 'VectorGenerator' : True, 'SmartVectors': True, 'ABME' : False, 'RAFT' : False, 'NNFlowVector' : False, 'Twixtor' : False, 'BCC3Optical_Flow' : False, 'S_Retime' : False \}\n# Use a variable to store the current node\ngizmo = nuke.thisNode()\ninstalled_plugins = check_plugs(plugins)\n            \n# List all the options\nparent_methods = \['interpolate', 'vector extract']\nall_interpolation_methods = \['Blend', 'Kronos', 'OFlow', 'ABME', 'Twixtor','BCC3Optical_Flow', 'S_Retime']\nall_vector_generators = \['VectorGenerator', 'SmartVectors', 'ABME', 'RAFT', 'NNFlowVector' ]\nall_vector_post_processors = \['forward', 'backward', 'average_motion', 'OFlow', 'Kronos',  'Twixtor']\n\navailable_interpolation_methods = \[method for method in all_interpolation_methods if method in installed_plugins and installed_plugins\[method]]\navailable_vector_generators = \[generator for generator in all_vector_generators if generator in installed_plugins and installed_plugins\[generator]]\navailable_post_processors = \[process for process in all_vector_post_processors if process in installed_plugins and installed_plugins\[process]]\n# Set all the options\ngizmo.knob('parent_method').setValues(parent_methods)\ngizmo.knob('matte_interpolation').setValues(available_interpolation_methods)\ngizmo.knob('hero_interpolation').setValues(available_interpolation_methods)\ngizmo.knob('vector_generator').setValues(available_vector_generators)\ngizmo.knob('vector_post').setValues(available_post_processors)\n\nlogo = 'GhostFrameExtractor.png'\nlogo_path = find_logo(logo)\nset_logo(logo_path)"
 knobChanged "import nuke\n\ntesting = False\n\n# Helper function to get a node\ndef get_node(name):\n    node = nuke.toNode(name)\n    if node is None and testing:\n        print(f\"Node '\{name\}' not found.\")\n    return node\n\n# Helper function to set knob values\ndef set_knob_value(node_name, knob_values):\n    node = get_node(node_name)\n    if node:\n        for knob_name, knob_value in knob_values.items():\n            knob = node.knob(knob_name)\n            if knob:\n                if isinstance(knob_value, list):\n                    if knob.isAnimated():\n                        knob.clearAnimated()\n                        knob.setAnimated()\n                        for value, frame in knob_value:\n                            knob.setValueAt(value, frame)\n                    else:\n                        knob.setValue(knob_value\[0]\[1])\n                else:\n                    knob.setValue(knob_value)\n\ndef get_frame_range():\n    input_node = gizmo.input(0)\n    if input_node is not None:\n        first_frame = input_node.firstFrame()\n        last_frame = input_node.lastFrame()\n        set_knob_value('InputFrameRange', \{'first_frame': first_frame, 'last_frame': last_frame\})\n        set_knob_value('MatteFrameHold', \{'firstFrame': first_frame + 1\})\n\n        matte_frame = 1 if add_matte_frame() else 0\n        last_frame += matte_frame\n        set_knob_value('AppendMatteFrame', \{'firstFrame': first_frame, 'lastFrame': last_frame\})\n        set_knob_value('EndFrameHold', \{'firstFrame': last_frame - 1\})\n        last_frame += add_end_frame(first_frame, last_frame)\n        set_knob_value('AppendEndFrame', \{'firstFrame': first_frame, 'lastFrame': last_frame\})\n        set_knob_value('OutputFrameRange', \{'first_frame': first_frame, 'last_frame': last_frame\})\n        \n        return \[first_frame, last_frame]\n    return \[1, 100]\n\ndef add_matte_frame():\n    add_frame_switch = get_node('add_frame_switch')\n    if gizmo\['add_frame'].value():\n        add_frame_switch\['which'].setValue(1)\n        return True\n    else:\n        add_frame_switch\['which'].setValue(0)\n        return False\n\ndef add_end_frame(first_frame, last_frame):\n    total_frames = last_frame - first_frame\n    add_end_frame_switch = get_node('add_end_frame_switch')\n    if total_frames % 2 != 0:\n        add_end_frame_switch\['which'].setValue(1)\n        return 1\n    else:\n        add_end_frame_switch\['which'].setValue(0)\n        return 0\n\ndef propogate_frame_range(frame_range):\n    f, l = frame_range\n    new_last_frame = ((l - f) * 2) + f\n    hero_last_frame = (l - f - 1) // 2 + f\n    if testing:\n        print(f'Refreshing frame range, first frame \{f\}, last frame \{l\}')\n\n    nodes = \{\n        'PlateRetime': \{'input.first': f, 'input.last': l, 'output.first': f, 'output.last': new_last_frame\},\n        'OFlowPlateBlend': \{'input.first': f, 'input.last': l, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'KronosPlate': \{'input.first': f, 'input.last': l, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'OFlowPlate': \{'input.first': f, 'input.last': l, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'TwixtorPlate': \{'StartFrame': f, 'LastFrame': l, 'Frame': \[(f, f), (l, new_last_frame)]\},\n        'BCCOpticalFlow1': \{'start_offset_frame': f\},\n        'S_Retime1': \{'start_frame': f\},\n        'RetimeInterpolated': \{'input.first': f + 1, 'input.last': new_last_frame, 'output.first': f, 'output.last': l\},\n        'HeroRetime': \{'input.first': f + 1, 'input.last': l, 'output.first': f, 'output.last': hero_last_frame\},\n        'DoublePlateFrames': \{'input.first': f, 'input.last': new_last_frame, 'timingFrame2': \[(f, f), ((new_last_frame * 2) - 1, new_last_frame)]\},\n        'OFlowBlend': \{'input.first': f, 'input.last': l - 1, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'KronosHero': \{'input.first': f, 'input.last': l - 1, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'OFlowHero': \{'input.first': f, 'input.last': l - 1, 'timingFrame2': \[(f, f), (l, new_last_frame)]\},\n        'TwixtorHero': \{'StartFrame': f, 'LastFrame': l, 'Frame': \[(f, f), (l, new_last_frame)]\},\n        'OutputFrameRange2': \{'first_frame': f, 'last_frame': hero_last_frame\},\n        'RetimeExtracted': \{'input.first': f, 'input.last': new_last_frame, 'output.first': f, 'output.last': l\}\n    \}\n\n    for node_name, knob_values in nodes.items():\n        set_knob_value(node_name, knob_values)\n\ndef output_type(output):\n    if output == 'hero plate':\n        set_knob_value('output_switch', \{'which': 1\})\n        gizmo\['tile_color'].setValue(131583)\n        gizmo\['matte_extraction_group'].setVisible(False)\n\n    else:\n        set_knob_value('output_switch', \{'which': 0\})\n        gizmo\['tile_color'].setValue(131071)\n        gizmo\['matte_extraction_group'].setVisible(True)\n\ndef select_parent_method(parent_method):\n    method_index = \{'interpolate': 0, 'vector extract': 1, 'average': 2\}.get(parent_method, 0)\n    set_knob_value('parent_method_switch', \{'which': method_index\})\n    gizmo\['interpolation_group'].setVisible(parent_method == 'interpolate')\n    gizmo\['extract_group'].setVisible(parent_method in \['vector extract', 'average'])\n\ndef select_matte_interpolation_method(interpolation_method):\n    method_index = \{'Blend': 0, 'Kronos': 1, 'OFlow': 2, 'ABME': 3, 'Twixtor': 4, 'BCC3Optical_Flow': 5, 'S_Retime': 6\}.get(interpolation_method, 0)\n    set_knob_value('interpolated_switch', \{'which': method_index\})\n    gizmo\['giblend'].setVisible(interpolation_method == 'Blend')\n    gizmo\['gikronos'].setVisible(interpolation_method == 'Kronos')\n    gizmo\['gioflow'].setVisible(interpolation_method == 'OFlow')\n    gizmo\['giabme'].setVisible(interpolation_method == 'ABME')\n    gizmo\['gitwixtor'].setVisible(interpolation_method == 'Twixtor')\n    gizmo\['giboris'].setVisible(interpolation_method == 'BCC3Optical_Flow')\n    gizmo\['gisapphire'].setVisible(interpolation_method == 'S_Retime')\n    set_knob_value('ABME_Retime_interpolate', \{'disable': interpolation_method != 'ABME'\})\n    set_knob_value('TwixtorPlate', \{'disable': interpolation_method != 'Twixtor'\})\n    set_knob_value('BCCOpticalFlow1', \{'disable': interpolation_method != 'BCC3Optical_Flow'\})\n    set_knob_value('S_Retime1', \{'disable': interpolation_method != 'S_Retime'\})\n\n    interpolated_switch = get_node('interpolated_switch')\n    time_offset = get_node('TimeOffset2')\n\n    if interpolated_switch and time_offset:\n        # Disconnect TimeOffset2 from interpolated_switch\n        for i in range(interpolated_switch.inputs()):\n            if interpolated_switch.input(i) == time_offset:\n                interpolated_switch.setInput(i, None)\n                break\n\n    # Reconnect TimeOffset2 to input 5 of interpolated_switch if selected\n    if method_index == 5 and interpolated_switch and time_offset:\n        interpolated_switch.setInput(5, time_offset)\n    \n        \n\ndef select_hero_interpolation_method(interpolation_method):\n    method_index = \{'Blend': 0, 'Kronos': 1, 'OFlow': 2, 'ABME': 3, 'Twixtor': 4, 'BCC3Optical_Flow': 5, 'S_Retime': 6\}.get(interpolation_method, 0)\n    set_knob_value('hero_interpolation_swtich', \{'which': method_index\})\n    gizmo\['vgblend'].setVisible(interpolation_method == 'Blend')\n    gizmo\['vgkronos'].setVisible(interpolation_method == 'Kronos')\n    gizmo\['vgoflow'].setVisible(interpolation_method == 'OFlow')\n    gizmo\['vgabme'].setVisible(interpolation_method == 'ABME')\n    gizmo\['vgtwixtor'].setVisible(interpolation_method == 'Twixtor')\n    gizmo\['vgboris'].setVisible(interpolation_method == 'BCC3Optical_Flow')\n    gizmo\['vgsapphire'].setVisible(interpolation_method == 'S_Retime')\n    set_knob_value('ABME_Retime3', \{'disable': interpolation_method != 'ABME'\})\n    set_knob_value('TwixtorHero', \{'disable': interpolation_method != 'Twixtor'\})\n    set_knob_value('BCCOpticalFlow2', \{'disable': interpolation_method != 'BCC3Optical_Flow'\})\n    set_knob_value('S_Retime2', \{'disable': interpolation_method != 'S_Retime'\})\n    \n    interpolated_switch = nuke.toNode('hero_interpolation_swtich')\n    time_offset = get_node('TimeOffset4')\n    \n    if interpolated_switch and time_offset:\n        # Disconnect TimeOffset2 from interpolated_switch\n        for i in range(interpolated_switch.inputs()):\n            if interpolated_switch.input(i) == time_offset:\n                interpolated_switch.setInput(i, None)\n                break\n\n    # Reconnect TimeOffset2 to input 5 of interpolated_switch if selected\n    if method_index == 5 and interpolated_switch and time_offset:\n        interpolated_switch.setInput(5, time_offset)\n\ndef select_hero_vector_generator(vector_generator):\n    method_index = \{'VectorGenerator': 0, 'SmartVectors': 1, 'ABME': 2, 'RAFT': 3, 'NNFlowVector': 4\}.get(vector_generator, 0)\n    set_knob_value('vector_switch', \{'which': method_index\})\n    gizmo\['vectorgenerator'].setVisible(vector_generator == 'VectorGenerator')\n    gizmo\['smartvector'].setVisible(vector_generator == 'SmartVectors')\n    gizmo\['abme'].setVisible(vector_generator == 'ABME')\n    gizmo\['raft'].setVisible(vector_generator == 'RAFT')\n    gizmo\['nnflowvector'].setVisible(vector_generator == 'NNFlowVector')\n    set_knob_value('ABME_SV1', \{'disable': vector_generator != 'ABME'\})\n    set_knob_value('RAFT1', \{'disable': vector_generator != 'RAFT'\})\n    set_knob_value('NNFlowVector1', \{'disable': vector_generator != 'NNFlowVector'\})\n\ndef set_uv_channels(vector_post_processor):\n    method_index = \{'forward': 0, 'backward': 1, 'average_motion': 2, 'OFlow': 3, 'Kronos': 4, 'Twixtor': 5\}.get(vector_post_processor, 0)\n    set_knob_value('SwitchMotionType', \{'which': method_index\})\n    gizmo\['vpost_oflow'].setVisible(vector_post_processor == 'OFlow')\n    gizmo\['vpost_kronos'].setVisible(vector_post_processor == 'Kronos')\n    gizmo\['vpost_twixtor'].setVisible(vector_post_processor == 'Twixtor')\n\ndef set_distortion_method(distortion_method):\n    method_index = 1 if distortion_method == 'IDistort' else 0\n    set_knob_value('SwitchBackward', \{'which': method_index\})\n    set_knob_value('SwitchForward', \{'which': method_index\})\n\ndef label_setter():\n    output_type = gizmo\['output_type'].value()\n    if output_type == 'hero plate':\n        label = 'HERO'\n    else:\n        parent_method = gizmo\['parent_method'].value()\n        if parent_method == 'interpolate':\n            label = gizmo\['matte_interpolation'].value()\n        else:\n            label = f\"\{gizmo\['hero_interpolation'].value()\}\\n\{gizmo\['vector_generator'].value()\}\\n\{gizmo\['distortion_method'].value()\}\\n\{gizmo\['vector_post'].value()\}\"\n    gizmo\['label'].setValue(label)\n    \ndef create_shuffle():\n    # Get the root node\n    root = nuke.root()\n    \n    # Deselect all nodes to ensure the new node is correctly connected to the gizmo\n    for node in nuke.allNodes():\n        node\['selected'].setValue(False)\n    \n    # Create a new Shuffle2 node in the root context\n    with root:\n        shuffle_node = nuke.createNode('Shuffle2')\n    \n    # Set the properties to shuffle the 'matte' layer into the RGB channels\n    shuffle_node\['in1'].setValue('matte')\n    shuffle_node\['in2'].setValue('none')\n\n\n    # Set the mappings\n    mappings = \[\n        (0, 'matte.red', 'rgba.red'),\n        (0, 'matte.green', 'rgba.green'),\n        (0, 'matte.blue', 'rgba.blue'),\n        (-1, 'white', 'rgba.alpha')  # Use 'white' to map matte.alpha to 1\n    ]\n    shuffle_node\['mappings'].setValue(mappings)\n    \n    # Enable the postage stamp for easier identification\n    shuffle_node\['postage_stamp'].setValue(True)\n    \n    # Set the label for easier identification in the node graph\n    shuffle_node\['label'].setValue('Matte to RGB')\n    \n    # Position the node below the gizmo for better visibility\n    shuffle_node.setXYpos(gizmo.xpos(), gizmo.ypos() + 100)\n    \n    # Connect the shuffle node to the gizmo's output\n    shuffle_node.setInput(0, gizmo)\n\ndef twixfix(value):\n    for node in (n for n in gizmo.nodes() if n.Class() == 'Switch' and 'MSwitch' in n\['name'].value()):\n        nuke.toNode(node\['name'].value())\['which'].setValue(value)\n\n                \n\ndef toggle_text_overlays(overlay):\n    gizmo\['font'].setVisible(overlay)\n    gizmo\['font_scale'].setVisible(overlay)\n    text_nodes = \[node for node in nuke.allNodes() if node.Class() == 'Text2']\n    for node in text_nodes:\n        node\['disable'].setValue(not overlay)\n\ndef font_selector():\n    font_family, font_style = gizmo.knob('font').getValue()\n    text_nodes = \[node for node in nuke.allNodes() if node.Class() == 'Text2']\n    for node in text_nodes:\n        try:\n            node\['font'].setValue(font_family, font_style)\n        except:\n            pass\n\n\ndef set_font_scale(scale):\n    text_nodes = \[node for node in nuke.allNodes() if node.Class() == 'Text2']\n    for node in text_nodes:\n        node\['global_font_scale'].setValue(scale)\n\n# Use a variable to store the current node\ngizmo = nuke.thisNode()\nk = nuke.thisKnob()  # the knob that activated knobChanged\nframe_range_changing_knobs = \['inputChange', 'add_frame', 'output_type', 'refresh']\n\n# Turns on knobs when testing\ngizmo\['print_all_knobs'].setVisible(testing)\n\n# Define a mapping of knob names to functions\nknob_function_map = \{\n    'text_overlays': lambda: toggle_text_overlays(k.value()),\n    'font': lambda: font_selector(),\n    'font_scale': lambda: set_font_scale(k.value()),\n    'twixfix': lambda: twixfix(k.value()),\n    'output_type': lambda: (output_type(k.value()), label_setter()),\n    'parent_method': lambda: (select_parent_method(k.value()), label_setter()),\n    'create_shuffle': lambda: (create_shuffle()),\n    'matte_interpolation': lambda: (select_matte_interpolation_method(k.value()), label_setter()),\n    'hero_interpolation': lambda: (select_hero_interpolation_method(k.value()), label_setter()),\n    'vector_generator': lambda: (select_hero_vector_generator(k.value()), label_setter()),\n    'distortion_method': lambda: (set_distortion_method(k.value()), label_setter()),\n    'vector_post': lambda: (set_uv_channels(k.value()), label_setter()),\n    'difference_viewer': lambda: set_knob_value('diff_switch', \{'which': int(k.value())\})\n\}\n\n# Only take action if the particular knob was changed\nif k.name() in frame_range_changing_knobs:\n    frame_range = get_frame_range()\n    propogate_frame_range(frame_range)\nif k.name() in knob_function_map:\n    knob_function_map\[k.name()]()\n"
 tile_color 0x1ffff
 label Kronos
 xpos -20
 ypos -466
 addUserKnob {20 User}
 addUserKnob {26 header l "" t "This gizmo processes clips shot on a volume using the ghost frame technique, where every alternate frame is a green or blue frame background. \n\nIt extracts the HERO frames by simply removing all the MATTE frames. \n\nIt extracts the MATTE frames by either interpolating them from two adjacent MATTE frames, <i>or</i> it generates motion vectors from the HERO frames and distorts the adjacent MATTE frames to match the HERO frame and then blends those MATTE frames together. \n\nCLICK THIS LOGO FOR HELP" +STARTLINE T "<a href='https://www.itaki.com/ghostframeextractor-for-nuke/' style='text-decoration: none;'><div><span style='color:#F5F9F1;'><img src='/Users/michaelmcreynolds/Dropbox/_Library/nuke/NukeShared/Repository/Nodes/Image/GhostFrameExtractor.png' width='50'>   </span><font size='6'><span style='color:#F5F9F1;'>GhostFrame</span><span style='color:#FFA100;'>Extractor</span><font size='3'><span style='color:#CFE6B2;'></span><span style='color:#DFD3E7;'>v1.0.1</span></font></font></div></a>"}
 addUserKnob {26 version -STARTLINE +INVISIBLE T v1.0.1}
 addUserKnob {26 available_plugins l "<b>available plugins" t "<div class=\"tooltip-content\"><p>Upon creation of a new GhostFrameExtractor, the 'onCreate' script scans installed plugins to determine which are available. Only detected plugins will appear in the dropdown menus.</p><p><em>Note: If you install new plugins after creating the node, delete and recreate the node to rescan for available plugins.</em></p></div>\n"}
 addUserKnob {6 forward +INVISIBLE +STARTLINE}
 forward true
 addUserKnob {6 backward -STARTLINE +INVISIBLE}
 backward true
 addUserKnob {6 average_motion l "average motion" -STARTLINE +INVISIBLE}
 average_motion true
 addUserKnob {6 Blend +DISABLED +STARTLINE}
 Blend true
 addUserKnob {6 Kronos -STARTLINE +DISABLED}
 Kronos true
 addUserKnob {6 OFlow -STARTLINE +DISABLED}
 OFlow true
 addUserKnob {6 VectorGenerator -STARTLINE +DISABLED}
 VectorGenerator true
 addUserKnob {6 SmartVectors -STARTLINE +DISABLED}
 SmartVectors true
 addUserKnob {6 RAFT +DISABLED +STARTLINE}
 RAFT true
 addUserKnob {6 ABME -STARTLINE +DISABLED}
 ABME true
 addUserKnob {6 Twixtor -STARTLINE +DISABLED}
 Twixtor true
 addUserKnob {6 NNFlowVector -STARTLINE +DISABLED}
 addUserKnob {6 BCC3Optical_Flow l "BCC Optical Flow" -STARTLINE +DISABLED}
 BCC3Optical_Flow true
 addUserKnob {6 S_Retime l "Sapphire Retime" -STARTLINE +DISABLED}
 S_Retime true
 addUserKnob {6 twixfix l "" -STARTLINE +INVISIBLE}
 addUserKnob {26 ""}
 addUserKnob {22 print_all_knobs l "print all knobs" +HIDDEN T "for i in nuke.thisNode().knobs():\n    print (i)" +STARTLINE}
 addUserKnob {6 add_frame l "<font color=#FFA100>add matte frame to beginning of clip</font>" t "<div class=\"tooltip-content\"><p>Enable this option if your footage begins with a hero frame. This ensures the clip starts with a matte frame by duplicating the first matte frame and placing it at the beginning.</p><p><em>Note: The gizmo will automatically add a matte frame at the end if required.</em></p></div>\n" +STARTLINE}
 addUserKnob {22 refresh l "refresh frame range" t "<div class=\"tooltip-content\"><p>Click this button to recalculate all frame ranges.</p><p><em>Note: The gizmo auto-updates frame ranges if the input changes. However, if upstream changes occur without affecting the gizmo's input, manual refresh is required.</em></p></div>\n\n" -STARTLINE}
 addUserKnob {4 output_type l "<b><font color=#FFA100>view</font>" t "<div class=\"tooltip-content\"><p>Use this selector to toggle between viewing hero and matte frames. Perform your work while viewing matte frames, then switch back to hero frames to finalize.</p><p><em>Note: Use the shuffle button at the bottom to shuffle the matte frames out.</em></p></div>\n" M {"hero plate" "matte plate" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 output_type "matte plate"
 addUserKnob {26 ""}
 addUserKnob {20 matte_extraction_group l ━━━━━━━━━━━━━━━━━━━━━━━━━ n 1}
 addUserKnob {4 parent_method l "<b><font color=#FFA100>matte generation method</font>" t "<div class=\"tooltip-content\"><ul><li><strong>Interpolate:</strong> Generates a frame between two matte frames using your chosen optical flow method. Estimates the hero frame content based solely on matte frame information.</li></br><li><strong>Vector Extract:</strong> Interpolates frames from hero frames to match existing matte frames using optical flow. Then uses motion vectors generated from the hero frames to distort the adjacent matte frames, preserving hero frame details.</li></ul></div>\n" M {interpolate "vector extract"}}
 addUserKnob {20 extract_group l ━━━━━━━━━━━━━━━━━━━━━━━━━ +HIDDEN n 1}
 addUserKnob {4 hero_interpolation l "<font color=#FFA100>hero interpolation method</font>" t "<div class=\"tooltip-content\"><p>Select the interpolation method for generating new intermediate HERO frames. Motion vectors from this clip will be used to distort matte frames.</p><ul><li><strong>Blend:</strong> No optical flow blending.</li><li><strong>Kronos:</strong> Kronos optical flow. <i>Best fast option. Available in NukeX</i></li><li><strong>OFlow:</strong> OFlow optical flow. <i>Fast, free, and available in all Nuke versions</i></li><li><strong>ABME:</strong> Asymmetric Bilateral Motion Estimation. <i>Good but very slow</i></li><li><strong>Twixtor:</strong> RE:Vision's DNN motion estimation (v8). <i>Best option</i></li><li><strong>BCC3 Optical Flow:</strong> Boris's Continuum optical flow. <i>Avoid</i></li><li><strong>S_Retime:</strong> Boris's Sapphire Retime. <i>A little better than Kronos</i></li></ul><p><em>Note: Missing options indicate unavailable plugins. If you install new plugins you'll need to recreate this node to have it serch for available plugins again.</em></p><p><em>Note: You can source both ABME and RAFT from the Cattery. Nvidia GPUs make these somewhat viable options.</em></div>" M {Blend Kronos OFlow ABME Twixtor BCC3Optical_Flow S_Retime}}
 hero_interpolation Kronos
 addUserKnob {20 vgboris l "Boris Continuum Optical Flow controls" +HIDDEN n 1}
 vgboris 0
 addUserKnob {41 optical_flow_resolution_1 l "Optical Flow Resolution" T BCCOpticalFlow2.optical_flow_resolution}
 addUserKnob {41 blending_1 l Blending T BCCOpticalFlow2.blending}
 addUserKnob {20 "Motion Estimation_1" l "Motion Estimation" n 1}
 "Motion Estimation_1" 0
 addUserKnob {41 use_reverse_estimation_motion_estimation_1 l "Use Reverse Estimation" T BCCOpticalFlow2.use_reverse_estimation_motion_estimation}
 addUserKnob {41 min_edge_contrast_motion_estimation_1 l "Min Edge Contrast" T BCCOpticalFlow2.min_edge_contrast_motion_estimation}
 addUserKnob {41 enable_low_velocity_correction_motion_estimation_1 l "Enable Low Velocity Correction" T BCCOpticalFlow2.enable_low_velocity_correction_motion_estimation}
 addUserKnob {41 low_velocity_correction_motion_estimation_1 l "Low Velocity Correction" T BCCOpticalFlow2.low_velocity_correction_motion_estimation}
 addUserKnob {41 velocity_limit_motion_estimation_1 l "Velocity Limit" T BCCOpticalFlow2.velocity_limit_motion_estimation}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_19 l endGroup n -1}
 addUserKnob {20 vgblend l "blend controls" +HIDDEN n 1}
 vgblend 0
 addUserKnob {20 Shutter_5 l Shutter n 1}
 Shutter_5 0
 addUserKnob {41 shutterSamples_5 l "Shutter Samples" T OFlowBlend.shutterSamples}
 addUserKnob {41 shutterTime_5 l "Shutter Time" T OFlowBlend.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime_5 l "Automatic Shutter Time" -STARTLINE T OFlowBlend.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_7 l endGroup n -1}
 addUserKnob {20 vgkronos l "Kronos controls" n 1}
 vgkronos 0
 addUserKnob {41 vectorDetailReg_1 l "Vector Detail" T KronosHero.vectorDetailReg}
 addUserKnob {41 strengthReg_1 l Strength T KronosHero.strengthReg}
 addUserKnob {41 resampleType_2 l Filter T KronosHero.resampleType}
 addUserKnob {20 Shutter_1 l Shutter n 1}
 Shutter_1 0
 addUserKnob {41 shutterSamples_1 l "Shutter Samples" T KronosHero.shutterSamples}
 addUserKnob {41 shutterTime_1 l "Shutter Time" T KronosHero.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime_1 l "Automatic Shutter Time" -STARTLINE T KronosHero.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 Advanced n 1}
 Advanced 0
 addUserKnob {41 flickerCompensation l "Flicker Compensation" -STARTLINE T KronosHero.flickerCompensation}
 addUserKnob {41 showLegacyMode l "Show Legacy Mode" -STARTLINE +INVISIBLE T KronosHero.showLegacyMode}
 addUserKnob {41 legacyModeNuke9 l "Legacy Mode" +HIDDEN T KronosHero.legacyModeNuke9}
 addUserKnob {20 Tolerances_1 l Tolerances n 1}
 Tolerances_1 0
 addUserKnob {41 weightRed_1 l "Weight Red" T KronosHero.weightRed}
 addUserKnob {41 weightGreen_1 l "Weight Green" T KronosHero.weightGreen}
 addUserKnob {41 weightBlue_1 l "Weight Blue" T KronosHero.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {41 vectorSpacing_2 l "Vector Spacing" T KronosHero.vectorSpacing}
 addUserKnob {41 showVectors_2 l "Overlay Vectors" -STARTLINE T KronosHero.showVectors}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_8 l endGroup n -1}
 addUserKnob {20 vgoflow l "OFlow contols" +HIDDEN n 1}
 vgoflow 0
 addUserKnob {41 vectorDetailLocal_1 l "Vector Detail" T OFlowHero.vectorDetailLocal}
 addUserKnob {41 smoothnessLocal_1 l Smoothness T OFlowHero.smoothnessLocal}
 addUserKnob {41 resampleType_3 l Filter T OFlowHero.resampleType}
 addUserKnob {20 Shutter_2 l Shutter n 1}
 Shutter_2 0
 addUserKnob {41 shutterSamples_2 l "Shutter Samples" T OFlowHero.shutterSamples}
 addUserKnob {41 shutterTime_2 l "Shutter Time" T OFlowHero.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime_2 l "Automatic Shutter Time" -STARTLINE T OFlowHero.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 Advanced_5 l Advanced n 1}
 Advanced_5 0
 addUserKnob {41 flickerCompensation_5 l "Flicker Compensation" -STARTLINE T OFlowHero.flickerCompensation}
 addUserKnob {20 Tolerances_2 l Tolerances n 1}
 Tolerances_2 0
 addUserKnob {41 weightRed_2 l "Weight Red" T OFlowHero.weightRed}
 addUserKnob {41 weightGreen_2 l "Weight Green" T OFlowHero.weightGreen}
 addUserKnob {41 weightBlue_2 l "Weight Blue" T OFlowHero.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {41 vectorSpacing_1 l "Vector Spacing" T OFlowHero.vectorSpacing}
 addUserKnob {41 showVectors_1 l "Overlay Vectors" -STARTLINE T OFlowHero.showVectors}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_9 l endGroup n -1}
 addUserKnob {20 vgabme l "ABME controls" +HIDDEN n 1}
 vgabme 0
 addUserKnob {41 in_colorspace_1 l "Input Colorspace" T ABME_Retime3.in_colorspace}
 addUserKnob {41 halfPrecision_1 l "Optimize for Speed and Memory" T ABME_Retime3.halfPrecision}
 addUserKnob {20 endGroup_10 l endGroup n -1}
 addUserKnob {20 vgtwixtor l "Twixor controls" +HIDDEN n 1}
 vgtwixtor 0
 addUserKnob {41 TrackingQualityV2_1 l "Tracking Quality" T TwixtorHero_old.TrackingQualityV2}
 addUserKnob {41 GlobalMotion_1 l "Global Compensation" T TwixtorHero_old.GlobalMotion}
 addUserKnob {41 MotionSensitivity_1 l "Motion Sensitivity" T TwixtorHero_old.MotionSensitivity}
 addUserKnob {41 ImagePrep_1 l "Image Prep" T TwixtorHero_old.ImagePrep}
 addUserKnob {41 FrameInterp_1 l "Frame Interp" T TwixtorHero_old.FrameInterp}
 addUserKnob {41 Warping_1 l Warping T TwixtorHero_old.Warping}
 addUserKnob {41 SmartBlend_1 l "Smart Blend" T TwixtorHero_old.SmartBlend}
 addUserKnob {41 MotionBlurCompensation_1 l "Motion Blur Compensation" T TwixtorHero_old.MotionBlurCompensation}
 addUserKnob {20 endGroup_11 l endGroup n -1}
 addUserKnob {20 vgsapphire l "Boris Sapphire Retime Controls" +HIDDEN n 1}
 vgsapphire 0
 addUserKnob {41 motion_blur_1 l "Motion Blur" T S_Retime2.motion_blur}
 addUserKnob {20 "Flow Tuning_1" l "Flow Tuning" n 1}
 "Flow Tuning_1" 0
 addUserKnob {41 flow_field_smoothness_1 l "Flow Field Smoothness" T S_Retime2.flow_field_smoothness}
 addUserKnob {41 emphasize_edges_1 l "Emphasize Edges" T S_Retime2.emphasize_edges}
 addUserKnob {41 flow_view_scale_1 l "Flow View Scale" T S_Retime2.flow_view_scale}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_21 l endGroup n -1}
 addUserKnob {4 vector_generator l "<font color=#FFA100>vector generator</font>" t "<div class=\"tooltip-content\"><p>Select a method for extracting vectors from the HERO plate to distort MATTE plates. If both backward and forward vectors are provided, they will be used on adjacent frames and then joined in during the vector post process step.</p><ul><li><strong>VectorGenerator:</strong> Nuke's standard vector generator. <i>Very Fast</i></li><li><strong>SmartVectors:</strong> Provides the same output as VectorGenerator but creates additional vector fields for time-based distortion. <i>Not recommended</i></li><li><strong>ABME:</strong> Asymmetric Bilateral Motion Estimation. <i>Good but slow</i></li><li><strong>RAFT:</strong> Recurrent All-pairs Field Transforms. <i>Moderately slow and in most cases is worse than VectorGenerator</li><li><strong>NNFlowVector:</strong> Pixelmania's motion vector generator. <i>Doesn't seem to work correctly</i></li></ul></div><p><em>Note: You can source both ABME and RAFT from the Cattery. Nvidia GPUs make these somewhat viable options.</em></div>\n" M {VectorGenerator SmartVectors ABME RAFT}}
 addUserKnob {20 vectorgenerator l "vector generator controls" n 1}
 vectorgenerator 0
 addUserKnob {41 motionEstimation l Motion T VectorGenerator1.motionEstimation}
 addUserKnob {41 vectorDetailReg_2 l "Vector Detail" T VectorGenerator1.vectorDetailReg}
 addUserKnob {41 strengthReg_2 l Strength T VectorGenerator1.strengthReg}
 addUserKnob {20 Advanced_1 l Advanced n 1}
 Advanced_1 0
 addUserKnob {41 flickerCompensation_1 l "Flicker Compensation" -STARTLINE T VectorGenerator1.flickerCompensation}
 addUserKnob {20 Tolerances_3 l Tolerances n 1}
 Tolerances_3 0
 addUserKnob {41 weightRed_3 l "Weight Red" T VectorGenerator1.weightRed}
 addUserKnob {41 weightGreen_3 l "Weight Green" T VectorGenerator1.weightGreen}
 addUserKnob {41 weightBlue_3 l "Weight Blue" T VectorGenerator1.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_12 l endGroup n -1}
 addUserKnob {20 smartvector l "smart vector controls" +HIDDEN n 1}
 smartvector 0
 addUserKnob {41 vectorDetailReg_3 l "Vector Detail" T SmartVector2.vectorDetailReg}
 addUserKnob {41 strengthReg_3 l Strength T SmartVector2.strengthReg}
 addUserKnob {20 Advanced_2 l Advanced n 1}
 Advanced_2 0
 addUserKnob {41 flickerCompensation_2 l "Flicker Compensation" -STARTLINE T SmartVector2.flickerCompensation}
 addUserKnob {20 Tolerances_4 l Tolerances n 1}
 Tolerances_4 0
 addUserKnob {41 weightRed_4 l "Weight Red" T SmartVector2.weightRed}
 addUserKnob {41 weightGreen_4 l "Weight Green" T SmartVector2.weightGreen}
 addUserKnob {41 weightBlue_4 l "Weight Blue" T SmartVector2.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_13 l endGroup n -1}
 addUserKnob {20 abme l "ABME contols" +HIDDEN n 1}
 abme 0
 addUserKnob {41 in_colorspace_2 l "Input Colorspace" T ABME_SV1.in_colorspace}
 addUserKnob {41 halfPrecision_2 l "Optimize for Speed and Memory" T ABME_SV1.halfPrecision}
 addUserKnob {20 endGroup_14 l endGroup n -1}
 addUserKnob {20 raft l "RAFT controls" +HIDDEN n 1}
 raft 0
 addUserKnob {41 in_colorspace_3 l "Input Colorspace" T RAFT1.in_colorspace}
 addUserKnob {41 halfPrecision_3 l "Optimize for Speed and Memory" T RAFT1.halfPrecision}
 addUserKnob {20 endGroup_15 l endGroup n -1}
 addUserKnob {20 nnflowvector l "NNFlowVector controls" +HIDDEN n 1}
 nnflowvector 0
 addUserKnob {41 exposure l "pre exposure" T NNFlowVector1.exposure}
 addUserKnob {41 gamma l "pre gamma" T NNFlowVector1.gamma}
 addUserKnob {41 process_scale l "process scale" T NNFlowVector1.process_scale}
 addUserKnob {41 variant T NNFlowVector1.variant}
 addUserKnob {41 iterations T NNFlowVector1.iterations}
 addUserKnob {41 max_size l "max size" T NNFlowVector1.max_size}
 addUserKnob {41 overlap T NNFlowVector1.overlap}
 addUserKnob {41 padding T NNFlowVector1.padding}
 addUserKnob {20 endGroup_17 l endGroup n -1}
 addUserKnob {4 distortion_method l "<font color=#FFA100>distortion method</font>" t "<div class=\"tooltip-content\"><p>Choose between IDistort and STMap for distorting matte frames using vectors.</p><ul><li><strong>IDistort:</strong> Recommended for better results.</li><li><strong>STMap:</strong> Included for completeness, not recommended.</li></ul></div>\n" M {IDistort STMap "" "" "" ""}}
 addUserKnob {4 vector_post l "<font color=#FFA100>vector post process</font>" t "<div class=\"tooltip-content\"><p>Select a process to combine the two matte frames generated with vectors. Ideally, these frames should be identical, but toggling forward and backward distorted frames will show the difference.</p><ul><li><strong>forward:</strong> Use motion vectors from the next frame to the current frame</li><li><strong>backward:</strong> Use motion vectors from the previous frame to the current frame</li><li><strong>average_motion:</strong> Average forward and backward motion vectors</li><li><strong>OFlow:</strong> Use OFlow to interpolate a new frame</li><li><strong>Kronos:</strong> Use Kronos to interpolate a new frame</li><li><strong>Twixtor:</strong> Use Twixtor to interpolate a new frame</li></ul></div>\n" M {forward backward average_motion OFlow Kronos Twixtor}}
 vector_post Kronos
 addUserKnob {20 vpost_kronos l "Kronos controls" n 1}
 vpost_kronos 0
 addUserKnob {41 vectorDetailReg_4 l "Vector Detail" T Kronos1.vectorDetailReg}
 addUserKnob {41 strengthReg_4 l Strength T Kronos1.strengthReg}
 addUserKnob {41 resampleType_5 l Filter T Kronos1.resampleType}
 addUserKnob {20 endGroup_23 l endGroup n -1}
 addUserKnob {20 vpost_twixtor l "Twixtor controls" +HIDDEN n 1}
 vpost_twixtor 0
 addUserKnob {41 TrackingQualityV2_2 l "Tracking Quality" T Twixtor1_old.TrackingQualityV2}
 addUserKnob {20 endGroup_24 l endGroup n -1}
 addUserKnob {20 vpost_oflow l "OFlow controls" +HIDDEN n 1}
 vpost_oflow 0
 addUserKnob {41 vectorDetailLocal_2 l "Vector Detail" T OFlow1.vectorDetailLocal}
 addUserKnob {41 smoothnessLocal_2 l Smoothness T OFlow1.smoothnessLocal}
 addUserKnob {41 resampleType_4 l Filter T OFlow1.resampleType}
 addUserKnob {20 endGroup_22 l endGroup n -1}
 addUserKnob {20 endGroup_6 l endGroup n -1}
 addUserKnob {20 interpolation_group l ━━━━━━━━━━━━━━━━━━━━━━━━━ n 1}
 addUserKnob {4 matte_interpolation l "<font color=#FFA100>matte interpolation method</font>" t "<div class=\"tooltip-content\"><p>Select the interpolation method for generating new intermediate matte frames between each pair of MATTE frames.</p><ul><li><strong>Blend:</strong> No optical flow blending.</li><li><strong>Kronos:</strong> Kronos optical flow. <i>Best fast option. Available in NukeX</i></li><li><strong>OFlow:</strong> OFlow optical flow. <i>Fast, free, and available in all Nuke versions</i></li><li><strong>ABME:</strong> Asymmetric Bilateral Motion Estimation. <i>Good but very slow</i></li><li><strong>Twixtor:</strong> RE:Vision's DNN motion estimation (v8). <i>Best option</i></li><li><strong>BCC3 Optical Flow:</strong> Boris's Continuum optical flow. <i>Avoid</i></li><li><strong>S_Retime:</strong> Boris's Sapphire Retime. <i>A little better than Kronos</i></li></ul><p><em>Note: Missing options indicate unavailable plugins. If you install new plugins you'll need to recreate this node to have it serch for available plugins again.</em></p><p><em>Note: You can source both ABME and RAFT from the Cattery. Nvidia GPUs make these somewhat viable options.</em></p></div>" M {Blend Kronos OFlow ABME Twixtor BCC3Optical_Flow S_Retime}}
 matte_interpolation Kronos
 addUserKnob {20 giblend l "blend controls" +HIDDEN n 1}
 giblend 0
 addUserKnob {20 Shutter_4 l Shutter n 1}
 Shutter_4 0
 addUserKnob {41 shutterSamples_4 l "Shutter Samples" T OFlowPlateBlend.shutterSamples}
 addUserKnob {41 shutterTime_4 l "Shutter Time" T OFlowPlateBlend.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime_4 l "Automatic Shutter Time" -STARTLINE T OFlowPlateBlend.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 gikronos l "Kronos Controls" n 1}
 gikronos 0
 addUserKnob {41 vectorDetailReg l "Vector Detail" T KronosPlate.vectorDetailReg}
 addUserKnob {41 strengthReg l Strength T KronosPlate.strengthReg}
 addUserKnob {41 resampleType l Filter T KronosPlate.resampleType}
 addUserKnob {20 Shutter n 1}
 addUserKnob {41 shutterSamples l "Shutter Samples" T KronosPlate.shutterSamples}
 addUserKnob {41 shutterTime l "Shutter Time" T KronosPlate.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime l "Automatic Shutter Time" -STARTLINE T KronosPlate.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 Advanced_3 l Advanced n 1}
 addUserKnob {41 flickerCompensation_3 l "Flicker Compensation" -STARTLINE T KronosPlate.flickerCompensation}
 addUserKnob {41 showLegacyMode_1 l "Show Legacy Mode" -STARTLINE +INVISIBLE T KronosPlate.showLegacyMode}
 addUserKnob {41 legacyModeNuke9_1 l "Legacy Mode" +HIDDEN T KronosPlate.legacyModeNuke9}
 addUserKnob {20 Tolerances_5 l Tolerances n 1}
 Tolerances_5 0
 addUserKnob {41 weightRed_5 l "Weight Red" T KronosPlate.weightRed}
 addUserKnob {41 weightGreen_5 l "Weight Green" T KronosPlate.weightGreen}
 addUserKnob {41 weightBlue_5 l "Weight Blue" T KronosPlate.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {41 vectorSpacing l "Vector Spacing" T KronosPlate.vectorSpacing}
 addUserKnob {41 showVectors l "Overlay Vectors" -STARTLINE T KronosPlate.showVectors}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 gioflow l "OFlow controls" +HIDDEN n 1}
 gioflow 0
 addUserKnob {41 vectorDetailLocal l "Vector Detail" T OFlowPlate.vectorDetailLocal}
 addUserKnob {41 smoothnessLocal l Smoothness T OFlowPlate.smoothnessLocal}
 addUserKnob {41 resampleType_1 l Filter T OFlowPlate.resampleType}
 addUserKnob {20 Shutter_3 l Shutter n 1}
 Shutter_3 0
 addUserKnob {41 shutterSamples_3 l "Shutter Samples" T OFlowPlate.shutterSamples}
 addUserKnob {41 shutterTime_3 l "Shutter Time" T OFlowPlate.shutterTime}
 addUserKnob {26 "" l " " T ""}
 addUserKnob {41 autoShutterTime_3 l "Automatic Shutter Time" -STARTLINE T OFlowPlate.autoShutterTime}
 addUserKnob {20 "" n -1}
 addUserKnob {20 Advanced_4 l Advanced n 1}
 Advanced_4 0
 addUserKnob {41 flickerCompensation_4 l "Flicker Compensation" -STARTLINE T OFlowPlate.flickerCompensation}
 addUserKnob {20 Tolerances n 1}
 Tolerances 0
 addUserKnob {41 weightRed l "Weight Red" T OFlowPlate.weightRed}
 addUserKnob {41 weightGreen l "Weight Green" T OFlowPlate.weightGreen}
 addUserKnob {41 weightBlue l "Weight Blue" T OFlowPlate.weightBlue}
 addUserKnob {20 "" n -1}
 addUserKnob {41 vectorSpacing_4 l "Vector Spacing" T OFlowPlate.vectorSpacing}
 addUserKnob {41 showVectors_4 l "Overlay Vectors" -STARTLINE T OFlowPlate.showVectors}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {20 giabme l "ABME controls" +HIDDEN n 1}
 giabme 0
 addUserKnob {41 in_colorspace l "Input Colorspace" T ABME_Retime_interpolate.in_colorspace}
 addUserKnob {41 halfPrecision l "Optimize for Speed and Memory" T ABME_Retime_interpolate.halfPrecision}
 addUserKnob {20 endGroup_3 l endGroup n -1}
 addUserKnob {20 gitwixtor l "Twixtor controls" t "You must have twixtor installed for this to work" +HIDDEN n 1}
 gitwixtor 0
 addUserKnob {41 TrackingQualityV2 l "Tracking Quality" T TwixtorPlateOld.TrackingQualityV2}
 addUserKnob {41 GlobalMotion l "Global Compensation" T TwixtorPlateOld.GlobalMotion}
 addUserKnob {41 MotionSensitivity l "Motion Sensitivity" T TwixtorPlateOld.MotionSensitivity}
 addUserKnob {41 ImagePrep l "Image Prep" T TwixtorPlateOld.ImagePrep}
 addUserKnob {41 FrameInterp l "Frame Interp" T TwixtorPlateOld.FrameInterp}
 addUserKnob {41 Warping T TwixtorPlateOld.Warping}
 addUserKnob {41 SmartBlend l "Smart Blend" T TwixtorPlateOld.SmartBlend}
 addUserKnob {41 MotionBlurCompensation l "Motion Blur Compensation" T TwixtorPlateOld.MotionBlurCompensation}
 addUserKnob {20 endGroup_4 l endGroup n -1}
 addUserKnob {20 giboris l "Boris Continuum Optical Flow controls" +HIDDEN n 1}
 giboris 0
 addUserKnob {41 input_fields l "Input Fields" T BCCOpticalFlow1.input_fields}
 addUserKnob {41 optical_flow_resolution l "Optical Flow Resolution" T BCCOpticalFlow1.optical_flow_resolution}
 addUserKnob {41 blending l Blending T BCCOpticalFlow1.blending}
 addUserKnob {41 optical_flow_mix l "Optical Flow Mix" T BCCOpticalFlow1.optical_flow_mix}
 addUserKnob {20 "Motion Estimation" n 1}
 "Motion Estimation" 0
 addUserKnob {41 use_reverse_estimation_motion_estimation l "Use Reverse Estimation" T BCCOpticalFlow1.use_reverse_estimation_motion_estimation}
 addUserKnob {41 min_edge_contrast_motion_estimation l "Min Edge Contrast" T BCCOpticalFlow1.min_edge_contrast_motion_estimation}
 addUserKnob {41 enable_low_velocity_correction_motion_estimation l "Enable Low Velocity Correction" T BCCOpticalFlow1.enable_low_velocity_correction_motion_estimation}
 addUserKnob {41 low_velocity_correction_motion_estimation l "Low Velocity Correction" T BCCOpticalFlow1.low_velocity_correction_motion_estimation}
 addUserKnob {41 velocity_limit_motion_estimation l "Velocity Limit" T BCCOpticalFlow1.velocity_limit_motion_estimation}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_18 l endGroup n -1}
 addUserKnob {20 gisapphire l "Boris Sapphire Retime controls" +HIDDEN n 1}
 gisapphire 0
 addUserKnob {41 motion_blur l "Motion Blur" T S_Retime1.motion_blur}
 addUserKnob {20 "Flow Tuning" n 1}
 "Flow Tuning" 0
 addUserKnob {41 flow_field_smoothness l "Flow Field Smoothness" T S_Retime1.flow_field_smoothness}
 addUserKnob {41 emphasize_edges l "Emphasize Edges" T S_Retime1.emphasize_edges}
 addUserKnob {41 flow_view_scale l "Flow View Scale" T S_Retime1.flow_view_scale}
 addUserKnob {20 "" n -1}
 addUserKnob {20 endGroup_20 l endGroup n -1}
 addUserKnob {20 endGroup_5 l endGroup n -1}
 addUserKnob {20 endGroup_16 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 difference_viewer l "<font color=#FFA100>view difference</font>" t "<div class=\"tooltip-content\"><p>Compare the quality of the matte by differencing the hero plate output and the matte plate output.</p></div>/div><p><em>Note: A perfect matte will appear black. Really we are only concerned about the edges.</em></div>\n" +STARTLINE}
 addUserKnob {6 text_overlays l "<font color=#FFA100>text overlays</font>" t "<div class=\"tooltip-content\"><p>Generate text overlays on the footage.</p></div>\n" +STARTLINE}
 text_overlays true
 addUserKnob {84 font l "" -STARTLINE}
 addUserKnob {7 font_scale l "font scale" R 0 2}
 font_scale 0.5
 addUserKnob {22 create_shuffle l "create shuffle" t "<div class=\"tooltip-content\"><p>Click this button to create a shuffle node that maps the 'matte' channel's RGB to the RGB channels.</p><p><em>Note: Perform your work while viewing 'matte plate', then switch to 'hero plate' and use the shuffled matte plate for keying.</em></p></div>\n" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 website l "" t "Created by Michael McReynolds at itaki post based in Atlanta, Georgia, USA" +STARTLINE T "<font size=3 color =#444444>by        <a href='https://itaki.com' style='color:#666666;'>itaki</a></font>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x5b52ffff
  label "<center><img src=\":qrc/images/ToolbarFilter.png\"> Create Intermediate Hero Frames"
  note_font_size 30
  xpos 6345
  ypos -2555
  bdwidth 1947
  bdheight 856
  z_order -1
 }
 BackdropNode {
  inputs 0
  name BackdropNode8
  tile_color 0x27023601
  label "<center><img src=\"Read.png\"> Interpolate intermediate matte frames using traditional methods\nReceives blue frames and makes new frames in between each frame which should mostly line up with the actual hero frame. "
  note_font_size 30
  xpos -839
  ypos -2338
  bdwidth 4794
  bdheight 2644
  z_order -1
 }
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x677f5201
  label "<center><img src=\"EdgeDetect.png\"> Matte Frames\n"
  note_font_size 30
  xpos -434
  ypos -2075
  bdwidth 220
  bdheight 210
 }
 BackdropNode {
  inputs 0
  name BackdropNode10
  tile_color 0xb4ffaaff
  label "<center><img src=\":qrc/images/ToolbarFilter.png\"> Extracted Hero Plate"
  note_font_size 30
  xpos -1928
  ypos -2621
  bdwidth 619
  bdheight 665
 }
 BackdropNode {
  inputs 0
  name BackdropNode11
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> BLEND"
  note_font_size 30
  xpos -592
  ypos -957
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode12
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> Twixtor"
  note_font_size 30
  xpos 7470
  ypos -2153
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode13
  tile_color 0x9fffff
  label "<center><img src=\"VectorGenerator.png\"> Generate Motion Vectors"
  note_font_size 30
  xpos 6729
  ypos -1687
  bdwidth 871
  bdheight 774
 }
 BackdropNode {
  inputs 0
  name BackdropNode14
  tile_color 0x555555ff
  label "<center><img src=\":qrc/images/ToolbarFilter.png\"> IDistort\n"
  note_font_size 30
  xpos 4632
  ypos -1923
  bdwidth 1310
  bdheight 1881
 }
 BackdropNode {
  inputs 0
  name BackdropNode15
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> Blend"
  note_font_size 30
  xpos 6503
  ypos -2153
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode16
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> Boris Continuum\n"
  note_font_size 30
  xpos 2679
  ypos -957
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode17
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> BCC optical Flow"
  note_font_size 30
  xpos 7703
  ypos -2152
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode18
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> KRONOS"
  note_font_size 30
  xpos 114
  ypos -959
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode19
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> OFlow\n"
  note_font_size 30
  xpos 773
  ypos -968
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0xe1d1dff
  label "<center><img src=\":qrc/images/ToolbarFilter.png\"> Difference Viewer"
  note_font_size 30
  xpos -1890
  ypos 1829
  bdwidth 914
  bdheight 1091
 }
 BackdropNode {
  inputs 0
  name BackdropNode20
  tile_color 0x60353501
  label "<center><img src=\"MarkerRemoval.png\"> ABME error correction"
  note_font_size 30
  xpos -2143
  ypos -5066
  bdwidth 651
  bdheight 514
 }
 BackdropNode {
  inputs 0
  name BackdropNode21
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> Boris Sapphire\n"
  note_font_size 30
  xpos 3254
  ypos -958
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode22
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> Boris Sapphire Retime"
  note_font_size 30
  xpos 7938
  ypos -2151
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode23
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> KRONOS"
  note_font_size 30
  xpos 6711
  ypos -2155
  bdwidth 246
  bdheight 260
 }
 BackdropNode {
  inputs 0
  name BackdropNode24
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> OFlow"
  note_font_size 30
  xpos 7024
  ypos -2154
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode25
  tile_color 0x191901
  label "<center><img src=\"Radial.png\"> Distort Using STMAPS"
  note_font_size 30
  xpos 7988
  ypos -1570
  bdwidth 982
  bdheight 1380
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x191901
  label "<center><img src=\"Radial.png\"> Add frame to beginning of clip"
  note_font_size 30
  xpos -1408
  ypos -4188
  bdwidth 325
  bdheight 353
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x3200ff
  label "<center><img src=\"LevelSet.png\"> Add frame to end of clip"
  note_font_size 30
  xpos -1410
  ypos -3824
  bdwidth 324
  bdheight 375
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> Twixtor\n"
  note_font_size 30
  xpos 2035
  ypos -958
  bdwidth 506
  bdheight 639
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x4b4b4b01
  label "<center><img src=\"VectorGenerator.png\"> ABME"
  note_font_size 30
  xpos 7251
  ypos -2155
  bdwidth 177
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode9
  tile_color 0x6f007f01
  label "<center><img src=\"Oflow.png\"> ABME"
  note_font_size 30
  xpos 1388
  ypos -958
  bdwidth 506
  bdheight 639
 }
 Constant {
  inputs 0
  format {{{root.format}}}
  first {{root.first_frame}}
  last {{root.last_frame}}
  name error_constant
  label "\[value color.a]"
  note_font_size 15
  xpos -1798
  ypos -4656
 }
 Input {
  inputs 0
  name Input1
  label "\[value number]"
  xpos -1652
  ypos -5236
 }
 Remove {
  operation keep
  channels rgba
  name Remove3
  label "\[value operation]:\\\\n\[value channels]\\\\n\[value channels2]\\\\n\[value channels3]\\\\n\[value channels4]"
  xpos -1652
  ypos -5100
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input0]"}}
  name error_switch
  label "\[value which]"
  xpos -1652
  ypos -4627
 }
 FrameRange {
  first_frame 1
  last_frame 80
  time ""
  name InputFrameRange
  label "\[value first_frame]-\[value last_frame]"
  xpos -1652
  ypos -4367
 }
 Dot {
  name Dot4
  note_font_size 24
  note_font_color 0xff
  xpos -1618
  ypos -4290
 }
set N27901200 [stack 0]
push $N27901200
 Dot {
  name Dot3
  note_font_size 24
  note_font_color 0xff
  xpos -1250
  ypos -4290
 }
 FrameHold {
  firstFrame 2
  name MatteFrameHold
  xpos -1284
  ypos -4075
 }
 FrameRange {
  first_frame {{input.first_frame}}
  last_frame {{input.first_frame}}
  time ""
  name FrameRange1
  label "\[value first_frame]-\[value last_frame]"
  xpos -1284
  ypos -4030
 }
 AppendClip {
  inputs 2
  lastFrame 80
  meta_from_first false
  time ""
  name AppendMatteFrame
  xpos -1284
  ypos -3910
 }
push $N27901200
 Switch {
  inputs 2
  name add_frame_switch
  label "\[value which]"
  xpos -1652
  ypos -3915
 }
 Dot {
  name Dot5
  note_font_size 24
  note_font_color 0xff
  xpos -1618
  ypos -3739
 }
set N27905200 [stack 0]
 Dot {
  name Dot6
  note_font_size 24
  note_font_color 0xff
  xpos -1250
  ypos -3739
 }
 FrameHold {
  firstFrame 79
  name EndFrameHold
  xpos -1284
  ypos -3669
 }
push $N27905200
 AppendClip {
  inputs 2
  lastFrame 81
  meta_from_first false
  time ""
  name AppendEndFrame
  xpos -1284
  ypos -3527
 }
push $N27905200
 Switch {
  inputs 2
  which 1
  name add_end_frame_switch
  label "\[value which]"
  xpos -1652
  ypos -3533
 }
 FrameRange {
  first_frame 1
  last_frame 81
  time ""
  name OutputFrameRange
  label "\[value first_frame]-\[value last_frame]"
  xpos -1652
  ypos -3470
 }
 Dot {
  name Dot30
  note_font_size 24
  note_font_color 0xff
  xpos -1618
  ypos -3037
 }
 Dot {
  name Dot8
  note_font_size 24
  note_font_color 0xff
  xpos -1618
  ypos -2708
 }
set N27908c00 [stack 0]
 Dot {
  name Dot20
  note_font_size 24
  note_font_color 0xff
  xpos -340
  ypos -2708
 }
 Retime {
  input.first_lock true
  input.last_lock true
  output.first_lock true
  output.last 199
  speed 2
  before continue
  after continue
  filter none
  time ""
  name PlateRetime
  label "\[value input.first] -> \[value output.first]\\\\noffset: \[return \[expr \[value output.first]-\[value input.first]]]\\\\nspeed: \[value speed]"
  xpos -374
  ypos -1950
 }
 Dot {
  name Dot7
  note_font_size 24
  note_font_color 0xff
  xpos -340
  ypos -1788
 }
set N22a61000 [stack 0]
 Dot {
  name Dot54
  note_font_size 24
  note_font_color 0xff
  xpos 373
  ypos -1788
 }
set N22a61600 [stack 0]
 Dot {
  name Dot55
  note_font_size 24
  note_font_color 0xff
  xpos 1037
  ypos -1788
 }
set N22a61c00 [stack 0]
 Dot {
  name Dot2
  note_font_size 24
  note_font_color 0xff
  xpos 1652
  ypos -1788
 }
set N22a62200 [stack 0]
 Dot {
  name Dot9
  note_font_size 24
  note_font_color 0xff
  xpos 2298
  ypos -1788
 }
set N22a62800 [stack 0]
 Dot {
  name Dot36
  note_font_size 24
  note_font_color 0xff
  xpos 2939
  ypos -1788
 }
set N22a62e00 [stack 0]
 OFXcom.borisfx.bcc3optical_flow_v9 {
  ParamID_900 AAAAAQADvMj+xwAAAAAAAAABAAAAAQAAAAD/////AAAAEQAAAAAAAAAFAAAAEQAAAAAAAAAFAAAAAP///////////////wYxNS4wLjQGMTUuMC40AAAAAAAAAAADAAAAAwAAAAD/////AAAAAAAAAAC8yP7HvMj+x7zI/se8yP7HvMj+x7zI/se8yP7HvMj+x7zI/se6XroRAAAAAQTsgxLeyvutAAAAALi4uLgAAAAEAAAAALi4uLi8yP7H
  bcc_force_rerender_param 0
  preset halfSpeed.bsp
  input_layer Source
  velocity 50
  input_fields Progressive
  input_frame_rate {{root.fps x14 29.97000122 x27 29.97000122}}
  offset_keyframe false
  start_offset_frame 1
  optical_flow_resolution Best
  blending "Bi-Directional Mix"
  optical_flow_mix 100
  "Motion Estimation" 0
  use_reverse_estimation_motion_estimation false
  min_edge_contrast_motion_estimation 10
  enable_low_velocity_correction_motion_estimation false
  low_velocity_correction_motion_estimation 0
  velocity_limit_motion_estimation 100
  composite_motion_vectors Off
  "Motion Vectors" 0
  display_density_motion_vectors 10
  drawing_scale_motion_vectors 100
  name BCCOpticalFlow1
  xpos 2896
  ypos -758
  disable true
 }
 TimeOffset {
  time_offset -1
  time ""
  name TimeOffset2
  label "\[value time_offset]"
  xpos 2896
  ypos -734
 }
push $N27908c00
 Retime {
  input.first 2
  input.first_lock true
  input.last_lock true
  output.first_lock true
  output.last 50
  output.last_lock true
  speed 2
  before continue
  after continue
  filter none
  time ""
  name HeroRetime
  label "\[value input.first] -> \[value output.first]\\\\noffset: \[return \[expr \[value output.first]-\[value input.first]]]\\\\nspeed: \[value speed]"
  xpos -1652
  ypos -2427
 }
set N22aaca00 [stack 0]
 Dot {
  name Dot18
  note_font_size 24
  note_font_color 0xff
  xpos 6588
  ypos -2419
 }
 Dot {
  name Dot16
  note_font_size 24
  note_font_color 0xff
  xpos 6588
  ypos -2060
 }
set N22a9a200 [stack 0]
 Dot {
  name Dot31
  note_font_size 24
  note_font_color 0xff
  xpos 6840
  ypos -2060
 }
set N22a99600 [stack 0]
 Dot {
  name Dot12
  note_font_size 24
  note_font_color 0xff
  xpos 7109
  ypos -2061
 }
set N22a98a00 [stack 0]
 Dot {
  name Dot10
  note_font_size 24
  note_font_color 0xff
  xpos 7338
  ypos -2061
 }
set N22a67e00 [stack 0]
 Dot {
  name Dot11
  note_font_size 24
  note_font_color 0xff
  xpos 7557
  ypos -2061
 }
set N22ba7200 [stack 0]
 Dot {
  name Dot38
  note_font_size 24
  note_font_color 0xff
  xpos 7790
  ypos -2060
 }
set N22a64c00 [stack 0]
 OFXcom.borisfx.bcc3optical_flow_v9 {
  ParamID_900 AAAAAQADvMj+xwAAAAAAAAABAAAAAQAAAAD/////AAAAEQAAAAAAAAAFAAAAEQAAAAAAAAAFAAAAAP///////////////wYxNS4wLjQGMTUuMC40AAAAAAAAAAADAAAAAwAAAAD/////AAAAAAAAAAC8yP7HvMj+x7zI/se8yP7HvMj+x7zI/se8yP7HvMj+x7zI/se6XroRAAAAAQBNir/eyvutAAAAALi4uLgAAAAEAAAAALi4uLi8yP7H
  bcc_force_rerender_param 0
  preset halfSpeed.bsp
  input_layer Source
  velocity 50
  input_fields Progressive
  input_frame_rate {{root.fps x1 29.97000122}}
  offset_keyframe false
  start_offset_frame 0
  optical_flow_resolution Best
  blending "Bi-Directional Mix"
  optical_flow_mix 100
  "Motion Estimation" 0
  use_reverse_estimation_motion_estimation false
  min_edge_contrast_motion_estimation 10
  enable_low_velocity_correction_motion_estimation false
  low_velocity_correction_motion_estimation 0
  velocity_limit_motion_estimation 100
  composite_motion_vectors Off
  "Motion Vectors" 0
  display_density_motion_vectors 10
  drawing_scale_motion_vectors 100
  name BCCOpticalFlow2
  xpos 7756
  ypos -2005
  disable true
 }
 TimeOffset {
  time_offset -1
  time ""
  name TimeOffset4
  label "\[value time_offset]"
  xpos 7756
  ypos -1960
 }
push $N22a62e00
 Dot {
  name Dot37
  note_font_size 24
  note_font_color 0xff
  xpos 3518
  ypos -1788
 }
set N22a63400 [stack 0]
 OFXcom.genarts.sapphire.time.s_retime_v1 {
  Mode "Retime Speed"
  speed 0.5
  percent_longer 100
  setKnobFlags {percent_longer +HIDDEN}
  percent 200
  setKnobFlags {percent +HIDDEN}
  input_fps 30
  setKnobFlags {input_fps +HIDDEN}
  output_fps 60
  setKnobFlags {output_fps +HIDDEN}
  output_length 30
  setKnobFlags {output_length +HIDDEN}
  input_frame 1
  setKnobFlags {input_frame +HIDDEN}
  result Result
  start_frame 1
  motion_blur 0
  "Flow Tuning" 0
  flow_field_smoothness 0.8
  emphasize_edges 0
  flow_view_scale 0.9
  "Crop Input" 0
  crop_left 0
  crop_right 0
  crop_top 0
  crop_bottom 0
  Enable_GPU true
  version 17.5
  version2 3108654
  name S_Retime1
  xpos 3484
  ypos -778
  disable true
 }
 TimeOffset {
  time_offset 1
  time ""
  name TimeOffset3
  label "\[value time_offset]"
  xpos 3484
  ypos -754
 }
push 0
push $N22a61600
 Kronos {
  retimedChannels all
  timing2 Frame
  timingFrame2 {{curve x1 1 x199 100}}
  motionEstimation Regularized
  resampleType Lanczos6
  Shutter 1
  Advanced 1
  name KronosPlate
  xpos 339
  ypos -755
 }
set Ne0586800 [stack 0]
push $N22a62800
 OFXcom.revisionfx.twixtor_v5 {
  Display "Twixtored Output"
  UseGPU ON
  TimeRetimeMethod "Frame Number"
  Speed 100
  Frame {{curve x1 1 x199 100}}
  TrackingQuality Twixtor7_MAX
  setKnobFlags {TrackingQuality +HIDDEN}
  TrackingQualityV2 "DNN - model 1"
  TrackingQualitySelector Sloppy
  GlobalMotion false
  MotionSensitivity 70
  ImagePrep "Gamma Enhance (Trk src is linear?)"
  TrackRGBA false
  Video360 false
  FrameInterp Nearest
  Warping Inverse
  SmartBlend false
  MotionBlurCompensation 0
  MarkSegments "Cut A"
  MarkSegmentsSelector "Select Cut"
  StartFrame 1
  LastFrame 100
  CustomData_DoNotEdit aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  name TwixtorPlate
  note_font Gotham
  xpos 2259
  ypos -815
  disable true
 }
set Ne05a7a00 [stack 0]
 Group {
  inputs 2
  name TwixFix1
  note_font Verdana
  xpos 2259
  ypos -752
 }
  Input {
   inputs 0
   name InputKronos
   xpos -958
   ypos -1443
   number 1
  }
  Dot {
   name Dot1
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -924
   ypos -1021
  }
  Input {
   inputs 0
   name InputTwixtor
   xpos -528
   ypos -1449
  }
  Dot {
   name Dot2
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -494
   ypos -1388
  }
set Ne05b3200 [stack 0]
  Dot {
   name Dot4
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -631
   ypos -1388
  }
set Ne05b3800 [stack 0]
  Dot {
   name Dot3
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -805
   ypos -1388
  }
  HueKeyer {
   lut {amount {curve 0 K x1.3813833 0.0001485496759 x1.49991715 1.000258446 x1.49991715 1.000258446 x1.500313163 0.0001485496759 S x6 0}
     sat_thrsh {curve 0.8973511457 s0 t-0 0.8973511457 0.8973511457 0.8973511457 0.8973511457 x4 0.8973511457 x6 0.8973511457}}
   name HueKeyer2
   note_font Gotham
   xpos -839
   ypos -1328
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate2
   label "\[value size]"
   note_font Gotham
   xpos -839
   ypos -1294
  }
  Premult {
   name Premult3
   note_font Gotham
   xpos -839
   ypos -1244
  }
push $Ne05b3800
  HueKeyer {
   lut {amount {curve 0 K x0.8890606165 0 x0.9957441688 1 x1.003811121 1 x1.009890079 0 S x6 0}
     sat_thrsh {curve x0.1131925583 0.9034141302 0.9034141302 0.9034141302 0.9034141302 0.9034141302 x4.113192558 0.9034141302 x6.113192558 0.9034141302 s0}}
   name HueKeyer1
   note_font Gotham
   xpos -665
   ypos -1348
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate1
   label "\[value size]"
   note_font Gotham
   xpos -665
   ypos -1314
  }
  Premult {
   name Premult1
   note_font Gotham
   xpos -665
   ypos -1268
  }
  Merge2 {
   inputs 2
   operation in
   bbox B
   name Merge4
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -665
   ypos -1088
  }
push $Ne05b3200
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   note_font Gotham
   xpos -528
   ypos -1093
  }
  Premult {
   name Premult2
   note_font Gotham
   xpos -528
   ypos -1059
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge5
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -528
   ypos -1024
  }
  Output {
   name Output1
   xpos -528
   ypos -924
  }
 end_group
push $Ne05a7a00
 Switch {
  inputs 2
  name MSwitch1
  label "\[value which]"
  note_font Gotham
  xpos 2341
  ypos -706
 }
push $N22a62200
 ABME_Retime.gizmo {
  name ABME_Retime_interpolate
  xpos 1618
  ypos -808
  disable true
 }
push $N22a61c00
 OFlow2 {
  timing2 Frame
  timingOutputSpeed 2
  timingFrame2 {{curve x1 1 x199 100}}
  Advanced 1
  name OFlowPlate
  xpos 1003
  ypos -808
 }
push $Ne0586800
push $N22a61000
 OFlow2 {
  interpolation Blend
  timing2 Frame
  timingOutputSpeed 1
  timingFrame2 {{curve x1 1 x199 100}}
  name OFlowPlateBlend
  xpos -374
  ypos -743
 }
 Switch {
  inputs 7
  which 1
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
   {i6 ""}
  }
  name interpolated_switch
  label "\[value which]"
  xpos 553
  ypos -360
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "MATTE \[frame]\n\[set frame \[frame]\nif \{\$frame % 2 == 0\} \{\n    return \"Generated\"\n\} else \{\n    return \"Original\"\n\}]"
  old_message {{77 65 84 84 69 32 50 50 10 71 101 110 101 114 97 116 101 100}
    }
  old_expression_markers {{6 7 9 17}
    }
  box {0 0 {width} {height}}
  yjustify center
  transforms {{0 2}
    }
  global_font_scale 0.5
  center {320 240}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 480}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 320 240 0 0 1 1 0 0 0 0}
    }
  color_panelDropped true
  name IText4
  xpos 553
  ypos -294
 }
 Retime {
  input.first 2
  input.first_lock true
  input.last 199
  input.last_lock true
  output.first_lock true
  speed 2
  before continue
  after continue
  filter none
  time ""
  name RetimeInterpolated
  label "\[value input.first] -> \[value output.first]\\\\noffset: \[return \[expr \[value output.first]-\[value input.first]]]\\\\nspeed: \[value speed]"
  xpos 553
  ypos -256
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle1
  label "\[value in1] - \[value out1]"
  xpos 553
  ypos -208
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  label "\[value operation]:\\\\n\[value channels]\\\\n\[value channels2]\\\\n\[value channels3]\\\\n\[value channels4]"
  xpos 553
  ypos -174
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "matte interpolation\n\[value matte_interpolation]"
  old_message {{109 97 116 116 101 32 105 110 116 101 114 112 111 108 97 116 105 111 110 10 75 114 111 110 111 115}
    }
  old_expression_markers {{20 25}
    }
  box {0 0 {width} {height}}
  yjustify bottom
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 100 0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 40}
    }
  cursor_position 20
  global_font_scale 0.5
  center {640 360}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 720}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 640 360 0 0 1 1 0 0 0 0}
    }
  color {1 1 1 1}
  name Text1
  xpos 553
  ypos -128
 }
 Dot {
  name Dot14
  note_font_size 24
  note_font_color 0xff
  xpos 587
  ypos 506
 }
set Ne05cf200 [stack 0]
push $N22a64c00
 Dot {
  name Dot40
  note_font_size 24
  note_font_color 0xff
  xpos 8025
  ypos -2059
 }
 OFXcom.genarts.sapphire.time.s_retime_v1 {
  Mode "Retime Speed"
  speed 0.5
  percent_longer 100
  setKnobFlags {percent_longer +HIDDEN}
  percent 200
  setKnobFlags {percent +HIDDEN}
  input_fps 30
  setKnobFlags {input_fps +HIDDEN}
  output_fps 60
  setKnobFlags {output_fps +HIDDEN}
  output_length 30
  setKnobFlags {output_length +HIDDEN}
  input_frame 1
  setKnobFlags {input_frame +HIDDEN}
  result Result
  start_frame 1
  motion_blur 0
  "Flow Tuning" 0
  flow_field_smoothness 0.8
  emphasize_edges 0
  flow_view_scale 0.9
  "Crop Input" 0
  crop_left 0
  crop_right 0
  crop_top 0
  crop_bottom 0
  Enable_GPU true
  version 17.5
  version2 3108654
  name S_Retime2
  xpos 7991
  ypos -1989
  disable true
 }
 TimeOffset {
  time_offset -1
  time ""
  name TimeOffset6
  label "\[value time_offset]"
  xpos 7991
  ypos -1965
 }
push 0
push $N22a99600
 Kronos {
  input.last 99
  retimedChannels all
  timing2 Frame
  timingFrame2 {{curve x1 1 x199 100}}
  motionEstimation Regularized
  vectorDetailReg 1
  strengthReg 1
  name KronosHero
  xpos 6806
  ypos -1957
 }
set Ne05d6200 [stack 0]
push $N22ba7200
 OFXcom.revisionfx.twixtor_v5 {
  Display "Twixtored Output"
  UseGPU ON
  TimeRetimeMethod "Frame Number"
  Speed 100
  Frame {{curve x1 1 x199 100}}
  TrackingQuality Twixtor7_MAX
  setKnobFlags {TrackingQuality +HIDDEN}
  TrackingQualityV2 "DNN - model 1"
  TrackingQualitySelector Sloppy
  GlobalMotion false
  MotionSensitivity 70
  ImagePrep "Gamma Enhance (Trk src is linear?)"
  TrackRGBA false
  Video360 false
  FrameInterp Nearest
  Warping Inverse
  SmartBlend false
  MotionBlurCompensation 0
  MarkSegments "Cut A"
  MarkSegmentsSelector "Select Cut"
  StartFrame 1
  LastFrame 100
  CustomData_DoNotEdit aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  name TwixtorHero
  note_font Gotham
  xpos 7523
  ypos -2008
  disable true
 }
set Ne05d8a00 [stack 0]
 Group {
  inputs 2
  name TwixFix2
  note_font Verdana
  xpos 7523
  ypos -1960
 }
  Input {
   inputs 0
   name InputKronos
   xpos -958
   ypos -1443
   number 1
  }
  Dot {
   name Dot1
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -924
   ypos -1021
  }
  Input {
   inputs 0
   name InputTwixtor
   xpos -528
   ypos -1449
  }
  Dot {
   name Dot2
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -494
   ypos -1388
  }
set Ne05db600 [stack 0]
  Dot {
   name Dot4
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -631
   ypos -1388
  }
set Ne05dbc00 [stack 0]
  Dot {
   name Dot3
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -805
   ypos -1388
  }
  HueKeyer {
   lut {amount {curve 0 K x1.3813833 0.0001485496759 x1.49991715 1.000258446 x1.49991715 1.000258446 x1.500313163 0.0001485496759 S x6 0}
     sat_thrsh {curve 0.8973511457 s0 t-0 0.8973511457 0.8973511457 0.8973511457 0.8973511457 x4 0.8973511457 x6 0.8973511457}}
   name HueKeyer2
   note_font Gotham
   xpos -839
   ypos -1328
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate2
   label "\[value size]"
   note_font Gotham
   xpos -839
   ypos -1294
  }
  Premult {
   name Premult3
   note_font Gotham
   xpos -839
   ypos -1244
  }
push $Ne05dbc00
  HueKeyer {
   lut {amount {curve 0 K x0.8890606165 0 x0.9957441688 1 x1.003811121 1 x1.009890079 0 S x6 0}
     sat_thrsh {curve x0.1131925583 0.9034141302 0.9034141302 0.9034141302 0.9034141302 0.9034141302 x4.113192558 0.9034141302 x6.113192558 0.9034141302 s0}}
   name HueKeyer1
   note_font Gotham
   xpos -665
   ypos -1348
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate1
   label "\[value size]"
   note_font Gotham
   xpos -665
   ypos -1314
  }
  Premult {
   name Premult1
   note_font Gotham
   xpos -665
   ypos -1268
  }
  Merge2 {
   inputs 2
   operation in
   bbox B
   name Merge4
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -665
   ypos -1088
  }
push $Ne05db600
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   note_font Gotham
   xpos -528
   ypos -1093
  }
  Premult {
   name Premult2
   note_font Gotham
   xpos -528
   ypos -1059
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge5
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -528
   ypos -1024
  }
  Output {
   name Output1
   xpos -528
   ypos -924
  }
 end_group
push $Ne05d8a00
 Switch {
  inputs 2
  name MSwitch2
  label "\[value which]"
  note_font Gotham
  xpos 7523
  ypos -1934
 }
push $N22a67e00
 ABME_Retime.gizmo {
  name ABME_Retime3
  xpos 7304
  ypos -1991
  disable true
 }
push $N22a98a00
 OFlow2 {
  input.last 99
  timing2 Frame
  timingFrame2 {{curve x1 1 x199 100}}
  vectorDetailLocal 0.15
  smoothnessLocal 0.325
  resampleType Lanczos6
  Shutter 1
  Advanced 1
  name OFlowHero
  xpos 7075
  ypos -1990
 }
push $Ne05d6200
push $N22a9a200
 OFlow2 {
  input.last 99
  interpolation Blend
  timing2 Frame
  timingOutputSpeed 1
  timingFrame2 {{curve x1 1 x199 100}}
  name OFlowBlend
  xpos 6554
  ypos -1945
 }
 Switch {
  inputs 7
  which 1
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
   {i6 ""}
  }
  name hero_interpolation_swtich
  label "\[value which]"
  xpos 7075
  ypos -1808
 }
 Dot {
  name Dot35
  note_font_size 24
  note_font_color 0xff
  xpos 7109
  ypos -1702
 }
set Ne05e8c00 [stack 0]
 Dot {
  name Dot22
  note_font_size 24
  note_font_color 0xff
  xpos 7489
  ypos -1551
 }
 NNFlowVector {  iterations 15
  name NNFlowVector1
  xpos 7455
  ypos -1458
  disable true
 
  xpos 7455
  ypos -1458
  selected false
  disable true
 
  xpos 7455
  ypos -1458
  selected false
  disable true
 
  xpos 7455
  ypos -1458
  selected false
  disable true
 
  xpos 7455
  ypos -1458
  selected false
  disable true
 
  xpos 7455
  ypos -1458
  selected false
  disable true
 
  xpos 7455
  ypos -1458
  selected false
  disable true
 
  xpos 7455
  ypos -1458
  selected false
  disable true
 
  xpos 7455
  ypos -1458
  selected false
  disable true
 
  xpos 7455
  ypos -1458
  selected false
  disable true
 
  xpos 7455
  ypos -1441
  selected false
  disable true
 
  xpos 7455
  ypos -1441
  selected false
  disable true
 
  xpos 7455
  ypos -1441
  selected false
  disable true
 
  xpos 7455
  ypos -1441
  selected false
  disable true
 
  xpos 7455
  ypos -1441
  selected false
  disable true
 }
push $Ne05e8c00
 Dot {
  name Dot15
  note_font_size 24
  note_font_color 0xff
  xpos 7295
  ypos -1552
 }
 RAFT.gizmo {
  name RAFT1
  xpos 7261
  ypos -1439
  disable true
 }
 VectorToMotion {
  name VectorToMotion3
  xpos 7261
  ypos -1382
  scale {{"proxy ? proxy_scale.0 : 1"} {"proxy ? proxy_scale.1 : 1"}}
 }
push $Ne05e8c00
 Dot {
  name Dot21
  note_font_size 24
  note_font_color 0xff
  xpos 7128
  ypos -1552
 }
 ABME_SV.gizmo {
  name ABME_SV1
  xpos 7094
  ypos -1438
  disable true
 }
 VectorToMotion {
  name VectorToMotion4
  xpos 7094
  ypos -1374
  scale {{"proxy ? proxy_scale.0 : 1"} {"proxy ? proxy_scale.1 : 1"}}
 }
push $Ne05e8c00
 Dot {
  name Dot19
  note_font_size 24
  note_font_color 0xff
  xpos 6963
  ypos -1552
 }
 SmartVector {
  name SmartVector2
  xpos 6929
  ypos -1433
 }
 VectorToMotion {
  name VectorToMotion5
  xpos 6939
  ypos -1375
  scale {{"proxy ? proxy_scale.0 : 1"} {"proxy ? proxy_scale.1 : 1"}}
 }
push $Ne05e8c00
 Dot {
  name Dot17
  note_font_size 24
  note_font_color 0xff
  xpos 6823
  ypos -1552
 }
 VectorGenerator {
  motionEstimation Regularized
  name VectorGenerator1
  xpos 6789
  ypos -1433
 }
 Switch {
  inputs 5
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
  }
  name vector_switch
  label "\[value which]"
  xpos 7023
  ypos -1222
 }
set Ne0721800 [stack 0]
 Dot {
  name Dot27
  note_font_size 24
  note_font_color 0xff
  xpos 5236
  ypos -1214
 }
 Shuffle2 {
  fromInput1 {{0} B}
  in1 motion
  fromInput2 {{0} B}
  mappings "4 forward.u 0 0 rgba.red 0 0 forward.v 0 1 rgba.green 0 1 backward.u 0 2 rgba.blue 0 2 backward.v 0 3 rgba.alpha 0 3"
  name Shuffle3
  label "\[value in1] - \[value out1]"
  xpos 5202
  ypos -1118
  postage_stamp true
 }
 Dot {
  name Dot26
  note_font_size 24
  note_font_color 0xff
  xpos 5236
  ypos -964
 }
set Ne0727000 [stack 0]
push $N22a63400
 Dot {
  name Dot25
  note_font_size 24
  note_font_color 0xff
  xpos 4726
  ypos -1788
 }
 OFlow2 {
  input.last 199
  interpolation Frame
  timingFrame2 {{curve x1 1 x199 397}}
  name DoublePlateFrames
  xpos 4692
  ypos -1731
 }
set Ne0728800 [stack 0]
 Dot {
  name Dot32
  note_font_size 24
  note_font_color 0xff
  xpos 4916
  ypos -1728
 }
set Ne071ec00 [stack 0]
 Dot {
  name Dot29
  note_font_size 24
  note_font_color 0xff
  xpos 5677
  ypos -1728
 }
 TimeOffset {
  time_offset -1
  time ""
  name TimeOffset5
  label "\[value time_offset]"
  xpos 5643
  ypos -900
 }
 Crop {
  box {0 0 {Input1.width} {Input1.height}}
  name Crop2
  xpos 5643
  ypos -867
 }
set N27a42a00 [stack 0]
 Copy {
  inputs 2
  from0 forward.u
  to0 forward.u
  from1 forward.v
  to1 forward.v
  from2 backward.u
  to2 backward.u
  from3 backward.v
  to3 backward.v
  name Copy4
  xpos 5643
  ypos -681
 }
 IDistort {
  channels rgba
  uv forward
  name IDistort5
  label "\[value uv]"
  xpos 5643
  ypos -488
 }
push $Ne0721800
 Dot {
  name Dot34
  note_font_size 24
  note_font_color 0xff
  xpos 8261
  ypos -1214
 }
set Ne072a000 [stack 0]
 Shuffle2 {
  fromInput1 {{0} B}
  in1 backward
  fromInput2 {{0} B}
  mappings "4 black -1 -1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3 backward.u 0 0 rgba.red 0 0 backward.v 0 1 rgba.green 0 1"
  name Shuffle_Backward
  label "\[value in1] - \[value out1]"
  xpos 8227
  ypos -1120
  postage_stamp true
 }
 Multiply {
  channels rgb
  value {{"proxy? 1/width/proxy_scale:1/width"} {"proxy? 1/height/proxy_scale:1/height"} 1 1}
  name Multiply5
  xpos 8227
  ypos -994
 }
 Expression {
  expr0 "(x+0.5)/width - r"
  expr1 "(y+0.5)/height - g"
  name Expression7
  xpos 8227
  ypos -951
 }
push $N27a42a00
 STMap {
  inputs 2
  uv rgb
  name STMap1
  xpos 8227
  ypos -871
 }
 Dot {
  name Dot42
  note_font_size 24
  note_font_color 0xff
  xpos 8261
  ypos -480
 }
 Switch {
  inputs 2
  which 1
  name SwitchForward
  label "\[value which]"
  xpos 7415
  ypos -488
 }
 Dot {
  name Dot41
  note_font_size 24
  note_font_color 0xff
  xpos 7449
  ypos -87
 }
set Ne072da00 [stack 0]
push $Ne0727000
push $Ne071ec00
 TimeOffset {
  time_offset 1
  time ""
  name TimeOffset1
  label "\[value time_offset]"
  xpos 4882
  ypos -889
 }
 Crop {
  box {0 0 {Input1.width} {Input1.height x28 720}}
  name Crop1
  xpos 4882
  ypos -836
 }
set Ne072e600 [stack 0]
 Copy {
  inputs 2
  from0 forward.u
  to0 forward.u
  from1 forward.v
  to1 forward.v
  from2 backward.u
  to2 backward.u
  from3 backward.v
  to3 backward.v
  name Copy5
  xpos 4882
  ypos -678
 }
 IDistort {
  channels rgba
  uv backward
  name IDistort4
  label "\[value uv]"
  xpos 4882
  ypos -356
 }
push $Ne072a000
 Dot {
  name Dot33
  note_font_size 24
  note_font_color 0xff
  xpos 8638
  ypos -1214
 }
 Shuffle2 {
  fromInput1 {{0} B}
  in1 forward
  fromInput2 {{0} B}
  mappings "4 black -1 -1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3 forward.u 0 0 rgba.red 0 0 forward.v 0 1 rgba.green 0 1"
  name Shuffle_forward
  label "\[value in1] - \[value out1]"
  xpos 8604
  ypos -1121
  postage_stamp true
 }
 Multiply {
  channels rgb
  value {{"proxy? 1/width/proxy_scale:1/width"} {"proxy? 1/height/proxy_scale:1/height"} 1 1}
  name Multiply1
  xpos 8604
  ypos -1000
 }
 Expression {
  expr0 "(x+0.5)/width - r"
  expr1 "(y+0.5)/height - g"
  name Expression1
  xpos 8604
  ypos -957
 }
push $Ne072e600
 STMap {
  inputs 2
  uv rgb
  name STMap2
  xpos 8604
  ypos -841
 }
 Dot {
  name Dot43
  note_font_size 24
  note_font_color 0xff
  xpos 8638
  ypos -348
 }
 Switch {
  inputs 2
  which 1
  name SwitchBackward
  label "\[value which]"
  xpos 6654
  ypos -356
 }
 Dot {
  name Dot39
  note_font_size 24
  note_font_color 0xff
  xpos 6688
  ypos -87
 }
set Ne0733000 [stack 0]
 Switch {
  inputs 2
  which {{frame%2 x43 1}}
  name Switch2
  label "\[value which]"
  xpos 6994
  ypos -94
 }
set Ne0733600 [stack 0]
 Kronos {
  input.first 0
  input.last 743
  retimedChannels all
  timing2 Frame
  timingFrame2 {{frame+.5}}
  motionEstimation Regularized
  name Kronos1
  xpos 6913
  ypos 362
 }
set Ne0733c00 [stack 0]
push $Ne0733600
 OFXcom.revisionfx.twixtor_v5 {
  Display "Twixtored Output"
  UseGPU ON
  TimeRetimeMethod "Frame Number"
  Speed 100
  Frame {{frame+.5}}
  TrackingQuality Twixtor7_MAX
  setKnobFlags {TrackingQuality +HIDDEN}
  TrackingQualityV2 "DNN - model 1"
  TrackingQualitySelector Sloppy
  GlobalMotion false
  MotionSensitivity 70
  ImagePrep "Gamma Enhance (Trk src is linear?)"
  TrackRGBA false
  Video360 false
  FrameInterp Nearest
  Warping Inverse
  SmartBlend false
  MotionBlurCompensation 0
  MarkSegments "Cut A"
  MarkSegmentsSelector "Select Cut"
  StartFrame 1
  LastFrame 30000
  CustomData_DoNotEdit aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  name Twixtor1
  note_font Gotham
  xpos 7125
  ypos 286
 }
set Ne0734800 [stack 0]
 Group {
  inputs 2
  name TwixFix3
  note_font Verdana
  xpos 7125
  ypos 365
 }
  Input {
   inputs 0
   name InputKronos
   xpos -958
   ypos -1443
   number 1
  }
  Dot {
   name Dot1
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -924
   ypos -1021
  }
  Input {
   inputs 0
   name InputTwixtor
   xpos -528
   ypos -1449
  }
  Dot {
   name Dot2
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -494
   ypos -1388
  }
set Ne0736c00 [stack 0]
  Dot {
   name Dot4
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -631
   ypos -1388
  }
set Ne0737200 [stack 0]
  Dot {
   name Dot3
   note_font "Gotham Bold Italic"
   note_font_size 24
   note_font_color 0xff
   xpos -805
   ypos -1388
  }
  HueKeyer {
   lut {amount {curve 0 K x1.3813833 0.0001485496759 x1.49991715 1.000258446 x1.49991715 1.000258446 x1.500313163 0.0001485496759 S x6 0}
     sat_thrsh {curve 0.8973511457 s0 t-0 0.8973511457 0.8973511457 0.8973511457 0.8973511457 x4 0.8973511457 x6 0.8973511457}}
   name HueKeyer2
   note_font Gotham
   xpos -839
   ypos -1328
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate2
   label "\[value size]"
   note_font Gotham
   xpos -839
   ypos -1294
  }
  Premult {
   name Premult3
   note_font Gotham
   xpos -839
   ypos -1244
  }
push $Ne0737200
  HueKeyer {
   lut {amount {curve 0 K x0.8890606165 0 x0.9957441688 1 x1.003811121 1 x1.009890079 0 S x6 0}
     sat_thrsh {curve x0.1131925583 0.9034141302 0.9034141302 0.9034141302 0.9034141302 0.9034141302 x4.113192558 0.9034141302 x6.113192558 0.9034141302 s0}}
   name HueKeyer1
   note_font Gotham
   xpos -665
   ypos -1348
  }
  Dilate {
   channels alpha
   size -0.5
   name Dilate1
   label "\[value size]"
   note_font Gotham
   xpos -665
   ypos -1314
  }
  Premult {
   name Premult1
   note_font Gotham
   xpos -665
   ypos -1268
  }
  Merge2 {
   inputs 2
   operation in
   bbox B
   name Merge4
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -665
   ypos -1088
  }
push $Ne0736c00
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   note_font Gotham
   xpos -528
   ypos -1093
  }
  Premult {
   name Premult2
   note_font Gotham
   xpos -528
   ypos -1059
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge5
   label "\[if \{\[value mix]<1\} \{ value mix \}]"
   note_font Gotham
   xpos -528
   ypos -1024
  }
  Output {
   name Output1
   xpos -528
   ypos -924
  }
 end_group
push $Ne0734800
 Switch {
  inputs 2
  name MSwitch3
  label "\[value which]"
  note_font Gotham
  xpos 7125
  ypos 396
 }
push $Ne0733c00
push $Ne0733600
 OFlow2 {
  input.last 2
  timing2 Frame
  timingOutputSpeed 1
  timingFrame2 {{frame+.5}}
  name OFlow1
  xpos 6798
  ypos 373
 }
push $Ne0733000
push $Ne072da00
 Merge2 {
  inputs 2
  operation average
  bbox B
  name Merge5
  label "\[if \{\[value mix]<1\} \{ value mix \}]"
  xpos 6654
  ypos 369
 }
push $Ne0733000
push $Ne072da00
 Switch {
  inputs 6
  which 4
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
  }
  name SwitchMotionType
  label "\[value which]"
  xpos 6798
  ypos 542
 }
push $Ne0728800
 Dot {
  name Dot28
  note_font_size 24
  note_font_color 0xff
  xpos 4726
  ypos 598
 }
 Switch {
  inputs 2
  which {{"frame % 2"}}
  name Switch1
  label "\[value which]"
  xpos 6798
  ypos 590
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "hero interpolation\n\[value hero_interpolation]\nvector generator\n\[value vector_generator]"
  old_message {{104 101 114 111 32 105 110 116 101 114 112 111 108 97 116 105 111 110 10 75 114 111 110 111 115 10 118 101 99 116 111 114 32 103 101 110 101 114 97 116 111 114 10 86 101 99 116 111 114 71 101 110 101 114 97 116 111 114}
    }
  old_expression_markers {{19 24 43 57}
    }
  box {0 0 {width} {height}}
  yjustify bottom
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 0 98.5 1 98.5 2 98.5 3 98.5 4 98.5 5 98.5 6 98.5 7 98.5 8 98.5 9 98.5 10 98.5 11 98.5 12 98.5 13 98.5 14 98.5 15 98.5 16 98.5 17 98.5 19 100 20 100 21 100 22 100 19 40 20 40 21 40 22 40 18 40 18 40 26 40 27 40 28 40 29 40 30 40 31 40 32 40 33 40 34 40 35 40 36 40 37 40 38 40 39 40 40 40 41 40 26 100 42 40 43 100 44 100 45 100 46 100 42 50 43 50 44 50 45 50 46 50}
    }
  baseline_values {{0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0}
    }
  cursor_position 63
  global_font_scale 0.5
  center {640 360}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 720}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 640 360 0 0 1 1 0 0 0 0}
    }
  name hero_interpolation_text
  xpos 6798
  ypos 693
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "distortion method\n\[value distortion_method]\nvector post process\n\[value vector_post]"
  old_message {{100 105 115 116 111 114 116 105 111 110 32 109 101 116 104 111 100 10 73 68 105 115 116 111 114 116 10 118 101 99 116 111 114 32 112 111 115 116 32 112 114 111 99 101 115 115 10 75 114 111 110 111 115}
    }
  old_expression_markers {{18 25 47 52}
    }
  box {0 0 {width} {height}}
  xjustify right
  yjustify bottom
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 100 19 100 20 100 21 100 22 100 26 40 27 40 28 40 29 40 30 40 31 40 32 40 33 40 34 40 35 40 36 40 37 40 38 40 39 40 40 40 41 40 42 40 43 40 44 40 45 40 46 40 47 100 48 100 49 100 0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 40 21 40 22 40 26 40 27 40 28 40 29 40 30 40 31 40 32 40 33 40 34 40 35 40 36 40 37 40 38 40 39 40 40 40 41 40 42 40 43 40 44 40 45 40 46 40 47 40 48 40 49 40}
    }
  cursor_position 18
  global_font_scale 0.5
  center {640 360}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{1280 720}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 640 360 0 0 1 1 0 0 0 0}
    }
  name vectortype_output
  xpos 6798
  ypos 756
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "MATTE \[frame]\n\[set frame \[frame]\nif \{\$frame % 2 == 0\} \{\n    return \"Original\"\n\} else \{\n    return \"Generated\"\n\}]"
  old_message {{77 65 84 84 69 32 50 49 10 71 101 110 101 114 97 116 101 100}
    }
  old_expression_markers {{6 7 9 17}
    }
  box {0 0 {width} {height}}
  yjustify center
  transforms {{0 2}
    }
  cursor_position 108
  global_font_scale 0.5
  center {320 240}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 480}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 320 240 0 0 1 1 0 0 0 0}
    }
  name frame_information
  xpos 6798
  ypos 800
 }
 Retime {
  input.first_lock true
  input.last 199
  speed 2
  before continue
  after continue
  filter none
  time ""
  name RetimeExtracted
  label "\[value input.first] -> \[value output.first]\\\\noffset: \[return \[expr \[value output.first]-\[value input.first]]]\\\\nspeed: \[value speed]"
  xpos 6798
  ypos 832
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle2
  label "\[value in1] - \[value out1]"
  xpos 6798
  ypos 872
 }
 Remove {
  operation keep
  channels rgba
  name Remove2
  label "\[value operation]:\\\\n\[value channels]\\\\n\[value channels2]\\\\n\[value channels3]\\\\n\[value channels4]"
  xpos 6798
  ypos 988
 }
 Dot {
  name Dot13
  note_font_size 24
  note_font_color 0xff
  xpos 6832
  ypos 1201
 }
set Ne0755800 [stack 0]
 Merge2 {
  inputs 2
  operation average
  bbox B
  name Merge1
  label "\[if \{\[value mix]<1\} \{ value mix \}]"
  xpos 6798
  ypos 1961
 }
push $Ne0755800
push $Ne05cf200
 Switch {
  inputs 3
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name parent_method_switch
  label "\[value which]"
  xpos 553
  ypos 1956
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "MATTE \[frame]"
  old_message {{77 65 84 84 69 32 49 49}
    }
  old_expression_markers {{6 7}
    }
  box {0 0 {width} {height}}
  transforms {{0 2}
    }
  cursor_position 5
  global_font_scale 0.5
  center {320 240}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{3.5 124.25}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 320 240 0 0 1 1 0 0 0 0}
    }
  name MatteText
  xpos 35
  ypos 1962
 }
 Dot {
  name Dot23
  note_font_size 24
  note_font_color 0xff
  xpos -1276
  ypos 1975
 }
set Ne075ba00 [stack 0]
 Dot {
  name Dot44
  note_font_size 24
  note_font_color 0xff
  xpos -1276
  ypos 2694
 }
set Ne075a600 [stack 0]
 Dot {
  name Dot45
  note_font_size 24
  note_font_color 0xff
  xpos -1276
  ypos 3107
 }
push $N22aaca00
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "HERO \[frame]"
  old_message {{72 69 82 79 32 49 49}
    }
  old_expression_markers {{5 6}
    }
  box {0 0 {width} {height}}
  xjustify right
  transforms {{0 2}
    }
  global_font_scale 0.5
  center {320 240}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{3.5 124.25}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 320 240 0 0 1 1 0 0 0 0}
    }
  name HeroText
  xpos -1652
  ypos -2266
 }
 Dot {
  name Dot1
  label "This pipe outputs unaltered hero frame"
  note_font_size 24
  note_font_color 0xff
  xpos -1618
  ypos -2090
 }
 Dot {
  name Dot24
  note_font_size 24
  note_font_color 0xff
  xpos -1623
  ypos 1962
 }
set Ne0760200 [stack 0]
push $Ne075ba00
 Merge2 {
  inputs 2
  operation difference
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name difference_merge
  label "\[if \{\[value mix]<1\} \{ value mix \}]"
  xpos -1506
  ypos 2340
 }
push $Ne0760200
push $Ne075a600
 Switch {
  inputs 2
  name output_switch
  label "\[value which]"
  xpos -1657
  ypos 2686
 }
 Switch {
  inputs 2
  name diff_switch
  label "\[value which]"
  xpos -1657
  ypos 2805
 }
 Shuffle2 {
  inputs 2
  fromInput1 {{1} B A}
  out1 matte
  fromInput2 {{1} B A}
  mappings "3 rgba.red 0 0 matte.red 0 0 rgba.green 0 1 matte.green 0 1 rgba.blue 0 2 matte.blue 0 2"
  name embed_shuffle
  label "\[value in1] - \[value out1]"
  xpos -1657
  ypos 3075
  postage_stamp true
 }
 FrameRange {
  first_frame 1
  last_frame 50
  time ""
  name OutputFrameRange2
  label "\[value first_frame]-\[value last_frame]"
  xpos -1657
  ypos 3337
 }
 Output {
  name Output1
  xpos -1657
  ypos 3475
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0xdfff00ff
  label "The lastframe should also be a matte frame"
  note_font_size 20
  xpos -957
  ypos -3625
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xdfff00ff
  label "Even Frames are Generated\n"
  note_font_size 20
  xpos 7164
  ypos -1057
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xdfff00ff
  label "The GhostFrameExtractor expects a matte frame to be the first frame.\nSince clips are delivered randomly, this will add a matte frame up front\nif needed."
  note_font_size 20
  xpos -1068
  ypos -4099
 }
 StickyNote {
  inputs 0
  name StickyNote5
  tile_color 0xdfff00ff
  label "This little error correction bit\nhandles an ABME error where if\nthere is no input when it's created\nit produces and error.\n\nIf altering the gizmo and saving a new\nverion, detach the input before saving.\n\nAlso, make sure to reset all the settings\nto something that is universal. Like \nEverything using Kronos and VectorGenerator\n"
  note_font_size 20
  xpos -2083
  ypos -4931
 }
 StickyNote {
  inputs 0
  name StickyNote6
  tile_color 0xdfff00ff
  label "Backward\nFROM PREVIOUS FRAME ---> TO ACTUAL FRAME\n\nForward\nACTUAL FRAME <--- FROM NEXT FRAME "
  note_font_size 20
  xpos 4214
  ypos -820
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xdfff00ff
  label "This switch alternates between real frames and generated frames\nGENERATED FRAMES ARE ODD"
  note_font_size 20
  xpos 6570
  ypos 629
 }
 StickyNote {
  inputs 0
  name StickyNote7
  tile_color 0xdfff00ff
  label "this switch makes a 2 frame clip"
  note_font_size 20
  xpos 6904
  ypos -136
 }
end_group
